(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{1531:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(146),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardStepSummary";var d=[{title:"First Name",value:"John"},{title:"Last Name",value:"Doe"},{title:"Email",value:"john.doe@email.com"}];Object(o.storiesOf)("Wizard (deprecated) > WizardStepSummary",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardStepSummary from "@automatic-labs/ui-components/wizard/wizard-step-summary";\n\nWizardStepSummary.displayName = "WizardStepSummary";\n\nconst summaryDetails = [\n  { title: "First Name", value: "John" },\n  { title: "Last Name", value: "Doe" },\n  { title: "Email", value: "john.doe@email.com" }\n];\n\nstoriesOf("Wizard (deprecated) > WizardStepSummary", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step Summary is a component to display a summary of information from the previous steps and going to the next step.\n    `)(() => (\n      <WizardStepSummary\n        summary={summaryDetails}\n        advanceButtonLabel={text("Button label", "Done")}\n        headerTitle={text("Title", "Sample text added to title")}\n        headerCaption={text("Caption", "Sample caption")}\n        headerPreTitle={text("PreTitle", "Sample text")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepSummary@Default":{startLoc:{col:4,line:18},endLoc:{col:6,line:29}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Wizard Step Summary is a component to display a summary of information from the previous steps and going to the next step.\n    ")(function(){return a.a.createElement(c.a,{summary:d,advanceButtonLabel:Object(r.text)("Button label","Done"),headerTitle:Object(r.text)("Title","Sample text added to title"),headerCaption:Object(r.text)("Caption","Sample caption"),headerPreTitle:Object(r.text)("PreTitle","Sample text")})}))}).call(this,n(15)(e))},1532:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(91),s=n(14).withStorySource;c.WizardStepSlider.displayName="WizardStepSlider",Object(o.storiesOf)("Wizard (deprecated) > WizardStepSlider",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs } from "@storybook/addon-knobs";\nimport {\n  WizardInputSlider,\n  WizardStepSlider\n} from "@automatic-labs/ui-components/wizard";\n\nWizardStepSlider.displayName = "WizardStepSlider";\n\nstoriesOf("Wizard (deprecated) > WizardStepSlider", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step Slider is a component that allows you to choose a value from a fixed scale.\n\n      &nbsp;\n\n      Through the properties, it is possible to select the minimum value using \\`min\\`, maximum value using \\`max\\`, interval using \\`step\\`,\n      display format of the value using \\`formatLabel\\` or determine own scale using \\`customScale\\`.\n    `)(() => (\n      <WizardStepSlider\n        // defaultValue={18}\n        min={1}\n        max={99}\n        step={1}\n        headerPreTitle="Set age"\n        headerTitle="Please select your age"\n        headerCaption="Some extra caption text"\n        advanceButtonLabel="Next step"\n        onAdvance={action("Button clicked")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepSlider@Default":{startLoc:{col:4,line:16},endLoc:{col:6,line:36}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Step Slider is a component that allows you to choose a value from a fixed scale.\n\n      &nbsp;\n\n      Through the properties, it is possible to select the minimum value using `min`, maximum value using `max`, interval using `step`,\n      display format of the value using `formatLabel` or determine own scale using `customScale`.\n    ")(function(){return a.a.createElement(c.WizardStepSlider,{min:1,max:99,step:1,headerPreTitle:"Set age",headerTitle:"Please select your age",headerCaption:"Some extra caption text",advanceButtonLabel:"Next step",onAdvance:Object(i.action)("Button clicked")})}))}).call(this,n(15)(e))},1533:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(149),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardStepSelector";var p=[{value:0,title:"Item One",caption:"The caption One"},{value:1,title:"Item Two",caption:"The caption Two"},{value:2,title:"Item Three",caption:"The caption Three"}],m=[1,2];Object(o.storiesOf)("Wizard (deprecated) > WizardStepSelector",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardStepSelector from "@automatic-labs/ui-components/wizard/wizard-step-selector";\n\nWizardStepSelector.displayName = "WizardStepSelector";\n\nconst options = [\n  {\n    value: 0,\n    title: "Item One",\n    caption: "The caption One"\n  },\n  {\n    value: 1,\n    title: "Item Two",\n    caption: "The caption Two"\n  },\n  {\n    value: 2,\n    title: "Item Three",\n    caption: "The caption Three"\n  }\n];\n\nconst selected = [1, 2];\n\nstoriesOf("Wizard (deprecated) > WizardStepSelector", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step Selector is a component that allows choosing one of the more variables.\n    `)(() => (\n      <WizardStepSelector\n        advanceButtonLabel={text("Button label", "Next step")}\n        headerPreTitle={text("PreTitle", "Sample text")}\n        headerTitle={text("Title", "Sample text added to title")}\n        headerCaption={text("Caption", "This is a sample caption")}\n        onAdvance={action("Button clicked")}\n        onChange={action("On change")}\n        defaultValue={1}\n        options={options}\n      />\n    ))\n  )\n  .add(\n    "Multi select",\n    withInfo(`\n      Wizard Step Selector is a component that allows choosing variables.\n\n      &nbsp;\n      \n      In this view, Wizard Step Selector is displayed with the property \\`isMultiSelect: true\\`, allowing to choosing a few of the more variables.\n    `)(() => (\n      <WizardStepSelector\n        advanceButtonLabel={text("Button label", "Next step")}\n        headerPreTitle={text("PreTitle", "Sample text")}\n        headerTitle={text("Title", "Sample text added to title")}\n        headerCaption={text("Caption", "This is a sample caption")}\n        onAdvance={action("Button clicked")}\n        onChange={action("On change")}\n        defaultValue={selected}\n        options={options}\n        isMultiSelect\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepSelector@Multi select":{startLoc:{col:4,line:50},endLoc:{col:6,line:69}},"Wizard (deprecated) > WizardStepSelector@Default":{startLoc:{col:4,line:33},endLoc:{col:6,line:47}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Step Selector is a component that allows choosing one of the more variables.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Next step"),headerPreTitle:Object(l.text)("PreTitle","Sample text"),headerTitle:Object(l.text)("Title","Sample text added to title"),headerCaption:Object(l.text)("Caption","This is a sample caption"),onAdvance:Object(i.action)("Button clicked"),onChange:Object(i.action)("On change"),defaultValue:1,options:p})})).add("Multi select",Object(r.withInfo)("\n      Wizard Step Selector is a component that allows choosing variables.\n\n      &nbsp;\n      \n      In this view, Wizard Step Selector is displayed with the property `isMultiSelect: true`, allowing to choosing a few of the more variables.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Next step"),headerPreTitle:Object(l.text)("PreTitle","Sample text"),headerTitle:Object(l.text)("Title","Sample text added to title"),headerCaption:Object(l.text)("Caption","This is a sample caption"),onAdvance:Object(i.action)("Button clicked"),onChange:Object(i.action)("On change"),defaultValue:m,options:p,isMultiSelect:!0})}))}).call(this,n(15)(e))},1545:function(e,t){},1547:function(e,t){},1552:function(e,t,n){"use strict";(function(e){var t=n(70),a=n.n(t),o=n(0),i=n.n(o),r=n(5),l=n(4),c=n(3),s=n(1),d=n(212),p=n.n(d),m=(n(1551),n(14).withStorySource);function u(e){var t=[{value:"United Kingdom, Europe",title:"United Kingdom",caption:"Europe",icon:"http://via.placeholder.com/30x30"},{value:"United States, North America",title:"United States",caption:"North America",icon:"http://via.placeholder.com/30x30"},{value:"Uruguay, South America",title:"Uruguay",caption:"South America",icon:"http://via.placeholder.com/30x30"},{value:"united kingdom, europe",title:"United Kingdom",caption:"Europe",icon:"http://via.placeholder.com/30x30"},,{value:"united states, north america",title:"United States",caption:"North America",icon:"http://via.placeholder.com/30x30"},{value:"uruguay, south america",title:"Uruguay",caption:"South America",icon:"http://via.placeholder.com/30x30"}].filter(function(t){return t.value.startsWith(e)});return new a.a(function(n){setTimeout(function(){return n(e?t:[])},500)})}p.a.displayName="WizardStepSearchInput",Object(r.storiesOf)("Wizard (deprecated) > WizardStepSearchInput",e).addDecorator(m('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport WizardStepSearchInput from "@automatic-labs/ui-components/wizard/wizard-step-search-input";\nimport { STATUS_CODES } from "http";\n\nWizardStepSearchInput.displayName = "WizardStepSearchInput";\n\nfunction searchAdresses(input) {\n  const filteredList = [\n    {\n      value: "United Kingdom, Europe",\n      title: "United Kingdom",\n      caption: "Europe",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "United States, North America",\n      title: "United States",\n      caption: "North America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "Uruguay, South America",\n      title: "Uruguay",\n      caption: "South America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "united kingdom, europe",\n      title: "United Kingdom",\n      caption: "Europe",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    ,\n    {\n      value: "united states, north america",\n      title: "United States",\n      caption: "North America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "uruguay, south america",\n      title: "Uruguay",\n      caption: "South America",\n      icon: "http://via.placeholder.com/30x30"\n    }\n  ].filter(({ value }) => value.startsWith(input));\n\n  return new Promise(resolveFn => {\n    setTimeout(() => resolveFn(input ? filteredList : []), 500);\n  });\n}\n\nstoriesOf("Wizard (deprecated) > WizardStepSearchInput", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step Search Input is a component that allows searching for information.\n\n      &nbsp;\n    \n      The required property of the component is \\`searchResults\\`, which is a list of hints.\n    `)(() => (\n      <WizardStepSearchInput\n        searchResults={searchAdresses}\n        headerPreTitle="Sample text"\n        headerTitle="What country are you from?"\n        headerCaption="Please start with the letter \'U\'"\n        advanceButtonLabel="Next step"\n        inputPlaceholder="U..."\n        onChange={action("On change")}\n        onAdvance={action("Button clicked")}\n        debounce={300}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepSearchInput@Default":{startLoc:{col:4,line:60},endLoc:{col:6,line:79}}})).addDecorator(s.withKnobs).add("Default",Object(c.withInfo)("\n      Wizard Step Search Input is a component that allows searching for information.\n\n      &nbsp;\n    \n      The required property of the component is `searchResults`, which is a list of hints.\n    ")(function(){return i.a.createElement(p.a,{searchResults:u,headerPreTitle:"Sample text",headerTitle:"What country are you from?",headerCaption:"Please start with the letter 'U'",advanceButtonLabel:"Next step",inputPlaceholder:"U...",onChange:Object(l.action)("On change"),onAdvance:Object(l.action)("Button clicked"),debounce:300})}))}).call(this,n(15)(e))},1553:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(116),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardStepProcess",Object(o.storiesOf)("Wizard (deprecated) > WizardStepProcess",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardStepProcess from "@automatic-labs/ui-components/wizard/wizard-process-indicator";\n\nWizardStepProcess.displayName = "WizardStepProcess";\n\nstoriesOf("Wizard (deprecated) > WizardStepProcess", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Active",\n    withInfo(`\n      The Wizard Step Process component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`processState: active\\`.\n    `)(() => (\n      <WizardStepProcess\n        processState="active"\n        messageText={text("Message text", "The message text")}\n      />\n    ))\n  )\n  .add(\n    "Complete",\n    withInfo(`\n      The Wizard Step Process component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`processState: complete\\`.\n    `)(() => (\n      <WizardStepProcess\n        processState="complete"\n        messageText={text("Message text", "The message text")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepProcess@Complete":{startLoc:{col:4,line:27},endLoc:{col:6,line:39}},"Wizard (deprecated) > WizardStepProcess@Active":{startLoc:{col:4,line:12},endLoc:{col:6,line:24}}})).addDecorator(r.withKnobs).add("Active",Object(i.withInfo)("\n      The Wizard Step Process component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `processState: active`.\n    ")(function(){return a.a.createElement(c.a,{processState:"active",messageText:Object(r.text)("Message text","The message text")})})).add("Complete",Object(i.withInfo)("\n      The Wizard Step Process component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `processState: complete`.\n    ")(function(){return a.a.createElement(c.a,{processState:"complete",messageText:Object(r.text)("Message text","The message text")})}))}).call(this,n(15)(e))},1554:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(56),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardStepInput";var p={text:"Text",email:"Email",password:"Password",number:"Number",search:"Search",date:"Date"};Object(o.storiesOf)("Wizard (deprecated) > WizardStepInput",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, text, select } from "@storybook/addon-knobs";\nimport WizardStepInput from "@automatic-labs/ui-components/wizard/wizard-step-input";\n\nWizardStepInput.displayName = "WizardStepInput";\n\nconst inputTypeText = "text";\nconst inputTypeEmail = "email";\nconst inputTypePassword = "password";\nconst inputTypeNumber = "number";\nconst inputTypeSearch = "search";\nconst inputTypeDate = "date";\nconst inputTypeSelect = {\n  text: "Text",\n  email: "Email",\n  password: "Password",\n  number: "Number",\n  search: "Search",\n  date: "Date"\n};\n\nstoriesOf("Wizard (deprecated) > WizardStepInput", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Text",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: text\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeText)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Email",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: email\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeEmail)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Password",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: password\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypePassword)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Number",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: number\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeNumber)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Search",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: search\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeSearch)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Date",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`inputType: date\\`.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        headerCaption={text("Header caption", "Header caption")}\n        headerPreTitle={text("Header PreTitle", "Sample text")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeDate)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", false)}\n      />\n    ))\n  )\n  .add(\n    "Multiline",\n    withInfo(`\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property \\`isMultiline: true\\`, allowing to enter content in many lines.\n    `)(() => (\n      <WizardStepInput\n        advanceButtonLabel={text("Button label", "Button label")}\n        headerTitle={text("Header title", "Header title")}\n        inputPlaceholder={text("Placeholder", "Input placeholder")}\n        inputType={select("Type", inputTypeSelect, inputTypeText)}\n        onAdvance={action("Button clicked")}\n        isMultiline={boolean("Multiline", true)}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepInput@Multiline":{startLoc:{col:4,line:154},endLoc:{col:6,line:170}},"Wizard (deprecated) > WizardStepInput@Date":{startLoc:{col:4,line:133},endLoc:{col:6,line:151}},"Wizard (deprecated) > WizardStepInput@Search":{startLoc:{col:4,line:112},endLoc:{col:6,line:130}},"Wizard (deprecated) > WizardStepInput@Number":{startLoc:{col:4,line:91},endLoc:{col:6,line:109}},"Wizard (deprecated) > WizardStepInput@Password":{startLoc:{col:4,line:70},endLoc:{col:6,line:88}},"Wizard (deprecated) > WizardStepInput@Email":{startLoc:{col:4,line:49},endLoc:{col:6,line:67}},"Wizard (deprecated) > WizardStepInput@Text":{startLoc:{col:4,line:28},endLoc:{col:6,line:46}}})).addDecorator(l.withKnobs).add("Text",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: text`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"text"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Email",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: email`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"email"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Password",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: password`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"password"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Number",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: number`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"number"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Search",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: search`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"search"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Date",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `inputType: date`.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),headerCaption:Object(l.text)("Header caption","Header caption"),headerPreTitle:Object(l.text)("Header PreTitle","Sample text"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"date"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!1)})})).add("Multiline",Object(r.withInfo)("\n      Wizard Step Input is a component to enter information and going to the next step.\n\n      &nbsp;\n      \n      In this view, Wizard Step Input is displayed with the property `isMultiline: true`, allowing to enter content in many lines.\n    ")(function(){return a.a.createElement(s.a,{advanceButtonLabel:Object(l.text)("Button label","Button label"),headerTitle:Object(l.text)("Header title","Header title"),inputPlaceholder:Object(l.text)("Placeholder","Input placeholder"),inputType:Object(l.select)("Type",p,"text"),onAdvance:Object(i.action)("Button clicked"),isMultiline:Object(l.boolean)("Multiline",!0)})}))}).call(this,n(15)(e))},1555:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(214),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardStepFile",Object(o.storiesOf)("Wizard (deprecated) > WizardStepFile",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardStepFile from "@automatic-labs/ui-components/wizard/wizard-step-file";\n\nWizardStepFile.displayName = "WizardStepFile";\n\nstoriesOf("Wizard (deprecated) > WizardStepFile", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step File is a component for loading a file from the disk and going to the next step.\n\n      &nbsp;\n      \n      The required property is \\`headerTitle\\` informing the user about the desired action.\n    `)(() => (\n      <WizardStepFile\n        headerPreTitle={text("Header PreTitle", "Create account")}\n        headerTitle={text("Header title", "Select picture")}\n        onAdvance={action("Button clicked")}\n        advanceButtonLabel={text("Button label", "Next step")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepFile@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:27}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Step File is a component for loading a file from the disk and going to the next step.\n\n      &nbsp;\n      \n      The required property is `headerTitle` informing the user about the desired action.\n    ")(function(){return a.a.createElement(s.a,{headerPreTitle:Object(l.text)("Header PreTitle","Create account"),headerTitle:Object(l.text)("Header title","Select picture"),onAdvance:Object(i.action)("Button clicked"),advanceButtonLabel:Object(l.text)("Button label","Next step")})}))}).call(this,n(15)(e))},1556:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(340),s=n.n(c),d=n(37),p=n.n(d),m=n(148),u=n.n(m),h=n(34),b=n.n(h),f=n(14).withStorySource;s.a.displayName="WizardStepError";var y=a.a.createElement(b.a,null,a.a.createElement(p.a,null,"Choose a password that has:"),a.a.createElement(u.a,null,a.a.createElement("li",null,"8 or more characters"),a.a.createElement("li",null,"At least one upper case letter (A..Z)"),a.a.createElement("li",null,"At least one number (0..9)")));Object(o.storiesOf)("Wizard (deprecated) > WizardStepError",e).addDecorator(f('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardStepError from "@automatic-labs/ui-components/wizard/wizard-step-error";\nimport WizardContentBodyParagraph from "@automatic-labs/ui-components/wizard/wizard-content-body-paragraph";\nimport WizardContentBodyBulletedList from "@automatic-labs/ui-components/wizard/wizard-content-body-bulleted-list";\nimport WizardContentSection from "@automatic-labs/ui-components/wizard/wizard-content-section";\n\nWizardStepError.displayName = "WizardStepError";\n\nconst recoverySuggestionDescription = (\n  <WizardContentSection>\n    <WizardContentBodyParagraph>\n      Choose a password that has:\n    </WizardContentBodyParagraph>\n    <WizardContentBodyBulletedList>\n      <li>8 or more characters</li>\n      <li>At least one upper case letter (A..Z)</li>\n      <li>At least one number (0..9)</li>\n    </WizardContentBodyBulletedList>\n  </WizardContentSection>\n);\n\nstoriesOf("Wizard (deprecated) > WizardStepError", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Step Error is one of the error views that prevented the user from succeeding successfully.\n    `)(() => (\n      <WizardStepError\n        errorTitle={text("Error title", "Unable to create account")}\n        reasonTitle={text("Reason title", "Password is invalid")}\n        reasonDescription={text(\n          "Reason description",\n          "The password you entered does not meet our security requirements."\n        )}\n        recoverySuggestionTitle={text(\n          "Recovery suggestion title",\n          "What to do"\n        )}\n        recoverySuggestionDescription={recoverySuggestionDescription}\n        supportPromptText={text("Support prompt text", "Need help?")}\n        supportActionText={text("Support action text", "Contact Support")}\n        onSupportAction={action("Link clicked")}\n        onAdvance={action("Button clicked")}\n        advanceButtonLabel={text("Advance button label", "Try one more time")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardStepError@Default":{startLoc:{col:4,line:29},endLoc:{col:6,line:51}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Step Error is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(s.a,{errorTitle:Object(l.text)("Error title","Unable to create account"),reasonTitle:Object(l.text)("Reason title","Password is invalid"),reasonDescription:Object(l.text)("Reason description","The password you entered does not meet our security requirements."),recoverySuggestionTitle:Object(l.text)("Recovery suggestion title","What to do"),recoverySuggestionDescription:y,supportPromptText:Object(l.text)("Support prompt text","Need help?"),supportActionText:Object(l.text)("Support action text","Contact Support"),onSupportAction:Object(i.action)("Link clicked"),onAdvance:Object(i.action)("Button clicked"),advanceButtonLabel:Object(l.text)("Advance button label","Try one more time")})}))}).call(this,n(15)(e))},1557:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(45),s=n.n(c),d=n(38),p=n.n(d),m=n(34),u=n.n(m),h=n(37),b=n.n(h),f=n(49),y=n.n(f),v=n(14).withStorySource;y.a.displayName="WizardStep";var w={normal:"Normal",final:"Final",continue:"Continue",process:"Process"},g=[{label:"Correct",type:"normal"},{type:"final"}];Object(o.storiesOf)("Wizard (deprecated) > WizardStep",e).addDecorator(v('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select, text } from "@storybook/addon-knobs";\nimport WizardContentBodyTitle from "@automatic-labs/ui-components/wizard/wizard-content-body-title";\nimport WizardContentHeader from "@automatic-labs/ui-components/wizard/wizard-content-header";\nimport WizardContentSection from "@automatic-labs/ui-components/wizard/wizard-content-section";\nimport WizardContentBodyParagraph from "@automatic-labs/ui-components/wizard/wizard-content-body-paragraph";\nimport WizardStep from "@automatic-labs/ui-components/wizard/wizard-step";\n\nWizardStep.displayName = "WizardStep";\n\nconst typeNormal = "normal";\nconst typeFinal = "final";\nconst typeContinue = "continue";\nconst typeProcess = "process";\nconst typeSelect = {\n  normal: "Normal",\n  final: "Final",\n  continue: "Continue",\n  process: "Process"\n};\n\nconst buttons = [\n  {\n    label: "Correct",\n    type: "normal"\n  },\n  {\n    type: "final"\n  }\n];\n\nstoriesOf("Wizard (deprecated) > WizardStep", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", true)}\n        advanceButtonLabel={text("Button label", "Advance")}\n        onAdvance={action("Button clicked")}\n        type={select("Type", typeSelect, typeNormal)}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  )\n  .add(\n    "Final",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", true)}\n        advanceButtonLabel={text("Button label", "Advance")}\n        onAdvance={action("Button clicked")}\n        type={select("Type", typeSelect, typeFinal)}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  )\n  .add(\n    "Continue",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", true)}\n        advanceButtonLabel={text("Button label", "Advance")}\n        onAdvance={action("Button clicked")}\n        type={select("Type", typeSelect, typeContinue)}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  )\n  .add(\n    "Process",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", true)}\n        advanceButtonLabel={text("Button label", "Advance")}\n        onAdvance={action("Button clicked")}\n        type={select("Type", typeSelect, typeProcess)}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  )\n  .add(\n    "Non advanceable",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", false)}\n        advanceButtonLabel={text("Button label", "Advance")}\n        onAdvance={action("Button clicked")}\n        type={select("Type", typeSelect, typeNormal)}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  )\n  .add(\n    "With buttons",\n    withInfo(`\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    `)(() => (\n      <WizardStep\n        advanceable={boolean("Advanceable", true)}\n        onAdvance={action("Button clicked")}\n        type="normal"\n        buttons={buttons}\n      >\n        <WizardContentHeader title="Summary" />\n        <WizardContentSection>\n          <WizardContentBodyParagraph>Full Name</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>John Doe</WizardContentBodyTitle>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={true}>\n          <WizardContentBodyParagraph>Email</WizardContentBodyParagraph>\n          <WizardContentBodyTitle>john.doe@email.com</WizardContentBodyTitle>\n        </WizardContentSection>\n      </WizardStep>\n    ))\n  );\n',{"Wizard (deprecated) > WizardStep@With buttons":{startLoc:{col:4,line:173},endLoc:{col:6,line:197}},"Wizard (deprecated) > WizardStep@Non advanceable":{startLoc:{col:4,line:146},endLoc:{col:6,line:170}},"Wizard (deprecated) > WizardStep@Process":{startLoc:{col:4,line:119},endLoc:{col:6,line:143}},"Wizard (deprecated) > WizardStep@Continue":{startLoc:{col:4,line:92},endLoc:{col:6,line:116}},"Wizard (deprecated) > WizardStep@Final":{startLoc:{col:4,line:65},endLoc:{col:6,line:89}},"Wizard (deprecated) > WizardStep@Normal":{startLoc:{col:4,line:38},endLoc:{col:6,line:62}}})).addDecorator(l.withKnobs).add("Normal",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!0),advanceButtonLabel:Object(l.text)("Button label","Advance"),onAdvance:Object(i.action)("Button clicked"),type:Object(l.select)("Type",w,"normal")},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))})).add("Final",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!0),advanceButtonLabel:Object(l.text)("Button label","Advance"),onAdvance:Object(i.action)("Button clicked"),type:Object(l.select)("Type",w,"final")},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))})).add("Continue",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!0),advanceButtonLabel:Object(l.text)("Button label","Advance"),onAdvance:Object(i.action)("Button clicked"),type:Object(l.select)("Type",w,"continue")},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))})).add("Process",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!0),advanceButtonLabel:Object(l.text)("Button label","Advance"),onAdvance:Object(i.action)("Button clicked"),type:Object(l.select)("Type",w,"process")},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))})).add("Non advanceable",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!1),advanceButtonLabel:Object(l.text)("Button label","Advance"),onAdvance:Object(i.action)("Button clicked"),type:Object(l.select)("Type",w,"normal")},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))})).add("With buttons",Object(r.withInfo)("\n      Wizard Step is the main building block for assembling wizards.\n\n      &nbsp;\n\n      The component is the transition element in the entire flow.\n    ")(function(){return a.a.createElement(y.a,{advanceable:Object(l.boolean)("Advanceable",!0),onAdvance:Object(i.action)("Button clicked"),type:"normal",buttons:g},a.a.createElement(p.a,{title:"Summary"}),a.a.createElement(u.a,null,a.a.createElement(b.a,null,"Full Name"),a.a.createElement(s.a,null,"John Doe")),a.a.createElement(u.a,{isSeparated:!0},a.a.createElement(b.a,null,"Email"),a.a.createElement(s.a,null,"john.doe@email.com")))}))}).call(this,n(15)(e))},1558:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(116),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardProcessIndicator",Object(o.storiesOf)("Wizard (deprecated) > WizardProcessIndicator",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardProcessIndicator from "@automatic-labs/ui-components/wizard/wizard-process-indicator";\n\nWizardProcessIndicator.displayName = "WizardProcessIndicator";\n\nstoriesOf("Wizard (deprecated) > WizardProcessIndicator", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Active",\n    withInfo(`\n      The Wizard Process Indicator component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`processState: active\\`.\n    `)(() => (\n      <WizardProcessIndicator\n        processState="active"\n        messageText={text("Message text", "The message text")}\n      />\n    ))\n  )\n  .add(\n    "Complete",\n    withInfo(`\n      The Wizard Process Indicator component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`processState: complete\\`.\n    `)(() => (\n      <WizardProcessIndicator\n        processState="complete"\n        messageText={text("Message text", "The message text")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardProcessIndicator@Complete":{startLoc:{col:4,line:27},endLoc:{col:6,line:39}},"Wizard (deprecated) > WizardProcessIndicator@Active":{startLoc:{col:4,line:12},endLoc:{col:6,line:24}}})).addDecorator(r.withKnobs).add("Active",Object(i.withInfo)("\n      The Wizard Process Indicator component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `processState: active`.\n    ")(function(){return a.a.createElement(c.a,{processState:"active",messageText:Object(r.text)("Message text","The message text")})})).add("Complete",Object(i.withInfo)("\n      The Wizard Process Indicator component is used to display the current status of the application.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `processState: complete`.\n    ")(function(){return a.a.createElement(c.a,{processState:"complete",messageText:Object(r.text)("Message text","The message text")})}))}).call(this,n(15)(e))},1559:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(288),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardNavigationMasthead";var d={main:"Main",sub:"Sub"},p={visible:"Visible",hidden:"Hidden"};Object(o.storiesOf)("Wizard (deprecated) > WizardNavigationMasthead",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport WizardNavigationMasthead from "@automatic-labs/ui-components/wizard/wizard-navigation-masthead";\n\nWizardNavigationMasthead.displayName = "WizardNavigationMasthead";\n\nconst typeMain = "main";\nconst typeSub = "sub";\nconst typeSelect = {\n  main: "Main",\n  sub: "Sub"\n};\n\nconst visibilityVisible = "visible";\nconst visibilityHidden = "hidden";\nconst visibilitySelect = {\n  visible: "Visible",\n  hidden: "Hidden"\n};\n\nstoriesOf("Wizard (deprecated) > WizardNavigationMasthead", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Main",\n    withInfo(`\n      Wizard Navigation Masthead is the logo placed in the Wizard Navigation component.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Masthead is displayed with the property \\`type: main\\`.\n    `)(() => (\n      <div className="wizard-navigation-masthead-wrapper">\n        <WizardNavigationMasthead\n          type={select("Type", typeSelect, typeMain)}\n          visibility={select("Visibility", visibilitySelect, visibilityVisible)}\n          content={text("Content", "http://via.placeholder.com/140x48")}\n          defaultContent={text(\n            "Default content",\n            "http://via.placeholder.com/140x48"\n          )}\n        />\n      </div>\n    ))\n  )\n  .add(\n    "Sub",\n    withInfo(`\n      Wizard Navigation Masthead is the logo placed in the Wizard Navigation component.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Masthead is displayed with the property \\`type: sub\\`.\n    `)(() => (\n      <div className="wizard-navigation-masthead-wrapper">\n        <WizardNavigationMasthead\n          type={select("Type", typeSelect, typeSub)}\n          visibility={select("Visibility", visibilitySelect, visibilityVisible)}\n          content={text("Content", "http://via.placeholder.com/120x38")}\n          defaultContent={text(\n            "Default content",\n            "http://via.placeholder.com/120x38"\n          )}\n        />\n      </div>\n    ))\n  );\n',{"Wizard (deprecated) > WizardNavigationMasthead@Sub":{startLoc:{col:4,line:48},endLoc:{col:6,line:67}},"Wizard (deprecated) > WizardNavigationMasthead@Main":{startLoc:{col:4,line:26},endLoc:{col:6,line:45}}})).addDecorator(r.withKnobs).add("Main",Object(i.withInfo)("\n      Wizard Navigation Masthead is the logo placed in the Wizard Navigation component.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Masthead is displayed with the property `type: main`.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-masthead-wrapper"},a.a.createElement(c.a,{type:Object(r.select)("Type",d,"main"),visibility:Object(r.select)("Visibility",p,"visible"),content:Object(r.text)("Content","http://via.placeholder.com/140x48"),defaultContent:Object(r.text)("Default content","http://via.placeholder.com/140x48")}))})).add("Sub",Object(i.withInfo)("\n      Wizard Navigation Masthead is the logo placed in the Wizard Navigation component.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Masthead is displayed with the property `type: sub`.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-masthead-wrapper"},a.a.createElement(c.a,{type:Object(r.select)("Type",d,"sub"),visibility:Object(r.select)("Visibility",p,"visible"),content:Object(r.text)("Content","http://via.placeholder.com/120x38"),defaultContent:Object(r.text)("Default content","http://via.placeholder.com/120x38")}))}))}).call(this,n(15)(e))},1560:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(216),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardNavigationButton";var p={normal:"Normal",back:"Back",exit:"Exit"},m={visible:"Visible",hidden:"Hidden"};Object(o.storiesOf)("Wizard (deprecated) > WizardNavigationButton",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, select } from "@storybook/addon-knobs";\nimport WizardNavigationButton from "@automatic-labs/ui-components/wizard/wizard-navigation-button";\n\nWizardNavigationButton.displayName = "WizardNavigationButton";\n\nconst typeNormal = "normal";\nconst typeBack = "back";\nconst typeExit = "exit";\nconst typeSelect = {\n  normal: "Normal",\n  back: "Back",\n  exit: "Exit"\n};\n\nconst visibilityVisible = "visible";\nconst visibilityHidden = "hidden";\nconst visibilitySelect = {\n  visible: "Visible",\n  hidden: "Hidden"\n};\n\nstoriesOf("Wizard (deprecated) > WizardNavigationButton", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: \\`normal\\`, \\`back\\` and \\`exit\\`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type \\`normal\\`.\n    `)(() => (\n      <div className="wizard-navigation-button-wrapper">\n        <WizardNavigationButton\n          type={select("Type", typeSelect, typeNormal)}\n          visibility={select("Visibility", visibilitySelect, visibilityVisible)}\n          label="Hello button"\n          onClick={action("Button clicked")}\n        />\n      </div>\n    ))\n  )\n  .add(\n    "Back",\n    withInfo(`\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: \\`normal\\`, \\`back\\` and \\`exit\\`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type \\`back\\`.\n    `)(() => (\n      <div className="wizard-navigation-button-wrapper">\n        <WizardNavigationButton\n          type={select("Type", typeSelect, typeBack)}\n          visibility={select("Visibility", visibilitySelect, visibilityVisible)}\n          label="Hello button"\n          onClick={action("Button clicked")}\n        />\n      </div>\n    ))\n  )\n  .add(\n    "Exit",\n    withInfo(`\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: \\`normal\\`, \\`back\\` and \\`exit\\`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type \\`exit\\`.\n    `)(() => (\n      <div className="wizard-navigation-button-wrapper">\n        <WizardNavigationButton\n          type={select("Type", typeSelect, typeExit)}\n          visibility={select("Visibility", visibilitySelect, visibilityVisible)}\n          onClick={action("Button clicked")}\n          label=""\n        />\n      </div>\n    ))\n  );\n',{"Wizard (deprecated) > WizardNavigationButton@Exit":{startLoc:{col:4,line:77},endLoc:{col:6,line:98}},"Wizard (deprecated) > WizardNavigationButton@Back":{startLoc:{col:4,line:53},endLoc:{col:6,line:74}},"Wizard (deprecated) > WizardNavigationButton@Normal":{startLoc:{col:4,line:29},endLoc:{col:6,line:50}}})).addDecorator(l.withKnobs).add("Normal",Object(r.withInfo)("\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: `normal`, `back` and `exit`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type `normal`.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-button-wrapper"},a.a.createElement(s.a,{type:Object(l.select)("Type",p,"normal"),visibility:Object(l.select)("Visibility",m,"visible"),label:"Hello button",onClick:Object(i.action)("Button clicked")}))})).add("Back",Object(r.withInfo)("\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: `normal`, `back` and `exit`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type `back`.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-button-wrapper"},a.a.createElement(s.a,{type:Object(l.select)("Type",p,"back"),visibility:Object(l.select)("Visibility",m,"visible"),label:"Hello button",onClick:Object(i.action)("Button clicked")}))})).add("Exit",Object(r.withInfo)("\n      The Wizard Navigation Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Navigation Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Navigation Button has three different types: `normal`, `back` and `exit`.\n\n      &nbsp;\n\n      In this view, Wizard Navigation Button is displayed in the type `exit`.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-button-wrapper"},a.a.createElement(s.a,{type:Object(l.select)("Type",p,"exit"),visibility:Object(l.select)("Visibility",m,"visible"),onClick:Object(i.action)("Button clicked"),label:""}))}))}).call(this,n(15)(e))},1561:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(114),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardNavigation";var p={dynamic:"Dynamic",static:"Static"};Object(o.storiesOf)("Wizard (deprecated) > WizardNavigation",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select, text } from "@storybook/addon-knobs";\nimport WizardNavigation from "@automatic-labs/ui-components/wizard/wizard-navigation";\n\nWizardNavigation.displayName = "WizardNavigation";\n\nconst typeDynamic = "dynamic";\nconst typeStatic = "static";\nconst typeSelect = {\n  dynamic: "Dynamic",\n  static: "Static"\n};\n\nstoriesOf("Wizard (deprecated) > WizardNavigation", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Dynamic",\n    withInfo(`\n      Wizard Navigation is displayed above the content of the Wizard Steps.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo\'s position, presence of the back button, the behaviour of the exit button.\n    `)(() => (\n      <div className="wizard-navigation-wrapper">\n        <WizardNavigation\n          isFirst={boolean("Logo on left side", false)}\n          backEnabled={boolean("Back button enabled", false)}\n          onExit={action("Button clicked")}\n          onBack={action("Button clicked")}\n          mastheadMain={text(\n            "Logo on left",\n            "http://via.placeholder.com/150x35"\n          )}\n          mastheadMainSub={text(\n            "Logo on center",\n            "http://via.placeholder.com/180x48"\n          )}\n          type={select("Type", typeSelect, typeDynamic)}\n        />\n      </div>\n    ))\n  )\n  .add(\n    "Static",\n    withInfo(`\n      Wizard Navigation is displayed above the content of the Wizard Steps.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo\'s position, presence of the back button, the behaviour of the exit button.\n    `)(() => (\n      <div className="wizard-navigation-wrapper">\n        <WizardNavigation\n          onExit={action("Button clicked")}\n          onBack={action("Button clicked")}\n          mastheadMain={text(\n            "Logo on left",\n            "http://via.placeholder.com/150x35"\n          )}\n          mastheadMainSub={text(\n            "Logo on center",\n            "http://via.placeholder.com/180x48"\n          )}\n          type={select("Type", typeSelect, typeStatic)}\n          backEnabled={false}\n        />\n      </div>\n    ))\n  );\n',{"Wizard (deprecated) > WizardNavigation@Static":{startLoc:{col:4,line:49},endLoc:{col:6,line:74}},"Wizard (deprecated) > WizardNavigation@Dynamic":{startLoc:{col:4,line:20},endLoc:{col:6,line:46}}})).addDecorator(l.withKnobs).add("Dynamic",Object(r.withInfo)("\n      Wizard Navigation is displayed above the content of the Wizard Steps.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo's position, presence of the back button, the behaviour of the exit button.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-wrapper"},a.a.createElement(s.a,{isFirst:Object(l.boolean)("Logo on left side",!1),backEnabled:Object(l.boolean)("Back button enabled",!1),onExit:Object(i.action)("Button clicked"),onBack:Object(i.action)("Button clicked"),mastheadMain:Object(l.text)("Logo on left","http://via.placeholder.com/150x35"),mastheadMainSub:Object(l.text)("Logo on center","http://via.placeholder.com/180x48"),type:Object(l.select)("Type",p,"dynamic")}))})).add("Static",Object(r.withInfo)("\n      Wizard Navigation is displayed above the content of the Wizard Steps.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo's position, presence of the back button, the behaviour of the exit button.\n    ")(function(){return a.a.createElement("div",{className:"wizard-navigation-wrapper"},a.a.createElement(s.a,{onExit:Object(i.action)("Button clicked"),onBack:Object(i.action)("Button clicked"),mastheadMain:Object(l.text)("Logo on left","http://via.placeholder.com/150x35"),mastheadMainSub:Object(l.text)("Logo on center","http://via.placeholder.com/180x48"),type:Object(l.select)("Type",p,"static"),backEnabled:!1}))}))}).call(this,n(15)(e))},1562:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(287),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardInputTextArea";var p={default:"Default",text:"Text"};Object(o.storiesOf)("Wizard (deprecated) > WizardInputTextArea",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, select, text } from "@storybook/addon-knobs";\nimport WizardInputTextArea from "@automatic-labs/ui-components/wizard/wizard-input-textarea";\n\nWizardInputTextArea.displayName = "WizardInputTextArea";\n\nconst typeDefault = "default";\nconst typeText = "text";\nconst typeSelect = {\n  default: "Default",\n  text: "Text"\n};\n\nstoriesOf("Wizard (deprecated) > WizardInputTextArea", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Input Text Area is a component to enter information in multi-lines.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text Area is displayed with the property \\`type: default\\`.\n    `)(() => (\n      <WizardInputTextArea\n        defaultValue=""\n        type={select("Type", typeSelect, typeDefault)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        placeholder={text("Placeholder", "Placeholder")}\n      />\n    ))\n  )\n  .add(\n    "Text",\n    withInfo(`\n      Wizard Input Text Area is a component to enter information in multi-lines.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text Area is displayed with the property \\`type: text\\`.\n    `)(() => (\n      <WizardInputTextArea\n        defaultValue=""\n        type={select("Type", typeSelect, typeText)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        placeholder={text("Placeholder", "Placeholder")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardInputTextArea@Text":{startLoc:{col:4,line:40},endLoc:{col:6,line:57}},"Wizard (deprecated) > WizardInputTextArea@Default":{startLoc:{col:4,line:20},endLoc:{col:6,line:37}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Input Text Area is a component to enter information in multi-lines.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text Area is displayed with the property `type: default`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"default"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),placeholder:Object(l.text)("Placeholder","Placeholder")})})).add("Text",Object(r.withInfo)("\n      Wizard Input Text Area is a component to enter information in multi-lines.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text Area is displayed with the property `type: text`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"text"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),placeholder:Object(l.text)("Placeholder","Placeholder")})}))}).call(this,n(15)(e))},1563:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(107),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardInputText";var p={text:"Text",email:"Email",password:"Password",number:"Number",search:"Search",date:"Date"};Object(o.storiesOf)("Wizard (deprecated) > WizardInputText",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select, text } from "@storybook/addon-knobs";\nimport WizardInputText from "@automatic-labs/ui-components/wizard/wizard-input-text";\n\nWizardInputText.displayName = "WizardInputText";\n\nconst typeText = "text";\nconst typeEmail = "email";\nconst typePassword = "password";\nconst typeNumber = "number";\nconst typeSearch = "search";\nconst typeDate = "date";\nconst typeSelect = {\n  text: "Text",\n  email: "Email",\n  password: "Password",\n  number: "Number",\n  search: "Search",\n  date: "Date"\n};\n\nstoriesOf("Wizard (deprecated) > WizardInputText", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Text",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to \\`clearable: true\\` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: text\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typeText)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n        clearable={boolean("Clearable", false)}\n      />\n    ))\n  )\n  .add(\n    "Email",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to \\`clearable: true\\` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: email\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typeEmail)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n        clearable={boolean("Clearable", false)}\n      />\n    ))\n  )\n  .add(\n    "Password",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to \\`clearable: true\\` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: password\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typePassword)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n        clearable={boolean("Clearable", false)}\n      />\n    ))\n  )\n  .add(\n    "Number",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to \\`clearable: true\\` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: number\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typeNumber)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n        clearable={boolean("Clearable", false)}\n      />\n    ))\n  )\n  .add(\n    "Search",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: search\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typeSearch)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n        loading={boolean("Loading", false)}\n      />\n    ))\n  )\n  .add(\n    "Date",\n    withInfo(`\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property \\`type: date\\`.\n    `)(() => (\n      <WizardInputText\n        defaultValue=""\n        type={select("Type", typeSelect, typeDate)}\n        onBlur={action("On blur")}\n        onChange={action("On change")}\n        onFocus={action("On focus")}\n        onValidated={action("On validated")}\n        onEnterKey={action("On enter key")}\n        placeholder={text("Placeholder", "Placeholder")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardInputText@Date":{startLoc:{col:4,line:154},endLoc:{col:6,line:172}},"Wizard (deprecated) > WizardInputText@Search":{startLoc:{col:4,line:132},endLoc:{col:6,line:151}},"Wizard (deprecated) > WizardInputText@Number":{startLoc:{col:4,line:106},endLoc:{col:6,line:129}},"Wizard (deprecated) > WizardInputText@Password":{startLoc:{col:4,line:80},endLoc:{col:6,line:103}},"Wizard (deprecated) > WizardInputText@Email":{startLoc:{col:4,line:54},endLoc:{col:6,line:77}},"Wizard (deprecated) > WizardInputText@Text":{startLoc:{col:4,line:28},endLoc:{col:6,line:51}}})).addDecorator(l.withKnobs).add("Text",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to `clearable: true` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: text`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"text"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder"),clearable:Object(l.boolean)("Clearable",!1)})})).add("Email",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to `clearable: true` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: email`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"email"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder"),clearable:Object(l.boolean)("Clearable",!1)})})).add("Password",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to `clearable: true` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: password`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"password"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder"),clearable:Object(l.boolean)("Clearable",!1)})})).add("Number",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n\n      Through the property set up to `clearable: true` it is possible to put the button used to clear the written content.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: number`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"number"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder"),clearable:Object(l.boolean)("Clearable",!1)})})).add("Search",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: search`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"search"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder"),loading:Object(l.boolean)("Loading",!1)})})).add("Date",Object(r.withInfo)("\n      Wizard Input Text is a component to enter information.\n\n      &nbsp;\n      \n      In this view, Wizard Input Text is displayed with the property `type: date`.\n    ")(function(){return a.a.createElement(s.a,{defaultValue:"",type:Object(l.select)("Type",p,"date"),onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onValidated:Object(i.action)("On validated"),onEnterKey:Object(i.action)("On enter key"),placeholder:Object(l.text)("Placeholder","Placeholder")})}))}).call(this,n(15)(e))},1564:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(147),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardInputSlider",Object(o.storiesOf)("Wizard (deprecated) > WizardInputSlider",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardInputSlider from "@automatic-labs/ui-components/wizard/wizard-input-slider";\n\nWizardInputSlider.displayName = "WizardInputSlider";\n\nstoriesOf("Wizard (deprecated) > WizardInputSlider", module).add(\n  "Default",\n  withInfo(`\n      Wizard Input Slider is a component that allows you to choose a value from a fixed scale.\n\n      &nbsp;\n\n      Through the properties, it is possible to select the minimum value using \\`min\\`, maximum value using \\`max\\`, interval using \\`step\\`,\n      display format of the value using \\`formatLabel\\` or determine own scale using \\`customScale\\`.\n    `)(() => (\n    <WizardInputSlider\n      min={1}\n      max={100}\n      step={1}\n      defaultValue={50}\n      customScale={WizardInputSlider.LOGARITHMIC_SCALE(1, 200)}\n      formatLabel={(value, position) => `${position} => ${value}`}\n      onBlur={action("On blur")}\n      onChange={action("On change")}\n      onFocus={action("On focus")}\n      onEnterKey={action("On enter key")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardInputSlider@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:31}}})).add("Default",Object(r.withInfo)("\n      Wizard Input Slider is a component that allows you to choose a value from a fixed scale.\n\n      &nbsp;\n\n      Through the properties, it is possible to select the minimum value using `min`, maximum value using `max`, interval using `step`,\n      display format of the value using `formatLabel` or determine own scale using `customScale`.\n    ")(function(){return a.a.createElement(c.a,{min:1,max:100,step:1,defaultValue:50,customScale:c.a.LOGARITHMIC_SCALE(1,200),formatLabel:function(e,t){return t+" => "+e},onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onEnterKey:Object(i.action)("On enter key")})}))}).call(this,n(15)(e))},1565:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(211),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardInputSelector";var d=[{value:0,title:"Item One",caption:"The caption One"},{value:1,title:"Item Two",caption:"The caption Two"},{value:2,title:"Item Three",caption:"The caption Three"}];Object(o.storiesOf)("Wizard (deprecated) > WizardInputSelector",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardInputSelector from "@automatic-labs/ui-components/wizard/wizard-input-selector";\n\nWizardInputSelector.displayName = "WizardInputSelector";\n\nconst options = [\n  {\n    value: 0,\n    title: "Item One",\n    caption: "The caption One"\n  },\n  {\n    value: 1,\n    title: "Item Two",\n    caption: "The caption Two"\n  },\n  {\n    value: 2,\n    title: "Item Three",\n    caption: "The caption Three"\n  }\n];\n\nconst selected = 1;\n\nstoriesOf("Wizard (deprecated) > WizardInputSelector", module).add(\n  "Default",\n  withInfo(`\n      Wizard Input Selector is a component that allows choosing one of the more variables.\n    `)(() => (\n    <WizardInputSelector\n      options={options}\n      defaultValue={selected}\n      onChange={action("On change")}\n      onEnterKey={action("On enter key")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardInputSelector@Default":{startLoc:{col:2,line:30},endLoc:{col:4,line:40}}})).add("Default",Object(r.withInfo)("\n      Wizard Input Selector is a component that allows choosing one of the more variables.\n    ")(function(){return a.a.createElement(c.a,{options:d,defaultValue:1,onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})}))}).call(this,n(15)(e))},1566:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(139),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardInputSelection",Object(o.storiesOf)("Wizard (deprecated) > WizardInputSelection",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, text } from "@storybook/addon-knobs";\nimport WizardInputSelection from "@automatic-labs/ui-components/wizard/wizard-input-selection";\n\nWizardInputSelection.displayName = "WizardInputSelection";\n\nstoriesOf("Wizard (deprecated) > WizardInputSelection", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    `)(() => (\n      <WizardInputSelection\n        value={"Selected value"}\n        title={text("Title", "Title text")}\n        isSelected={boolean("Selected", false)}\n        onChange={action("On change")}\n        onEnterKey={action("On enter key")}\n      />\n    ))\n  )\n  .add(\n    "Selected",\n    withInfo(`\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    `)(() => (\n      <WizardInputSelection\n        value={"Selected value"}\n        title={text("Title", "Title text")}\n        isSelected={boolean("Selected", true)}\n        onChange={action("On change")}\n        onEnterKey={action("On enter key")}\n      />\n    ))\n  )\n  .add(\n    "With caption",\n    withInfo(`\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    `)(() => (\n      <WizardInputSelection\n        value={"Selected value"}\n        title={text("Title", "Title text")}\n        caption={text("Caption", "Caption text")}\n        isSelected={boolean("Selected", false)}\n        onChange={action("On change")}\n        onEnterKey={action("On enter key")}\n      />\n    ))\n  )\n  .add(\n    "With icon",\n    withInfo(`\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    `)(() => (\n      <WizardInputSelection\n        value={"Selected value"}\n        title={text("Title", "Title text")}\n        caption={text("Caption", "Caption text")}\n        icon={text("Icon URL", "http://via.placeholder.com/30x30")}\n        isSelected={boolean("Selected", false)}\n        onChange={action("On change")}\n        onEnterKey={action("On enter key")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardInputSelection@With icon":{startLoc:{col:4,line:68},endLoc:{col:6,line:85}},"Wizard (deprecated) > WizardInputSelection@With caption":{startLoc:{col:4,line:49},endLoc:{col:6,line:65}},"Wizard (deprecated) > WizardInputSelection@Selected":{startLoc:{col:4,line:31},endLoc:{col:6,line:46}},"Wizard (deprecated) > WizardInputSelection@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:28}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    ")(function(){return a.a.createElement(s.a,{value:"Selected value",title:Object(l.text)("Title","Title text"),isSelected:Object(l.boolean)("Selected",!1),onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})})).add("Selected",Object(r.withInfo)("\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    ")(function(){return a.a.createElement(s.a,{value:"Selected value",title:Object(l.text)("Title","Title text"),isSelected:Object(l.boolean)("Selected",!0),onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})})).add("With caption",Object(r.withInfo)("\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    ")(function(){return a.a.createElement(s.a,{value:"Selected value",title:Object(l.text)("Title","Title text"),caption:Object(l.text)("Caption","Caption text"),isSelected:Object(l.boolean)("Selected",!1),onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})})).add("With icon",Object(r.withInfo)("\n      Wizard Input Selection is a single part of the Wizard Input Selector component.\n\n      &nbsp;\n\n      It is possible to set up additional properties like a caption text or an icon image.\n    ")(function(){return a.a.createElement(s.a,{value:"Selected value",title:Object(l.text)("Title","Title text"),caption:Object(l.text)("Caption","Caption text"),icon:Object(l.text)("Icon URL","http://via.placeholder.com/30x30"),isSelected:Object(l.boolean)("Selected",!1),onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})}))}).call(this,n(15)(e))},1567:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(337),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardInputMultiSelector";var d=[{value:0,title:"Item One"},{value:1,title:"Item Two"},{value:2,title:"Item Three"}],p=[1,2];Object(o.storiesOf)("Wizard (deprecated) > WizardInputMultiSelector",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardInputMultiSelector from "@automatic-labs/ui-components/wizard/wizard-input-multi-selector";\n\nWizardInputMultiSelector.displayName = "WizardInputMultiSelector";\n\nconst options = [\n  {\n    value: 0,\n    title: "Item One"\n  },\n  {\n    value: 1,\n    title: "Item Two"\n  },\n  {\n    value: 2,\n    title: "Item Three"\n  }\n];\n\nconst selected = [1, 2];\n\nstoriesOf("Wizard (deprecated) > WizardInputMultiSelector", module).add(\n  "Default",\n  withInfo(`\n      Wizard Input Multi Selector is a component that allows choosing a few variables.\n    `)(() => (\n    <WizardInputMultiSelector\n      defaultValues={selected}\n      options={options}\n      onChange={action("On change")}\n      onEnterKey={action("On enter key")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardInputMultiSelector@Default":{startLoc:{col:2,line:27},endLoc:{col:4,line:37}}})).add("Default",Object(r.withInfo)("\n      Wizard Input Multi Selector is a component that allows choosing a few variables.\n    ")(function(){return a.a.createElement(c.a,{defaultValues:p,options:d,onChange:Object(i.action)("On change"),onEnterKey:Object(i.action)("On enter key")})}))}).call(this,n(15)(e))},1568:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(339),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardInputFile",Object(o.storiesOf)("Wizard (deprecated) > WizardInputFile",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardInputFile from "@automatic-labs/ui-components/wizard/wizard-input-file";\n\nWizardInputFile.displayName = "WizardInputFile";\n\nstoriesOf("Wizard (deprecated) > WizardInputFile", module).add(\n  "Default",\n  withInfo(`\n      Wizard Input File is a component for loading a file from the disk.\n\n      &nbsp;\n\n      It is possible to set up the additional properties like validation and filters. \n    `)(() => (\n    <WizardInputFile\n      onBlur={action("On blur")}\n      onChange={action("On change")}\n      onFocus={action("On focus")}\n      onEnterKey={action("On enter key")}\n      accept="*"\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardInputFile@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:25}}})).add("Default",Object(r.withInfo)("\n      Wizard Input File is a component for loading a file from the disk.\n\n      &nbsp;\n\n      It is possible to set up the additional properties like validation and filters. \n    ")(function(){return a.a.createElement(c.a,{onBlur:Object(i.action)("On blur"),onChange:Object(i.action)("On change"),onFocus:Object(i.action)("On focus"),onEnterKey:Object(i.action)("On enter key"),accept:"*"})}))}).call(this,n(15)(e))},1569:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(213),l=n.n(r),c=n(14).withStorySource;l.a.displayName="WizardFooter",Object(o.storiesOf)("Wizard (deprecated) > WizardFooter",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardFooter from "@automatic-labs/ui-components/wizard/wizard-footer";\n\nWizardFooter.displayName = "WizardFooter";\n\nstoriesOf("Wizard (deprecated) > WizardFooter", module).add(\n  "Default",\n  withInfo(`\n      Wizard Footer is usually located at the bottom and displays important information about the current view or the entire application.\n    `)(() => (\n    <div className="wizard-footer-wrapper">\n      <WizardFooter>\n        This is an example of text entered into the WizardFooter component.\n      </WizardFooter>\n    </div>\n  ))\n);\n',{"Wizard (deprecated) > WizardFooter@Default":{startLoc:{col:2,line:9},endLoc:{col:4,line:18}}})).add("Default",Object(i.withInfo)("\n      Wizard Footer is usually located at the bottom and displays important information about the current view or the entire application.\n    ")(function(){return a.a.createElement("div",{className:"wizard-footer-wrapper"},a.a.createElement(l.a,null,"This is an example of text entered into the WizardFooter component."))}))}).call(this,n(15)(e))},1570:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(210),c=n(215),s=n.n(c),d=n(285),p=n.n(d),m=n(114),u=n.n(m),h=n(284),b=n.n(h),f=n(146),y=n.n(f),v=n(14).withStorySource;p.a.displayName="WizardFlowStepTransition";var w=[{title:"First Name",value:"John"},{title:"Last Name",value:"Doe"},{title:"Email",value:"john.doe@email.com"}];Object(o.storiesOf)("Wizard (deprecated) > WizardFlowStepTransition",e).addDecorator(v('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { linkTo } from "@storybook/addon-links";\nimport WizardFlow from "@automatic-labs/ui-components/wizard/wizard-flow";\nimport WizardFlowStepTransition from "@automatic-labs/ui-components/wizard/wizard-flow-step-transition";\nimport WizardNavigation from "@automatic-labs/ui-components/wizard/wizard-navigation";\nimport WizardStepProcess from "@automatic-labs/ui-components/wizard/wizard-step-process";\nimport WizardStepSummary from "@automatic-labs/ui-components/wizard/wizard-step-summary";\n\nWizardFlowStepTransition.displayName = "WizardFlowStepTransition";\n\nconst summaryDetails = [\n  { title: "First Name", value: "John" },\n  { title: "Last Name", value: "Doe" },\n  { title: "Email", value: "john.doe@email.com" }\n];\n\nfunction renderWizardNavigation() {\n  <WizardNavigation backEnabled={false} />;\n}\n\nfunction generateSteps() {\n  return {\n    "step-summary": (\n      <WizardStepSummary\n        summary={summaryDetails}\n        advanceButtonLabel="Advance"\n        advanceTo="process:generic"\n      />\n    ),\n    "process:generic": (\n      <WizardStepProcess\n        processState="complete"\n        messageText="Message text label"\n      />\n    )\n  };\n}\n\nstoriesOf("Wizard (deprecated) > WizardFlowStepTransition", module)\n  .add("Component demo", () => (\n    <div className="wizard-flow-demo">\n      <WizardFlow\n        mastheadMain={renderWizardNavigation()}\n        steps={generateSteps()}\n        start="step-summary"\n        onExit={action("Button clicked")}\n        navType="dynamic"\n      />\n    </div>\n  ))\n  .add(\n    "Component description",\n    withInfo(`\n      Wizard Flow Step Transition is a transient component between steps.\n\n      &nbsp;\n\n      Besides to indicating \\`children\\`, the required properties are \\`flowDirection\\`, \\`stepName\\` and \\`backStack\\`.\n    `)(() => (\n      <div>\n        <div className="wizard-flow-step-transition-wrapper">\n          <WizardFlowStepTransition\n            visibility={true}\n            flowDirection="forward"\n            stepName="first-step"\n            advancingStep="second-step"\n            backStack={[]}\n          >\n            <div>Step Placeholder</div>\n          </WizardFlowStepTransition>\n        </div>\n        <button\n          onClick={linkTo(\n            "Wizard > WizardFlowStepTransition",\n            "Component demo"\n          )}\n          className="link-to-demo"\n        >\n          See component demo\n        </button>\n      </div>\n    ))\n  );\n',{"Wizard (deprecated) > WizardFlowStepTransition@Component description":{startLoc:{col:4,line:55},endLoc:{col:6,line:85}},"Wizard (deprecated) > WizardFlowStepTransition@Component demo":{startLoc:{col:7,line:43},endLoc:{col:3,line:53}}})).add("Component demo",function(){return a.a.createElement("div",{className:"wizard-flow-demo"},a.a.createElement(s.a,{mastheadMain:void a.a.createElement(u.a,{backEnabled:!1}),steps:{"step-summary":a.a.createElement(y.a,{summary:w,advanceButtonLabel:"Advance",advanceTo:"process:generic"}),"process:generic":a.a.createElement(b.a,{processState:"complete",messageText:"Message text label"})},start:"step-summary",onExit:Object(i.action)("Button clicked"),navType:"dynamic"}))}).add("Component description",Object(r.withInfo)("\n      Wizard Flow Step Transition is a transient component between steps.\n\n      &nbsp;\n\n      Besides to indicating `children`, the required properties are `flowDirection`, `stepName` and `backStack`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement("div",{className:"wizard-flow-step-transition-wrapper"},a.a.createElement(p.a,{visibility:!0,flowDirection:"forward",stepName:"first-step",advancingStep:"second-step",backStack:[]},a.a.createElement("div",null,"Step Placeholder"))),a.a.createElement("button",{onClick:Object(l.linkTo)("Wizard > WizardFlowStepTransition","Component demo"),className:"link-to-demo"},"See component demo"))}))}).call(this,n(15)(e))},1571:function(e,t,n){"use strict";(function(e){var t=n(70),a=n.n(t),o=n(0),i=n.n(o),r=n(5),l=n(4),c=n(3),s=n(148),d=n.n(s),p=n(45),m=n.n(p),u=n(34),h=n.n(u),b=n(38),f=n.n(b),y=n(115),v=n.n(y),w=n(37),g=n.n(w),C=n(215),S=n.n(C),x=n(213),I=n.n(x),E=n(147),N=n.n(E),z=n(114),O=n.n(z),k=n(214),T=n.n(k),W=n(56),L=n.n(W),B=n(284),j=n.n(B),A=n(212),_=n.n(A),D=n(149),P=n.n(D),R=n(338),M=n.n(R),H=n(146),F=n.n(H),$=n(14).withStorySource;S.a.displayName="WizardFlow";var K=(new Date).toISOString().slice(0,10),q=[{value:0,title:"HTML",caption:"Hypertext Markup Language"},{value:1,title:"CSS",caption:"Cascading Style Sheets"},{value:2,title:"JavaScript",caption:"To rule them all"}],U=[{value:0,title:"Engineers",caption:"Write code"},{value:1,title:"Designers",caption:"Create UI/UX"},{value:2,title:"Product Management",caption:"Build products"}],V=[{title:"First Name",value:"John"},{title:"Last Name",value:"Doe"},{title:"Email",value:"john.doe@email.com"}];function G(e){var t=[{value:"United Kingdom, Europe",title:"United Kingdom",caption:"Europe",icon:"http://via.placeholder.com/30x30"},{value:"United States, North America",title:"United States",caption:"North America",icon:"http://via.placeholder.com/30x30"},{value:"Uruguay, South America",title:"Uruguay",caption:"South America",icon:"http://via.placeholder.com/30x30"},{value:"united kingdom, europe",title:"United Kingdom",caption:"Europe",icon:"http://via.placeholder.com/30x30"},,{value:"united states, north america",title:"United States",caption:"North America",icon:"http://via.placeholder.com/30x30"},{value:"uruguay, south america",title:"Uruguay",caption:"South America",icon:"http://via.placeholder.com/30x30"}].filter(function(t){return t.value.startsWith(e)});return new a.a(function(n){setTimeout(function(){return n(e?t:[])},500)})}function J(){return{"input:time":i.a.createElement(L.a,{advanceTo:"input:email",headerPreTitle:"Create account",headerTitle:"Select a date",inputType:"date",defaultValue:K,inputPlaceholder:"Service date",inputProps:{max:K},onAdvance:Object(l.action)("Button clicked")}),"input:email":i.a.createElement(L.a,{advanceTo:"input:first-name",header:i.a.createElement(f.a,{preTitle:"Create account",title:"Enter you email address",caption:"Submit when done",type:"input"}),onAdvance:Object(l.action)("Button clicked"),inputType:"email"}),"input:first-name":i.a.createElement(L.a,{advanceTo:"input:address",headerPreTitle:"Create account",headerTitle:"Enter your first name",inputPlaceholder:"first name",onAdvance:Object(l.action)("Button clicked")},i.a.createElement(h.a,null,i.a.createElement(g.a,null,"We use your name to personalize your Automatic experience."))),"input:address":i.a.createElement(_.a,{searchResults:G,advanceTo:"input:skills",headerTitle:"What country are you from?",headerCaption:"Please start with the letter 'U'",advanceButtonLabel:"Next step",inputPlaceholder:"U...",onChange:Object(l.action)("On change"),onAdvance:Object(l.action)("Button clicked")}),"input:skills":i.a.createElement(P.a,{advanceTo:"input:team",headerPreTitle:"Create account",headerTitle:"Select your skills",onAdvance:Object(l.action)("Button clicked"),onChange:Object(l.action)("On change"),options:q,defaultValue:[0],isMultiSelect:!0}),"input:team":i.a.createElement(P.a,{advanceTo:"input:age",headerPreTitle:"Create account",headerTitle:"Select your title",onAdvance:Object(l.action)("Button clicked"),onChange:Object(l.action)("On change"),options:U,defaultValue:0}),"input:age":i.a.createElement(M.a,{defaultValue:18,min:18,max:99,advanceTo:"input:age-number",headerPreTitle:"Set age",headerTitle:"Please select your age",headerCaption:"Some extra caption text",onAdvance:Object(l.action)("Button clicked")}),"input:age-number":i.a.createElement(L.a,{inputType:"number",advanceTo:"input:happiness",headerPreTitle:"Set age",headerTitle:"Please enter your age again",onAdvance:Object(l.action)("Button clicked")}),"input:happiness":i.a.createElement(M.a,{defaultValue:8,min:0,max:10,advanceTo:"input:description",headerPreTitle:"Set happiness level",headerTitle:"Please select your happiness level",headerCaption:"Some extra caption text",onAdvance:Object(l.action)("Button clicked"),customScale:N.a.EXPONENTIAL_SCALE(0,10)}),"input:pic":i.a.createElement(T.a,{advanceTo:"input:password",headerPreTitle:"Create account",headerTitle:"Select picture",onAdvance:Object(l.action)("Button clicked")}),"input:description":i.a.createElement(L.a,{advanceTo:"input:pic",headerPreTitle:"Create account",headerTitle:"Enter description",inputPlaceholder:"description",onAdvance:Object(l.action)("Button clicked"),isMultiline:!0},i.a.createElement(h.a,null,i.a.createElement(g.a,null,"We use your name to personalize your experience."))),"input:password":i.a.createElement(L.a,{advanceTo:"input:password-confirmation",headerPreTitle:"Create account",headerTitle:"Enter a password",inputType:"password",inputPlaceholder:"password",onAdvance:Object(l.action)("Button clicked")},i.a.createElement(h.a,null,i.a.createElement(m.a,null,"Requirements"),i.a.createElement(d.a,null,i.a.createElement("li",null,"8 or more characters"),i.a.createElement("li",null,"At least one upper case letter (A..Z)"),i.a.createElement("li",null,"At least one number (0..9)")))),"input:password-confirmation":i.a.createElement(L.a,{advanceTo:"step-summary",type:"final",headerPreTitle:"Create account",headerTitle:"Confirm your password",inputType:"password",inputPlaceholder:"password",advanceButtonLabel:"Create Account",validate:function(e){return function(){}}},i.a.createElement(h.a,null,i.a.createElement(v.a,{promptText:"By creating an account you agree to our",actionText:"Terms of Service",onClick:Object(l.action)("Link clicked")}))),"step-summary":i.a.createElement(F.a,{summary:V,advanceButtonLabel:"Advance",advanceTo:"process:generic"}),"process:generic":i.a.createElement(j.a,{processState:"complete",messageText:"Message text label"})}}Object(r.storiesOf)("Wizard (deprecated) > WizardFlow",e).addDecorator($('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardContentBodyBulletedList from "@automatic-labs/ui-components/wizard/wizard-content-body-bulleted-list";\nimport WizardContentBodyTitle from "@automatic-labs/ui-components/wizard/wizard-content-body-title";\nimport WizardContentSection from "@automatic-labs/ui-components/wizard/wizard-content-section";\nimport WizardContentHeader from "@automatic-labs/ui-components/wizard/wizard-content-header";\nimport WizardContentInlineAction from "@automatic-labs/ui-components/wizard/wizard-content-inline-action";\nimport WizardContentBodyParagraph from "@automatic-labs/ui-components/wizard/wizard-content-body-paragraph";\nimport WizardFlow from "@automatic-labs/ui-components/wizard/wizard-flow";\nimport WizardFooter from "@automatic-labs/ui-components/wizard/wizard-footer";\nimport WizardInputSlider from "@automatic-labs/ui-components/wizard/wizard-input-slider";\nimport WizardNavigation from "@automatic-labs/ui-components/wizard/wizard-navigation";\nimport WizardStepFile from "@automatic-labs/ui-components/wizard/wizard-step-file";\nimport WizardStepInput from "@automatic-labs/ui-components/wizard/wizard-step-input";\nimport WizardStepProcess from "@automatic-labs/ui-components/wizard/wizard-step-process";\nimport WizardStepSearchInput from "@automatic-labs/ui-components/wizard/wizard-step-search-input";\nimport WizardStepSelector from "@automatic-labs/ui-components/wizard/wizard-step-selector";\nimport WizardStepSlider from "@automatic-labs/ui-components/wizard/wizard-step-slider";\nimport WizardStepSummary from "@automatic-labs/ui-components/wizard/wizard-step-summary";\n\nWizardFlow.displayName = "WizardFlow";\n\nconst currentDate = new Date().toISOString().slice(0, 10);\n\nconst skillsOptions = [\n  {\n    value: 0,\n    title: "HTML",\n    caption: "Hypertext Markup Language"\n  },\n  {\n    value: 1,\n    title: "CSS",\n    caption: "Cascading Style Sheets"\n  },\n  {\n    value: 2,\n    title: "JavaScript",\n    caption: "To rule them all"\n  }\n];\n\nconst teamOptions = [\n  {\n    value: 0,\n    title: "Engineers",\n    caption: "Write code"\n  },\n  {\n    value: 1,\n    title: "Designers",\n    caption: "Create UI/UX"\n  },\n  {\n    value: 2,\n    title: "Product Management",\n    caption: "Build products"\n  }\n];\n\nconst summaryDetails = [\n  { title: "First Name", value: "John" },\n  { title: "Last Name", value: "Doe" },\n  { title: "Email", value: "john.doe@email.com" }\n];\n\nfunction renderWizardContentHeader() {\n  return (\n    <WizardContentHeader\n      preTitle="Create account"\n      title="Enter you email address"\n      caption="Submit when done"\n      type="input"\n    />\n  );\n}\n\nfunction renderWizardNavigation() {\n  <WizardNavigation backEnabled={false} />;\n}\n\nfunction renderWizardFooter() {\n  return (\n    <WizardFooter>\n      This is an example of text entered into the WizardFooter component.\n    </WizardFooter>\n  );\n}\n\nfunction searchAdresses(input) {\n  const filteredList = [\n    {\n      value: "United Kingdom, Europe",\n      title: "United Kingdom",\n      caption: "Europe",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "United States, North America",\n      title: "United States",\n      caption: "North America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "Uruguay, South America",\n      title: "Uruguay",\n      caption: "South America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "united kingdom, europe",\n      title: "United Kingdom",\n      caption: "Europe",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    ,\n    {\n      value: "united states, north america",\n      title: "United States",\n      caption: "North America",\n      icon: "http://via.placeholder.com/30x30"\n    },\n    {\n      value: "uruguay, south america",\n      title: "Uruguay",\n      caption: "South America",\n      icon: "http://via.placeholder.com/30x30"\n    }\n  ].filter(({ value }) => value.startsWith(input));\n\n  return new Promise(resolveFn => {\n    setTimeout(() => resolveFn(input ? filteredList : []), 500);\n  });\n}\n\nfunction generateSteps() {\n  return {\n    "input:time": (\n      <WizardStepInput\n        advanceTo="input:email"\n        headerPreTitle="Create account"\n        headerTitle="Select a date"\n        inputType="date"\n        defaultValue={currentDate}\n        inputPlaceholder="Service date"\n        inputProps={{ max: currentDate }}\n        onAdvance={action("Button clicked")}\n      />\n    ),\n    "input:email": (\n      <WizardStepInput\n        advanceTo="input:first-name"\n        header={renderWizardContentHeader()}\n        onAdvance={action("Button clicked")}\n        inputType="email"\n      />\n    ),\n    "input:first-name": (\n      <WizardStepInput\n        advanceTo="input:address"\n        headerPreTitle="Create account"\n        headerTitle="Enter your first name"\n        inputPlaceholder="first name"\n        onAdvance={action("Button clicked")}\n      >\n        <WizardContentSection>\n          <WizardContentBodyParagraph>\n            We use your name to personalize your Automatic experience.\n          </WizardContentBodyParagraph>\n        </WizardContentSection>\n      </WizardStepInput>\n    ),\n    "input:address": (\n      <WizardStepSearchInput\n        searchResults={searchAdresses}\n        advanceTo="input:skills"\n        headerTitle="What country are you from?"\n        headerCaption="Please start with the letter \'U\'"\n        advanceButtonLabel="Next step"\n        inputPlaceholder="U..."\n        onChange={action("On change")}\n        onAdvance={action("Button clicked")}\n      />\n    ),\n    "input:skills": (\n      <WizardStepSelector\n        advanceTo="input:team"\n        headerPreTitle="Create account"\n        headerTitle="Select your skills"\n        onAdvance={action("Button clicked")}\n        onChange={action("On change")}\n        options={skillsOptions}\n        defaultValue={[0]}\n        isMultiSelect\n      />\n    ),\n    "input:team": (\n      <WizardStepSelector\n        advanceTo="input:age"\n        headerPreTitle="Create account"\n        headerTitle="Select your title"\n        onAdvance={action("Button clicked")}\n        onChange={action("On change")}\n        options={teamOptions}\n        defaultValue={0}\n      />\n    ),\n    "input:age": (\n      <WizardStepSlider\n        defaultValue={18}\n        min={18}\n        max={99}\n        advanceTo="input:age-number"\n        headerPreTitle="Set age"\n        headerTitle="Please select your age"\n        headerCaption="Some extra caption text"\n        onAdvance={action("Button clicked")}\n      />\n    ),\n    "input:age-number": (\n      <WizardStepInput\n        inputType="number"\n        advanceTo="input:happiness"\n        headerPreTitle="Set age"\n        headerTitle="Please enter your age again"\n        onAdvance={action("Button clicked")}\n      />\n    ),\n    "input:happiness": (\n      <WizardStepSlider\n        defaultValue={8}\n        min={0}\n        max={10}\n        advanceTo="input:description"\n        headerPreTitle="Set happiness level"\n        headerTitle="Please select your happiness level"\n        headerCaption="Some extra caption text"\n        onAdvance={action("Button clicked")}\n        customScale={WizardInputSlider.EXPONENTIAL_SCALE(0, 10)}\n      />\n    ),\n    "input:pic": (\n      <WizardStepFile\n        advanceTo="input:password"\n        headerPreTitle="Create account"\n        headerTitle="Select picture"\n        onAdvance={action("Button clicked")}\n      />\n    ),\n    "input:description": (\n      <WizardStepInput\n        advanceTo="input:pic"\n        headerPreTitle="Create account"\n        headerTitle="Enter description"\n        inputPlaceholder="description"\n        onAdvance={action("Button clicked")}\n        isMultiline\n      >\n        <WizardContentSection>\n          <WizardContentBodyParagraph>\n            We use your name to personalize your experience.\n          </WizardContentBodyParagraph>\n        </WizardContentSection>\n      </WizardStepInput>\n    ),\n    "input:password": (\n      <WizardStepInput\n        advanceTo="input:password-confirmation"\n        headerPreTitle="Create account"\n        headerTitle="Enter a password"\n        inputType="password"\n        inputPlaceholder="password"\n        onAdvance={action("Button clicked")}\n      >\n        <WizardContentSection>\n          <WizardContentBodyTitle>Requirements</WizardContentBodyTitle>\n          <WizardContentBodyBulletedList>\n            <li>8 or more characters</li>\n            <li>At least one upper case letter (A..Z)</li>\n            <li>At least one number (0..9)</li>\n          </WizardContentBodyBulletedList>\n        </WizardContentSection>\n      </WizardStepInput>\n    ),\n    "input:password-confirmation": (\n      <WizardStepInput\n        advanceTo="step-summary"\n        type="final"\n        headerPreTitle="Create account"\n        headerTitle="Confirm your password"\n        inputType="password"\n        inputPlaceholder="password"\n        advanceButtonLabel="Create Account"\n        validate={value => {\n          return () => {};\n        }}\n      >\n        <WizardContentSection>\n          <WizardContentInlineAction\n            promptText="By creating an account you agree to our"\n            actionText="Terms of Service"\n            onClick={action("Link clicked")}\n          />\n        </WizardContentSection>\n      </WizardStepInput>\n    ),\n    "step-summary": (\n      <WizardStepSummary\n        summary={summaryDetails}\n        advanceButtonLabel="Advance"\n        advanceTo="process:generic"\n      />\n    ),\n    "process:generic": (\n      <WizardStepProcess\n        processState="complete"\n        messageText="Message text label"\n      />\n    )\n  };\n}\n\nstoriesOf("Wizard (deprecated) > WizardFlow", module).add(\n  "Demo",\n  withInfo(`\n      Wizards are flows that accomplish some goal. They usually have multiple steps.\n\n      &nbsp;\n\n      In the component must be specified the property \\`start\\` from the sequence of \\`steps\\`.\n    `)(() => (\n    <div className="wizard-flow-demo">\n      <WizardFlow\n        mastheadMain={renderWizardNavigation()}\n        steps={generateSteps()}\n        start="input:time"\n        onExit={action("Button clicked")}\n        navType="dynamic"\n        footer={renderWizardFooter()}\n      />\n    </div>\n  ))\n);\n',{"Wizard (deprecated) > WizardFlow@Demo":{startLoc:{col:2,line:326},endLoc:{col:4,line:344}}})).add("Demo",Object(c.withInfo)("\n      Wizards are flows that accomplish some goal. They usually have multiple steps.\n\n      &nbsp;\n\n      In the component must be specified the property `start` from the sequence of `steps`.\n    ")(function(){return i.a.createElement("div",{className:"wizard-flow-demo"},i.a.createElement(S.a,{mastheadMain:void i.a.createElement(O.a,{backEnabled:!1}),steps:J(),start:"input:time",onExit:Object(l.action)("Button clicked"),navType:"dynamic",footer:i.a.createElement(I.a,null,"This is an example of text entered into the WizardFooter component.")}))}))}).call(this,n(15)(e))},1572:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(37),s=n.n(c),d=n(115),p=n.n(d),m=n(34),u=n.n(m),h=n(14).withStorySource;u.a.displayName="WizardContentSection",Object(o.storiesOf)("Wizard (deprecated) > WizardContentSection",e).addDecorator(h('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport WizardContentBodyParagraph from "@automatic-labs/ui-components/wizard/wizard-content-body-paragraph";\nimport WizardContentInlineAction from "@automatic-labs/ui-components/wizard/wizard-content-inline-action";\nimport WizardContentSection from "@automatic-labs/ui-components/wizard/wizard-content-section";\n\nWizardContentSection.displayName = "WizardContentSection";\n\nstoriesOf("Wizard (deprecated) > WizardContentSection", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Content Section is a separate wrapper for other components.\n\n      &nbsp;\n\n      Wizard Content Section has boolean property \\`isSeparated\\` used to display the component with separate lines.\n\n      &nbsp;\n\n      In this view, Wizard Content Section uses property \\`isSeparated: false\\`, which is a default.\n    `)(() => (\n      <div>\n        <WizardContentSection isSeparated={boolean("Separated", false)}>\n          <WizardContentBodyParagraph>\n            If you don’t see it within a few minutes, please check your email’s\n            spam and junk folders.\n          </WizardContentBodyParagraph>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={boolean("Separated", false)}>\n          <WizardContentInlineAction\n            promptText="Still having trouble?"\n            actionText="Contact Support"\n            onClick={action("Link clicked")}\n          />\n        </WizardContentSection>\n      </div>\n    ))\n  )\n  .add(\n    "Separated",\n    withInfo(`\n      Wizard Content Section is a separate wrapper for other components.\n\n      &nbsp;\n\n      Wizard Content Section has boolean property \\`isSeparated\\` used to display the component with separate lines.\n\n      &nbsp;\n\n      In this view, Wizard Content Section uses property \\`isSeparated: true\\`, which is not default.\n    `)(() => (\n      <div>\n        <WizardContentSection isSeparated={boolean("Separated", true)}>\n          <WizardContentBodyParagraph>\n            If you don’t see it within a few minutes, please check your email’s\n            spam and junk folders.\n          </WizardContentBodyParagraph>\n        </WizardContentSection>\n        <WizardContentSection isSeparated={boolean("Separated", true)}>\n          <WizardContentInlineAction\n            promptText="Still having trouble?"\n            actionText="Contact Support"\n            onClick={action("Link clicked")}\n          />\n        </WizardContentSection>\n      </div>\n    ))\n  );\n',{"Wizard (deprecated) > WizardContentSection@Separated":{startLoc:{col:4,line:45},endLoc:{col:6,line:72}},"Wizard (deprecated) > WizardContentSection@Default":{startLoc:{col:4,line:15},endLoc:{col:6,line:42}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Content Section is a separate wrapper for other components.\n\n      &nbsp;\n\n      Wizard Content Section has boolean property `isSeparated` used to display the component with separate lines.\n\n      &nbsp;\n\n      In this view, Wizard Content Section uses property `isSeparated: false`, which is a default.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(u.a,{isSeparated:Object(l.boolean)("Separated",!1)},a.a.createElement(s.a,null,"If you don’t see it within a few minutes, please check your email’s spam and junk folders.")),a.a.createElement(u.a,{isSeparated:Object(l.boolean)("Separated",!1)},a.a.createElement(p.a,{promptText:"Still having trouble?",actionText:"Contact Support",onClick:Object(i.action)("Link clicked")})))})).add("Separated",Object(r.withInfo)("\n      Wizard Content Section is a separate wrapper for other components.\n\n      &nbsp;\n\n      Wizard Content Section has boolean property `isSeparated` used to display the component with separate lines.\n\n      &nbsp;\n\n      In this view, Wizard Content Section uses property `isSeparated: true`, which is not default.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(u.a,{isSeparated:Object(l.boolean)("Separated",!0)},a.a.createElement(s.a,null,"If you don’t see it within a few minutes, please check your email’s spam and junk folders.")),a.a.createElement(u.a,{isSeparated:Object(l.boolean)("Separated",!0)},a.a.createElement(p.a,{promptText:"Still having trouble?",actionText:"Contact Support",onClick:Object(i.action)("Link clicked")})))}))}).call(this,n(15)(e))},1573:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(115),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardContentInlineAction",Object(o.storiesOf)("Wizard (deprecated) > WizardContentInlineAction",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport WizardContentInlineAction from "@automatic-labs/ui-components/wizard/wizard-content-inline-action";\n\nWizardContentInlineAction.displayName = "WizardContentInlineAction";\n\nstoriesOf("Wizard (deprecated) > WizardContentInlineAction", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Wizard Content Inline Action is a component to display a custom link.\n\n      &nbsp;\n\n      It is possible to place additional text before the link using the property \\`promptText\\`.\n    `)(() => (\n      <WizardContentInlineAction\n        promptText={text("Prompt text", "Still having trouble?")}\n        actionText={text("Action text", "Contact Support")}\n        onClick={action("Link clicked")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardContentInlineAction@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Wizard Content Inline Action is a component to display a custom link.\n\n      &nbsp;\n\n      It is possible to place additional text before the link using the property `promptText`.\n    ")(function(){return a.a.createElement(s.a,{promptText:Object(l.text)("Prompt text","Still having trouble?"),actionText:Object(l.text)("Action text","Contact Support"),onClick:Object(i.action)("Link clicked")})}))}).call(this,n(15)(e))},1574:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(38),c=n.n(l),s=n(14).withStorySource;c.a.displayName="WizardContentHeader";var d={normal:"Normal",error:"Error",input:"Input"};Object(o.storiesOf)("Wizard (deprecated) > WizardContentHeader",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, select, text } from "@storybook/addon-knobs";\nimport WizardContentHeader from "@automatic-labs/ui-components/wizard/wizard-content-header";\n\nWizardContentHeader.displayName = "WizardContentHeader";\n\nconst typeNormal = "normal";\nconst typeError = "error";\nconst typeInput = "input";\nconst typeSelect = {\n  normal: "Normal",\n  error: "Error",\n  input: "Input"\n};\n\nstoriesOf("Wizard (deprecated) > WizardContentHeader", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      Wizard Content Header may be displayed with additional elements if they are defined such parameters as\n      \\`body\\`, \\`preHeader\\` or \\`caption\\`.\n    `)(() => (\n      <WizardContentHeader\n        type={select("Type", typeSelect, typeNormal)}\n        title={text("Title", "Enter you email address")}\n      />\n    ))\n  )\n  .add(\n    "Error",\n    withInfo(`\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the property \\`type: error\\`.\n    `)(() => (\n      <WizardContentHeader\n        type={select("Type", typeSelect, typeError)}\n        title={text("Title", "Enter you email address")}\n      />\n    ))\n  )\n  .add(\n    "Input",\n    withInfo(`\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the property \\`type: input\\`.\n    `)(() => (\n      <WizardContentHeader\n        type={select("Type", typeSelect, typeInput)}\n        title={text("Title", "Enter you email address")}\n      />\n    ))\n  )\n  .add(\n    "With preTitle",\n    withInfo(`\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with an additional property \\`preTitle\\`.\n    `)(() => (\n      <WizardContentHeader\n        type={select("Type", typeSelect, typeNormal)}\n        title={text("Title", "Enter you email address")}\n        preTitle={text("preTitle", "Create account")}\n      />\n    ))\n  )\n  .add(\n    "With caption",\n    withInfo(`\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the additional properties \\`preTitle\\` and \\`caption\\`.\n    `)(() => (\n      <WizardContentHeader\n        type={select("Type", typeSelect, typeNormal)}\n        title={text("Title", "Enter you email address")}\n        preTitle={text("preTitle", "Create account")}\n        caption={text("Caption", "Submit when done")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardContentHeader@With caption":{startLoc:{col:4,line:83},endLoc:{col:6,line:97}},"Wizard (deprecated) > WizardContentHeader@With preTitle":{startLoc:{col:4,line:67},endLoc:{col:6,line:80}},"Wizard (deprecated) > WizardContentHeader@Input":{startLoc:{col:4,line:52},endLoc:{col:6,line:64}},"Wizard (deprecated) > WizardContentHeader@Error":{startLoc:{col:4,line:37},endLoc:{col:6,line:49}},"Wizard (deprecated) > WizardContentHeader@Normal":{startLoc:{col:4,line:21},endLoc:{col:6,line:34}}})).addDecorator(r.withKnobs).add("Normal",Object(i.withInfo)("\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      Wizard Content Header may be displayed with additional elements if they are defined such parameters as\n      `body`, `preHeader` or `caption`.\n    ")(function(){return a.a.createElement(c.a,{type:Object(r.select)("Type",d,"normal"),title:Object(r.text)("Title","Enter you email address")})})).add("Error",Object(i.withInfo)("\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the property `type: error`.\n    ")(function(){return a.a.createElement(c.a,{type:Object(r.select)("Type",d,"error"),title:Object(r.text)("Title","Enter you email address")})})).add("Input",Object(i.withInfo)("\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the property `type: input`.\n    ")(function(){return a.a.createElement(c.a,{type:Object(r.select)("Type",d,"input"),title:Object(r.text)("Title","Enter you email address")})})).add("With preTitle",Object(i.withInfo)("\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with an additional property `preTitle`.\n    ")(function(){return a.a.createElement(c.a,{type:Object(r.select)("Type",d,"normal"),title:Object(r.text)("Title","Enter you email address"),preTitle:Object(r.text)("preTitle","Create account")})})).add("With caption",Object(i.withInfo)("\n      Wizard Content Header is a component that should contain an introductory text to some a separate part of the view.\n\n      &nbsp;\n\n      In this view, Wizard Content Header is displayed with the additional properties `preTitle` and `caption`.\n    ")(function(){return a.a.createElement(c.a,{type:Object(r.select)("Type",d,"normal"),title:Object(r.text)("Title","Enter you email address"),preTitle:Object(r.text)("preTitle","Create account"),caption:Object(r.text)("Caption","Submit when done")})}))}).call(this,n(15)(e))},1575:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(45),l=n.n(r),c=n(14).withStorySource;l.a.displayName="WizardContentBodyTitle",Object(o.storiesOf)("Wizard (deprecated) > WizardContentBodyTitle",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardContentBodyTitle from "@automatic-labs/ui-components/wizard/wizard-content-body-title";\n\nWizardContentBodyTitle.displayName = "WizardContentBodyTitle";\n\nstoriesOf("Wizard (deprecated) > WizardContentBodyTitle", module).add(\n  "Default",\n  withInfo(`\n      Wizard Content Title is a component that should be an introductory text to some views.\n    `)(() => (\n    <WizardContentBodyTitle>This is an example title</WizardContentBodyTitle>\n  ))\n);\n',{"Wizard (deprecated) > WizardContentBodyTitle@Default":{startLoc:{col:2,line:9},endLoc:{col:4,line:14}}})).add("Default",Object(i.withInfo)("\n      Wizard Content Title is a component that should be an introductory text to some views.\n    ")(function(){return a.a.createElement(l.a,null,"This is an example title")}))}).call(this,n(15)(e))},1576:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(37),l=n.n(r),c=n(14).withStorySource;l.a.displayName="WizardContentBodyParagraph",Object(o.storiesOf)("Wizard (deprecated) > WizardContentBodyParagraph",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardContentBodyParagraph from "@automatic-labs/ui-components/wizard/wizard-content-body-paragraph";\n\nWizardContentBodyParagraph.displayName = "WizardContentBodyParagraph";\n\nstoriesOf("Wizard (deprecated) > WizardContentBodyParagraph", module).add(\n  "Default",\n  withInfo(`\n      Wizard Content Body Paragraph is a simple text to inform users about something.\n    `)(() => (\n    <WizardContentBodyParagraph>\n      This is an example paragraph.\n    </WizardContentBodyParagraph>\n  ))\n);\n',{"Wizard (deprecated) > WizardContentBodyParagraph@Default":{startLoc:{col:2,line:9},endLoc:{col:4,line:16}}})).add("Default",Object(i.withInfo)("\n      Wizard Content Body Paragraph is a simple text to inform users about something.\n    ")(function(){return a.a.createElement(l.a,null,"This is an example paragraph.")}))}).call(this,n(15)(e))},1577:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(336),l=n.n(r),c=n(14).withStorySource;l.a.displayName="WizardContentBodyErrorMessage",Object(o.storiesOf)("Wizard (deprecated) > WizardContentBodyErrorMessage",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardContentBodyErrorMessage from "@automatic-labs/ui-components/wizard/wizard-content-body-error-message";\n\nWizardContentBodyErrorMessage.displayName = "WizardContentBodyErrorMessage";\n\nstoriesOf("Wizard (deprecated) > WizardContentBodyErrorMessage", module).add(\n  "Default",\n  withInfo(`\n      Wizard Content Body Error Message is a simple text to inform users about some error.\n    `)(() => (\n    <WizardContentBodyErrorMessage>\n      What a Terrible Failure! Vehicles with no prior relationship can be\n      connected to this dealership.\n    </WizardContentBodyErrorMessage>\n  ))\n);\n',{"Wizard (deprecated) > WizardContentBodyErrorMessage@Default":{startLoc:{col:2,line:9},endLoc:{col:4,line:17}}})).add("Default",Object(i.withInfo)("\n      Wizard Content Body Error Message is a simple text to inform users about some error.\n    ")(function(){return a.a.createElement(l.a,null,"What a Terrible Failure! Vehicles with no prior relationship can be connected to this dealership.")}))}).call(this,n(15)(e))},1578:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(148),l=n.n(r),c=n(14).withStorySource;l.a.displayName="WizardContentBodyBulletedList",Object(o.storiesOf)("Wizard (deprecated) > WizardContentBodyBulletedList",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport WizardContentBodyBulletedList from "@automatic-labs/ui-components/wizard/wizard-content-body-bulleted-list";\n\nWizardContentBodyBulletedList.displayName = "WizardContentBodyBulletedList";\n\nstoriesOf("Wizard (deprecated) > WizardContentBodyBulletedList", module).add(\n  "Default",\n  withInfo(`\n      Wizard Content Body Bulleted List is intended to hold individual elements of list. It works like an HTML <ul> Tag.\n    `)(() => (\n    <WizardContentBodyBulletedList>\n      <li>Hi</li>\n      <li>Hi there</li>\n      <li>How are you?</li>\n    </WizardContentBodyBulletedList>\n  ))\n);\n',{"Wizard (deprecated) > WizardContentBodyBulletedList@Default":{startLoc:{col:2,line:9},endLoc:{col:4,line:18}}})).add("Default",Object(i.withInfo)("\n      Wizard Content Body Bulleted List is intended to hold individual elements of list. It works like an HTML <ul> Tag.\n    ")(function(){return a.a.createElement(l.a,null,a.a.createElement("li",null,"Hi"),a.a.createElement("li",null,"Hi there"),a.a.createElement("li",null,"How are you?"))}))}).call(this,n(15)(e))},1579:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(150),s=n.n(c),d=n(14).withStorySource;s.a.displayName="WizardButton";var p={normal:"Normal",forward:"Forward",final:"Final",secondary:"Secondary"};Object(o.storiesOf)("Wizard (deprecated) > WizardButton",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select, text } from "@storybook/addon-knobs";\nimport WizardButton from "@automatic-labs/ui-components/wizard/wizard-button";\n\nWizardButton.displayName = "WizardButton";\n\nconst typeNormal = "normal";\nconst typeForward = "forward";\nconst typeFinal = "final";\nconst typeSecondary = "secondary";\nconst typeSelect = {\n  normal: "Normal",\n  forward: "Forward",\n  final: "Final",\n  secondary: "Secondary"\n};\n\nstoriesOf("Wizard (deprecated) > WizardButton", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: \\`normal\\`, \\`forward\\`, \\`final\\` and \\`secondary\\`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type \\`normal\\`, which is default property.\n    `)(() => (\n      <WizardButton\n        clickable={boolean("Clickable", false)}\n        type={select("Type", typeSelect, typeNormal)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  )\n  .add(\n    "Forward",\n    withInfo(`\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: \\`normal\\`, \\`forward\\`, \\`final\\` and \\`secondary\\`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type \\`forward\\`.\n    `)(() => (\n      <WizardButton\n        clickable={boolean("Clickable", false)}\n        type={select("Type", typeSelect, typeForward)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  )\n  .add(\n    "Final",\n    withInfo(`\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: \\`normal\\`, \\`forward\\`, \\`final\\` and \\`secondary\\`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type \\`final\\`.\n    `)(() => (\n      <WizardButton\n        clickable={boolean("Clickable", false)}\n        type={select("Type", typeSelect, typeFinal)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  )\n  .add(\n    "Secondary",\n    withInfo(`\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: \\`normal\\`, \\`forward\\`, \\`final\\` and \\`secondary\\`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type \\`secondary\\`.\n    `)(() => (\n      <WizardButton\n        clickable={boolean("Clickable", false)}\n        type={select("Type", typeSelect, typeSecondary)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  );\n',{"Wizard (deprecated) > WizardButton@Secondary":{startLoc:{col:4,line:90},endLoc:{col:6,line:109}},"Wizard (deprecated) > WizardButton@Final":{startLoc:{col:4,line:68},endLoc:{col:6,line:87}},"Wizard (deprecated) > WizardButton@Forward":{startLoc:{col:4,line:46},endLoc:{col:6,line:65}},"Wizard (deprecated) > WizardButton@Normal":{startLoc:{col:4,line:24},endLoc:{col:6,line:43}}})).addDecorator(l.withKnobs).add("Normal",Object(r.withInfo)("\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: `normal`, `forward`, `final` and `secondary`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type `normal`, which is default property.\n    ")(function(){return a.a.createElement(s.a,{clickable:Object(l.boolean)("Clickable",!1),type:Object(l.select)("Type",p,"normal"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})})).add("Forward",Object(r.withInfo)("\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: `normal`, `forward`, `final` and `secondary`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type `forward`.\n    ")(function(){return a.a.createElement(s.a,{clickable:Object(l.boolean)("Clickable",!1),type:Object(l.select)("Type",p,"forward"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})})).add("Final",Object(r.withInfo)("\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: `normal`, `forward`, `final` and `secondary`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type `final`.\n    ")(function(){return a.a.createElement(s.a,{clickable:Object(l.boolean)("Clickable",!1),type:Object(l.select)("Type",p,"final"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})})).add("Secondary",Object(r.withInfo)("\n      The Wizard Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Wizard Button with a label to display the text.\n\n      &nbsp;\n\n      Wizard Button has four different types: `normal`, `forward`, `final` and `secondary`.\n\n      &nbsp;\n\n      In this view, Wizard Button is displayed in the type `secondary`.\n    ")(function(){return a.a.createElement(s.a,{clickable:Object(l.boolean)("Clickable",!1),type:Object(l.select)("Type",p,"secondary"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})}))}).call(this,n(15)(e))},1580:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(332),c=n.n(l),s=n(14).withStorySource;c.a.displayName="AuthStepErrorInternal",Object(o.storiesOf)("Wizard (deprecated) > WizardAuthStepErrorUnknown",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport AuthStepErrorInternal from "@automatic-labs/ui-components/wizard/generic/step-error-unknown";\n\nAuthStepErrorInternal.displayName = "AuthStepErrorInternal";\n\nstoriesOf("Wizard (deprecated) > WizardAuthStepErrorUnknown", module).add(\n  "Default",\n  withInfo(`\n    AuthStepErrorUnknown is one of the error views that prevented the user from succeeding successfully.\n    `)(() => (\n    <AuthStepErrorInternal\n      onAdvance={action("Button clicked")}\n      onContactSupport={action("Link clicked")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardAuthStepErrorUnknown@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:18}}})).add("Default",Object(r.withInfo)("\n    AuthStepErrorUnknown is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(c.a,{onAdvance:Object(i.action)("Button clicked"),onContactSupport:Object(i.action)("Link clicked")})}))}).call(this,n(15)(e))},1581:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(333),c=n.n(l),s=n(14).withStorySource;c.a.displayName="AuthStepErrorInternal",Object(o.storiesOf)("Wizard (deprecated) > WizardAuthStepErrorUnauthorized",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport AuthStepErrorInternal from "@automatic-labs/ui-components/wizard/generic/step-error-unauthorized";\n\nAuthStepErrorInternal.displayName = "AuthStepErrorInternal";\n\nstoriesOf("Wizard (deprecated) > WizardAuthStepErrorUnauthorized", module).add(\n  "Default",\n  withInfo(`\n    AuthStepErrorUnauthorized is one of the error views that prevented the user from succeeding successfully.\n    `)(() => <AuthStepErrorInternal onAdvance={action("Button clicked")} />)\n);\n',{"Wizard (deprecated) > WizardAuthStepErrorUnauthorized@Default":{startLoc:{col:2,line:10},endLoc:{col:76,line:13}}})).add("Default",Object(r.withInfo)("\n    AuthStepErrorUnauthorized is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(c.a,{onAdvance:Object(i.action)("Button clicked")})}))}).call(this,n(15)(e))},1582:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(334),c=n.n(l),s=n(14).withStorySource;c.a.displayName="AuthStepErrorTooManyTries",Object(o.storiesOf)("Wizard (deprecated) > WizardAuthStepErrorTooManyTries",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport AuthStepErrorTooManyTries from "@automatic-labs/ui-components/wizard/generic/step-error-too-many-tries";\n\nAuthStepErrorTooManyTries.displayName = "AuthStepErrorTooManyTries";\n\nstoriesOf("Wizard (deprecated) > WizardAuthStepErrorTooManyTries", module).add(\n  "Default",\n  withInfo(`\n      AuthStepErrorTooManyTries is one of the error views that prevented the user from succeeding successfully.\n    `)(() => (\n    <AuthStepErrorTooManyTries\n      onAdvance={action("Button clicked")}\n      onContactSupport={action("Link clicked")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardAuthStepErrorTooManyTries@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:18}}})).add("Default",Object(r.withInfo)("\n      AuthStepErrorTooManyTries is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(c.a,{onAdvance:Object(i.action)("Button clicked"),onContactSupport:Object(i.action)("Link clicked")})}))}).call(this,n(15)(e))},1583:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(335),c=n.n(l),s=n(14).withStorySource;c.a.displayName="AuthStepErrorNetworkFailure",Object(o.storiesOf)("Wizard (deprecated) > WizardAuthStepErrorNetworkFailure",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport AuthStepErrorNetworkFailure from "@automatic-labs/ui-components/wizard/generic/step-error-network";\n\nAuthStepErrorNetworkFailure.displayName = "AuthStepErrorNetworkFailure";\n\nstoriesOf(\n  "Wizard (deprecated) > WizardAuthStepErrorNetworkFailure",\n  module\n).add(\n  "Default",\n  withInfo(`\n    AuthStepErrorNetworkFailure is one of the error views that prevented the user from succeeding successfully.\n    `)(() => (\n    <AuthStepErrorNetworkFailure\n      onAdvance={action("Button clicked")}\n      onContactSupport={action("Link clicked")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardAuthStepErrorNetworkFailure@Default":{startLoc:{col:2,line:13},endLoc:{col:4,line:21}}})).add("Default",Object(r.withInfo)("\n    AuthStepErrorNetworkFailure is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(c.a,{onAdvance:Object(i.action)("Button clicked"),onContactSupport:Object(i.action)("Link clicked")})}))}).call(this,n(15)(e))},1652:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(341),c=n.n(l),s=n(14).withStorySource;c.a.displayName="AuthStepErrorInternal",Object(o.storiesOf)("Wizard (deprecated) > WizardAuthStepErrorInternal",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport AuthStepErrorInternal from "@automatic-labs/ui-components/wizard/generic/step-error-internal";\n\nAuthStepErrorInternal.displayName = "AuthStepErrorInternal";\n\nstoriesOf("Wizard (deprecated) > WizardAuthStepErrorInternal", module).add(\n  "Default",\n  withInfo(`\n    TheAuthStepErrorInternal is one of the error views that prevented the user from succeeding successfully.\n    `)(() => (\n    <AuthStepErrorInternal\n      onAdvance={action("Button clicked")}\n      onContactSupport={action("Link clicked")}\n    />\n  ))\n);\n',{"Wizard (deprecated) > WizardAuthStepErrorInternal@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:18}}})).add("Default",Object(r.withInfo)("\n    TheAuthStepErrorInternal is one of the error views that prevented the user from succeeding successfully.\n    ")(function(){return a.a.createElement(c.a,{onAdvance:Object(i.action)("Button clicked"),onContactSupport:Object(i.action)("Link clicked")})}))}).call(this,n(15)(e))},1653:function(e,t,n){(e.exports=n(17)(!1)).push([e.i,'@keyframes spin {\n  0% {\n    transform: rotateZ(0deg);\n    transform-origin: 50% 50% 0; }\n  100% {\n    transform: rotateZ(360deg);\n    transform-origin: 50% 50% 0; } }\n\n.blur.show {\n  animation-duration: 0.6s;\n  animation-name: blur; }\n\n.blur.hide {\n  animation-duration: 0.6s;\n  animation-name: blur;\n  animation-direction: reverse;\n  opacity: 0; }\n\n@keyframes blur {\n  from {\n    opacity: 0;\n    max-height: 0; }\n  to {\n    opacity: 0.9;\n    max-height: 300px; } }\n\n.sample__item--dark-background {\n  border-radius: 2px;\n  -webkit-border-radius: 2px;\n  background: rgba(4, 6, 8, 0.7);\n  display: inline-block;\n  padding: 5px; }\n\n.sample__item--dark-purple-background {\n  border-radius: 2px;\n  -webkit-border-radius: 2px;\n  background: #19164d;\n  display: inline-block;\n  padding: 5px; }\n\n.sample__item--red-background {\n  border-radius: 2px;\n  -webkit-border-radius: 2px;\n  background: #ec2d4c;\n  display: inline-block;\n  padding: 5px; }\n\n.text-style__input-item {\n  border-radius: 5px;\n  border: 1px solid #dfe3e8;\n  display: block;\n  margin: 15px 0px 15px;\n  padding: 10px;\n  text-align: center;\n  width: 30%; }\n  html[data-useragent*=\'Android\'] .text-style__input-item,\n  html[data-useragent*=\'iPhone\'] .text-style__input-item {\n    width: 50%; }\n  .text-style__input-item--input-active {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 22px;\n    font-weight: 500;\n    letter-spacing: -0.02em;\n    color: #1e2d3d; }\n    @media only screen and (max-device-width: 380px) {\n      .text-style__input-item--input-active {\n        font-size: 19px; } }\n    html[data-useragent*=\'Android\'] .text-style__input-item--input-active {\n      font-family: "Roboto", Helvetica, Arial, sans-serif;\n      font-size: 24px;\n      font-weight: 500;\n      letter-spacing: -0.02em; }\n      @media (max-device-width: 374px) {\n        html[data-useragent*=\'Android\'] .text-style__input-item--input-active {\n          font-size: 23px; } }\n    html[data-useragent*=\'iPhone\'] .text-style__input-item--input-active {\n      font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n      font-size: 22px;\n      font-weight: 500;\n      letter-spacing: -0.02em; }\n      @media (max-device-width: 374px) {\n        html[data-useragent*=\'iPhone\'] .text-style__input-item--input-active {\n          font-size: 19px; } }\n  .text-style__input-item--placeholder {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 22px;\n    font-weight: 500;\n    letter-spacing: -0.02em;\n    color: rgba(4, 6, 8, 0.2); }\n    @media only screen and (max-device-width: 380px) {\n      .text-style__input-item--placeholder {\n        font-size: 19px; } }\n    html[data-useragent*=\'Android\'] .text-style__input-item--placeholder {\n      font-family: "Roboto", Helvetica, Arial, sans-serif;\n      font-size: 24px;\n      font-weight: 500;\n      letter-spacing: -0.02em; }\n      @media (max-device-width: 374px) {\n        html[data-useragent*=\'Android\'] .text-style__input-item--placeholder {\n          font-size: 23px; } }\n    html[data-useragent*=\'iPhone\'] .text-style__input-item--placeholder {\n      font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n      font-size: 22px;\n      font-weight: 500;\n      letter-spacing: -0.02em; }\n      @media (max-device-width: 374px) {\n        html[data-useragent*=\'iPhone\'] .text-style__input-item--placeholder {\n          font-size: 19px; } }\n\n.text-style__button-item {\n  background-color: #00c976;\n  border: none;\n  display: block;\n  height: 50px;\n  margin: 15px 0px 15px; }\n  .text-style__button-item--wizard-navigation-action {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500;\n    color: #fff;\n    line-height: 14px; }\n    html[data-useragent*=\'Android\'] .text-style__button-item--wizard-navigation-action {\n      font-family: "Roboto", Helvetica, Arial, sans-serif;\n      font-size: 13px;\n      font-weight: 500; }\n    html[data-useragent*=\'iPhone\'] .text-style__button-item--wizard-navigation-action {\n      font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n      font-size: 13px;\n      font-weight: 500; }\n\n.text-style__page-title-bar {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #fff;\n  font-weight: 300;\n  line-height: 100px; }\n  .text-style__page-title-bar__page-title {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: normal;\n    color: #fff;\n    font-weight: 300;\n    line-height: 100px;\n    font-size: 28px;\n    margin: 0; }\n\n.text-style--header2 {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 25px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  color: #1e2d3d;\n  line-height: 25px; }\n  @media only screen and (max-device-width: 380px) {\n    .text-style--header2 {\n      font-size: 23px; } }\n  html[data-useragent*=\'Android\'] .text-style--header2 {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 30px;\n    font-weight: 500;\n    letter-spacing: -0.02em; }\n    @media (max-device-width: 374px) {\n      html[data-useragent*=\'Android\'] .text-style--header2 {\n        font-size: 28px; } }\n  html[data-useragent*=\'iPhone\'] .text-style--header2 {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 25px;\n    font-weight: 500;\n    letter-spacing: -0.02em; }\n    @media (max-device-width: 374px) {\n      html[data-useragent*=\'iPhone\'] .text-style--header2 {\n        font-size: 23px; } }\n\n.text-style--header3 {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 22px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  color: #1e2d3d;\n  line-height: 22px; }\n  @media only screen and (max-device-width: 380px) {\n    .text-style--header3 {\n      font-size: 19px; } }\n  html[data-useragent*=\'Android\'] .text-style--header3 {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 24px;\n    font-weight: 500;\n    letter-spacing: -0.02em; }\n    @media (max-device-width: 374px) {\n      html[data-useragent*=\'Android\'] .text-style--header3 {\n        font-size: 23px; } }\n  html[data-useragent*=\'iPhone\'] .text-style--header3 {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 22px;\n    font-weight: 500;\n    letter-spacing: -0.02em; }\n    @media (max-device-width: 374px) {\n      html[data-useragent*=\'iPhone\'] .text-style--header3 {\n        font-size: 19px; } }\n\n.text-style--subheader {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: 500;\n  color: #656e77;\n  line-height: 14px; }\n  html[data-useragent*=\'Android\'] .text-style--subheader {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--subheader {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500; }\n\n.text-style--cardlabel {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: 500;\n  color: #656e77;\n  text-transform: uppercase; }\n  html[data-useragent*=\'Android\'] .text-style--cardlabel {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--cardlabel {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500; }\n\n.text-style--title {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  color: #323d4a;\n  line-height: 20px; }\n  html[data-useragent*=\'Android\'] .text-style--title {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 15px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--title {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 16px;\n    font-weight: 500; }\n\n.text-style--body {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #424c57; }\n  html[data-useragent*=\'Android\'] .text-style--body {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: 400; }\n  html[data-useragent*=\'iPhone\'] .text-style--body {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: normal; }\n\n.text-style--body-action {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #18b8ea;\n  line-height: 16px;\n  text-decoration: none; }\n  html[data-useragent*=\'Android\'] .text-style--body-action {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--body-action {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: 500; }\n\n.text-style--caption {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: normal;\n  color: #656e77; }\n  html[data-useragent*=\'Android\'] .text-style--caption {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: 400; }\n  html[data-useragent*=\'iPhone\'] .text-style--caption {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 13px;\n    font-weight: normal; }\n\n.text-style--action {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: -0.02em;\n  color: #18b8ea;\n  text-decoration: none;\n  text-transform: uppercase; }\n  html[data-useragent*=\'Android\'] .text-style--action {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--action {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    font-weight: 600;\n    letter-spacing: -0.02em; }\n\n.text-style--nav-item-action {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  color: #656e77;\n  text-transform: uppercase; }\n  html[data-useragent*=\'Android\'] .text-style--nav-item-action {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 15px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--nav-item-action {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 16px;\n    font-weight: 500; }\n\n.text-style--nav-footer-item {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: normal;\n  color: #fff;\n  text-transform: uppercase;\n  border: 0;\n  cursor: pointer;\n  text-decoration: none;\n  background: none; }\n\n.text-style--nav-breadcrumbs-item {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #8c939a; }\n\n.text-style--nav-side-menu-item {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #fff;\n  line-height: 40px;\n  text-transform: none; }\n\n.text-style--error-message {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  color: #fff;\n  line-height: 20px; }\n  html[data-useragent*=\'Android\'] .text-style--error-message {\n    font-family: "Roboto", Helvetica, Arial, sans-serif;\n    font-size: 15px;\n    font-weight: 500; }\n  html[data-useragent*=\'iPhone\'] .text-style--error-message {\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    font-size: 16px;\n    font-weight: 500; }\n\n.color__square {\n  display: block;\n  width: 32px;\n  height: 32px;\n  margin-right: 10px; }\n  .color__square--black90 {\n    background-color: #1e2d3d; }\n  .color__square--black80 {\n    background-color: #273443; }\n  .color__square--black70 {\n    background-color: #323d4a; }\n  .color__square--black50 {\n    background-color: #424c57; }\n  .color__square--black40 {\n    background-color: #656e77; }\n  .color__square--black20 {\n    background-color: #8c939a; }\n  .color__square--black15 {\n    background-color: #c3c8ce; }\n  .color__square--black10 {\n    background-color: #dfe3e8; }\n  .color__square--black05 {\n    background-color: #eef1f3; }\n  .color__square--black03 {\n    background-color: #f8f8f9; }\n  .color__square--dark-purple {\n    background-color: #19164d; }\n  .color__square--blue {\n    background-color: #18b8ea; }\n  .color__square--dark-blue {\n    background-color: #1e9adb; }\n  .color__square--light-green {\n    background-color: #2fd993; }\n  .color__square--green {\n    background-color: #00c976; }\n  .color__square--dark-green {\n    background-color: #00af5f; }\n  .color__square--light-red {\n    background-color: #ff7389; }\n  .color__square--red {\n    background-color: #ec2d4c; }\n  .color__square--dark-red {\n    background-color: #d22945; }\n  .color__square--marigold {\n    background-color: #ffc400; }\n  .color__square--asphalt-gray {\n    background-color: #809db2; }\n  .color__square--cartography-beige {\n    background-color: #f3eee2; }\n',""])},1654:function(e,t,n){var a=n(1653);"string"==typeof a&&(a=[[e.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(16)(a,o);a.locals&&(e.exports=a.locals)},1655:function(e,t,n){(e.exports=n(17)(!1)).push([e.i,'.wizard-flow-demo .wizard-flow {\n  position: relative;\n  display: block;\n  min-height: 640px; }\n  .wizard-flow-demo .wizard-flow__container {\n    position: relative;\n    transform: none;\n    -webkit-transform: none;\n    top: 0;\n    left: 0; }\n\n.wizard-footer-wrapper {\n  background-color: #19164d; }\n  .wizard-footer-wrapper .wizard-footer {\n    opacity: 1; }\n\n.wizard-flow-step-transition-wrapper {\n  position: relative;\n  background-color: #19164d;\n  width: 100%;\n  height: 60px; }\n  .wizard-flow-step-transition-wrapper .wizard-flow-step-transition {\n    opacity: 1;\n    transform: none;\n    -webkit-transform: none; }\n  .wizard-flow-step-transition-wrapper div {\n    color: #fff;\n    font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n    padding: 10px;\n    font-size: 13px; }\n\ninput.wizard-input-file {\n  line-height: 0; }\n\n.wizard-navigation-wrapper {\n  padding: 0 5px;\n  background-color: #19164d; }\n\n.wizard-navigation-button-wrapper {\n  background-color: #19164d;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100px; }\n  .wizard-navigation-button-wrapper .wizard-navigation-button {\n    position: relative;\n    top: 0; }\n\n.wizard-navigation-masthead-wrapper {\n  background-color: #19164d;\n  display: block;\n  width: 100%;\n  height: auto;\n  padding: 15px 0; }\n  .wizard-navigation-masthead-wrapper .wizard-navigation-masthead {\n    top: 0;\n    position: relative; }\n\n.link-to-demo {\n  display: block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 5px;\n  margin: 15px 0;\n  padding: 20px;\n  background: none;\n  background-color: #18b8ea;\n  color: #fff;\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: -0.02em;\n  text-transform: uppercase;\n  text-align: center; }\n',""])},1656:function(e,t,n){var a=n(1655);"string"==typeof a&&(a=[[e.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(16)(a,o);a.locals&&(e.exports=a.locals)},1657:function(e,t,n){(e.exports=n(17)(!1)).push([e.i,".nav-item__button--side {\n  color: #656e77; }\n\n.nav-footer {\n  margin-top: 0; }\n\n.mobile-control-wrapper {\n  position: relative;\n  background-color: #19164d;\n  display: block;\n  width: 100px;\n  height: 100px; }\n\n.mobile-control-component {\n  position: absolute;\n  top: 0;\n  right: 0; }\n",""])},1658:function(e,t,n){var a=n(1657);"string"==typeof a&&(a=[[e.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(16)(a,o);a.locals&&(e.exports=a.locals)},1659:function(e,t,n){(e.exports=n(17)(!1)).push([e.i,".nav-side-menu-item {\n  list-style-type: none; }\n",""])},1660:function(e,t,n){var a=n(1659);"string"==typeof a&&(a=[[e.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(16)(a,o);a.locals&&(e.exports=a.locals)},1661:function(e,t,n){(e.exports=n(17)(!1)).push([e.i,'body,\nhtml {\n  background-color: #fff; }\n\n#root > div > div:not(:nth-child(2)) h1 {\n  color: #19164d;\n  font-weight: 500; }\n\n#root > div > div:not(:nth-child(2)) h2 {\n  color: #19164d;\n  font-weight: 400;\n  padding-bottom: 10px; }\n\n#root > div > div:nth-child(1) > div > div {\n  border: none; }\n\n#root > div > div:nth-child(3) thead th {\n  background: none;\n  font-size: 16px;\n  font-weight: 500;\n  color: #323d4a;\n  line-height: 20px;\n  text-align: left;\n  border-color: #eee; }\n\n#root > div > div:nth-child(3) tbody tr:nth-child(2n + 1) {\n  background: #f8f8f9; }\n\n#root > div > div:nth-child(3) td {\n  font-family: -apple-system, "BlinkMacSystemFont", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  color: #424c57;\n  border-color: #eee; }\n\n#root > div > div:nth-child(3) pre {\n  overflow-x: auto;\n  padding-right: 15px; }\n  #root > div > div:nth-child(3) pre button {\n    min-width: 65px; }\n\n.sb-show-main {\n  margin: 0px 18px 0 18px;\n  width: auto; }\n\n.main {\n  font-family: -apple-system, ".SFNSText-Regular", "San Francisco", BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", "Lucida Grande", Arial, sans-serif;\n  color: #444;\n  font-size: 15px;\n  font-weight: 300; }\n\n.araf-layout {\n  border-radius: 3px; }\n  .araf-layout__wrapper {\n    background-color: #19164d;\n    min-height: auto; }\n\n.sourcecode {\n  display: inline-block;\n  padding: 15px 20px;\n  background-color: #f3f3f3; }\n  .sourcecode--full {\n    display: block; }\n  .sourcecode--red {\n    color: #ec2d4c; }\n\n.code-single {\n  font-size: 15px;\n  font-weight: 600;\n  padding: 2px 5px;\n  border: 1px solid #eae9e9;\n  border-radius: 4px;\n  background-color: #f3f2f2;\n  color: #3a3a3a; }\n\n.code-segment {\n  display: flex;\n  align-items: center; }\n  .code-segment__text {\n    display: inline-block;\n    padding: 8px 12px 7px 12px;\n    margin: 3px 0;\n    background-color: #f3f3f3; }\n\n.ml5 {\n  margin-left: 5px; }\n\n.mt50 {\n  margin-top: 50px; }\n\n.mb15 {\n  margin-bottom: 15px; }\n',""])},1662:function(e,t,n){var a=n(1661);"string"==typeof a&&(a=[[e.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(16)(a,o);a.locals&&(e.exports=a.locals)},1663:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(32),r=n.n(i),l=n(20),c=n.n(l),s=n(14).withStorySource,d={padding:"5px 0",borderBottom:"1px dashed #E0E3E8"};Object(o.storiesOf)("SCSS Components > Styles",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport ContentHeader from "@automatic-labs/ui-components/content/content-header";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\n\nconst textStyleMixinsItem = {\n  padding: "5px 0",\n  borderBottom: "1px dashed #E0E3E8"\n};\n\nstoriesOf("SCSS Components > Styles", module).add("Default", () => (\n  <main className="main">\n    <div>\n      <ContentHeader title="Style Components" />\n      <ContentSection>\n        <p>\n          SCSS style mixins and variables can be reused within your project to\n          ensure consistent spacing, color, and styling to match the Automatic\n          digital brand.\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Usage" />\n      <ContentSection>\n        <p className="sourcecode">\n          <span className="sourcecode--red">\n            @import \'~@automatic-labs/ui-components/styles/main\'\n          </span>;\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Text Style Mixins" />\n      <ContentSection>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-header2</code>\n          </p>\n          <p className="text-style--header2">Heder2</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-header3</code>\n          </p>\n          <p className="text-style--header3">Header3</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-subheader</code>\n          </p>\n          <p className="text-style--subheader">Sub Header</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-cardlabel</code>\n          </p>\n          <p className="text-style--cardlabel">Card Label</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-title</code>\n          </p>\n          <p className="text-style--title">Title</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-body</code>\n          </p>\n          <p className="text-style--body">Body</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-body-action</code>\n          </p>\n          <p className="text-style--body-action">Body Action</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-caption</code>\n          </p>\n          <p className="text-style--caption">Caption</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-action</code>\n          </p>\n          <p className="text-style--action">Action</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-input-active</code>\n          </p>\n          <input\n            className="text-style__input-item text-style__input-item--input-active"\n            type="text"\n            defaultValue="Input active"\n          />\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-input-placeholder</code>\n          </p>\n          <input\n            className="text-style__input-item text-style__input-item--placeholder"\n            type="text"\n            defaultValue="Input Placeholder"\n          />\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">\n              textstyle-wizard-navigation-action\n            </code>\n          </p>\n          <button className="text-style__button-item text-style__button-item--wizard-navigation-action">\n            Wizard Nav Action\n          </button>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-nav-item-action</code>\n          </p>\n          <p className="text-style--nav-item-action">Nav Action</p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-nav-footer-item</code>\n          </p>\n          <div\n            className={\n              "sample__item" +\n              " " +\n              "sample__item--dark-background" +\n              " " +\n              "mb15"\n            }\n          >\n            <button className="text-style--nav-footer-item">\n              Nav Footer Item\n            </button>\n          </div>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-nav-breadcrumbs-item</code>\n          </p>\n          <p className="text-style--nav-breadcrumbs-item">\n            Nav Breadcrumbs Item\n          </p>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-nav-side-menu-item</code>\n          </p>\n          <div\n            className={\n              "sample__item" +\n              " " +\n              "sample__item--dark-purple-background" +\n              " " +\n              "mb15"\n            }\n          >\n            <button className="nav-side-menu-item__button">\n              Nav Side Menu Item\n            </button>\n          </div>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-page-title-bar</code>\n          </p>\n          <div\n            className={\n              "sample__item" +\n              " " +\n              "sample__item--dark-purple-background" +\n              " " +\n              "mb15"\n            }\n          >\n            <div className="text-style__page-title-bar">\n              <h1 className="text-style__page-title-bar__page-title">\n                Page Title Bar\n              </h1>\n            </div>\n          </div>\n        </div>\n        <div className="sample" style={textStyleMixinsItem}>\n          <p>\n            <code className="code-single">textstyle-error-message</code>\n          </p>\n          <div\n            className={\n              "sample__item" +\n              " " +\n              "sample__item--red-background" +\n              " " +\n              "mb15"\n            }\n          >\n            <p className="text-style--error-message">Error Message</p>\n          </div>\n        </div>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Padding and Margins Mixins" />\n      <ContentSection>\n        <p>\n          <code className="code-single">\n            padding($top, $right, $bottom, $left)\n          </code>\n        </p>\n        <p>\n          <code className="code-single">padding-top($top)</code>\n        </p>\n        <p>\n          <code className="code-single">padding-right($right)</code>\n        </p>\n        <p>\n          <code className="code-single">padding-bottom($bottom)</code>\n        </p>\n        <p>\n          <code className="code-single">padding-left($left)</code>\n        </p>\n        <p>\n          <code className="code-single">\n            margin($top, $right, $bottom, $left)\n          </code>\n        </p>\n        <p>\n          <code className="code-single">margin-top($top)</code>\n        </p>\n        <p>\n          <code className="code-single">margin-right($right)</code>\n        </p>\n        <p>\n          <code className="code-single">margin-bottom($bottom)</code>\n        </p>\n        <p>\n          <code className="code-single">margin-left($left)</code>\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Utility Mixins" />\n      <ContentSection>\n        <p>\n          <code className="code-single">button-reset</code>\n        </p>\n        <p>Reset buttons for further styling</p>\n        <p>\n          <code className="code-single">on-focus</code>\n        </p>\n        <p>Remove halo and use opacity when element is focused</p>\n        <p>\n          <code className="code-single">spin</code>\n        </p>\n        <p>Animate item spinning</p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Base Color Variables" />\n      <ContentSection>\n        <h4>Solid Blacks</h4>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black90" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black90: #1e2d3d;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black80" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black80: #273443;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black70" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black70: #323d4a;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black50" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black50: #424c57;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black40" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black40: #656e77;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black20" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black20: #8c939a;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black15" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black15: #c3c8ce;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black10" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black10: #dfe3e8;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black05" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black05: #eef1f3;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--black03" />\n          </div>\n          <div>\n            <p className="code-segment__text">$black03: #f8f8f9;</p>\n          </div>\n        </div>\n        <br />\n        <h4>Black Alphas</h4>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka90: rgba(4, 6, 8, 0.9);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka80: rgba(4, 6, 8, 0.8);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka70: rgba(4, 6, 8, 0.7);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka50: rgba(4, 6, 8, 0.53);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka40: rgba(4, 6, 8, 0.42);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka20: rgba(4, 6, 8, 0.2);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka15: rgba(4, 6, 8, 0.15);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka10: rgba(4, 6, 8, 0.1);</p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$blacka05: rgba(4, 6, 8, 0.05);</p>\n        </div>\n        <br />\n        <h4>Whites</h4>\n        <div className="code-segment">\n          <p className="code-segment__text">$white: #fff;</p>\n        </div>\n        <h4>White Alphas</h4>\n        <div className="code-segment">\n          <p className="code-segment__text">\n            $whitea80: rgba(255, 255, 255, 0.8);\n          </p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">\n            $whitea40: rgba(255, 255, 255, 0.42);\n          </p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">\n            $whitea10: rgba(255, 255, 255, 0.1);\n          </p>\n        </div>\n        <div className="code-segment">\n          <p className="code-segment__text">$transparent: rgba(4, 6, 8, 0);</p>\n        </div>\n        <h4>Color Palette</h4>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--dark-purple" />\n          </div>\n          <div>\n            <p className="code-segment__text">$dark-purple: #19164d;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--blue" />\n          </div>\n          <div>\n            <p className="code-segment__text">$blue: #18b8ea;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--dark-blue" />\n          </div>\n          <div>\n            <p className="code-segment__text">$dark-blue: #1e9adb;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--light-green" />\n          </div>\n          <div>\n            <p className="code-segment__text">$light-green: #2fd993;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--green" />\n          </div>\n          <div>\n            <p className="code-segment__text">$dark-purple: #00c976;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--dark-green" />\n          </div>\n          <div>\n            <p className="code-segment__text">$dark-green: #00af5f;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--light-red" />\n          </div>\n          <div>\n            <p className="code-segment__text">$light-red: #ff7389;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--red" />\n          </div>\n          <div>\n            <p className="code-segment__text">$red: #ec2d4c;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--dark-red" />\n          </div>\n          <div>\n            <p className="code-segment__text">$dark-red: #d22945;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--marigold" />\n          </div>\n          <div>\n            <p className="code-segment__text">$marigold: #ffc400;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--asphalt-gray" />\n          </div>\n          <div>\n            <p className="code-segment__text">$asphalt-gray: #809db2;</p>\n          </div>\n        </div>\n        <div className="code-segment">\n          <div>\n            <div className="color__square color__square--cartography-beige" />\n          </div>\n          <div>\n            <p className="code-segment__text">$cartography-beige: #f3eee2;</p>\n          </div>\n        </div>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Color Mapping Variables" />\n      <ContentSection>\n        <p>\n          Use these semantic variables to ensure your project adheres to\n          standard visual design patterns.\n        </p>\n        <p className="sourcecode sourcecode--full">\n          $hidden-color: $transparent;<br />\n          $background-color: $black10;<br />\n          $background-splash-color: $dark-purple;<br />\n          <br />\n          // Cards<br />\n          $card-background-color: $white;<br />\n          $card-top-shadow-color: $blacka05;<br />\n          $card-bottom-shadow-color: $blacka10;<br />\n          <br />\n          // Borders<br />\n          $border-regular-color: $blacka10;<br />\n          $border-regular-solid-color: $black10;<br />\n          <br />\n          // States<br />\n          $neutral-color: $black70;<br />\n          $good-color: $green;<br />\n          $bad-color: $red;<br />\n          <br />\n          // Copy<br />\n          $text-prominent-color: $black90;<br />\n          $text-semi-prominent-color: $black70;<br />\n          $text-regular-color: $black50;<br />\n          $text-lesser-color: $black40;<br />\n          $text-inactive-color: $blacka20;<br />\n          $text-inverse-color: $white;<br />\n          $text-inverse-light-color: $whitea80;<br />\n          <br />\n          $text-error-color: $bad-color;<br />\n          $text-bad-color: $bad-color;<br />\n          $text-good-color: $good-color;<br />\n          <br />\n          // Actions<br />\n          $action-color: $blue;<br />\n          $action-text-color-inverse: $white;<br />\n          $action-text-color-inverse-disabled: $whitea40;<br />\n          $action-disabled-color: $black20;<br />\n          <br />\n          // Images<br />\n          $image-placeholder-color: $black05;<br />\n          <br />\n          // Inputs<br />\n          $input-selected-color: $black03;<br />\n          $input-selected-solid-color: $action-color;<br />\n          $input-deselected-color: $white;<br />\n          $input-clear-action-color: $black15;<br />\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Media Queries" />\n      <ContentSection>\n        <p className="sourcecode sourcecode--full">\n          // Scaling for device screens based on width<br />\n          $media-query-mobile-device-font-scale: \'only screen and\n          (max-device-width: 380px)\';<br />\n          $media-query-mobile-device-width: \'only screen and (max-device-width:\n          380px)\';<br />\n          $media-query-tablet-device-width: \'only screen and (max-device-width:\n          768px)\';<br />\n          <br />\n          // Scaling for all screen sizes based on widths<br />\n          $media-query-large-width: \'only screen and (min-width: 1280px)\';<br />\n          $media-query-mobile-width: \'only screen and (max-width: 380px)\';<br />\n          $media-query-tablet-width: \'only screen and (max-width: 768px)\';<br />\n        </p>\n      </ContentSection>\n    </div>\n  </main>\n));\n',{"SCSS Components > Styles@Default":{startLoc:{col:50,line:11},endLoc:{col:1,line:576}}})).add("Default",function(){return a.a.createElement("main",{className:"main"},a.a.createElement("div",null,a.a.createElement(r.a,{title:"Style Components"}),a.a.createElement(c.a,null,a.a.createElement("p",null,"SCSS style mixins and variables can be reused within your project to ensure consistent spacing, color, and styling to match the Automatic digital brand."))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Usage"}),a.a.createElement(c.a,null,a.a.createElement("p",{className:"sourcecode"},a.a.createElement("span",{className:"sourcecode--red"},"@import '~@automatic-labs/ui-components/styles/main'"),";"))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Text Style Mixins"}),a.a.createElement(c.a,null,a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-header2")),a.a.createElement("p",{className:"text-style--header2"},"Heder2")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-header3")),a.a.createElement("p",{className:"text-style--header3"},"Header3")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-subheader")),a.a.createElement("p",{className:"text-style--subheader"},"Sub Header")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-cardlabel")),a.a.createElement("p",{className:"text-style--cardlabel"},"Card Label")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-title")),a.a.createElement("p",{className:"text-style--title"},"Title")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-body")),a.a.createElement("p",{className:"text-style--body"},"Body")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-body-action")),a.a.createElement("p",{className:"text-style--body-action"},"Body Action")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-caption")),a.a.createElement("p",{className:"text-style--caption"},"Caption")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-action")),a.a.createElement("p",{className:"text-style--action"},"Action")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-input-active")),a.a.createElement("input",{className:"text-style__input-item text-style__input-item--input-active",type:"text",defaultValue:"Input active"})),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-input-placeholder")),a.a.createElement("input",{className:"text-style__input-item text-style__input-item--placeholder",type:"text",defaultValue:"Input Placeholder"})),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-wizard-navigation-action")),a.a.createElement("button",{className:"text-style__button-item text-style__button-item--wizard-navigation-action"},"Wizard Nav Action")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-nav-item-action")),a.a.createElement("p",{className:"text-style--nav-item-action"},"Nav Action")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-nav-footer-item")),a.a.createElement("div",{className:"sample__item sample__item--dark-background mb15"},a.a.createElement("button",{className:"text-style--nav-footer-item"},"Nav Footer Item"))),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-nav-breadcrumbs-item")),a.a.createElement("p",{className:"text-style--nav-breadcrumbs-item"},"Nav Breadcrumbs Item")),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-nav-side-menu-item")),a.a.createElement("div",{className:"sample__item sample__item--dark-purple-background mb15"},a.a.createElement("button",{className:"nav-side-menu-item__button"},"Nav Side Menu Item"))),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-page-title-bar")),a.a.createElement("div",{className:"sample__item sample__item--dark-purple-background mb15"},a.a.createElement("div",{className:"text-style__page-title-bar"},a.a.createElement("h1",{className:"text-style__page-title-bar__page-title"},"Page Title Bar")))),a.a.createElement("div",{className:"sample",style:d},a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"textstyle-error-message")),a.a.createElement("div",{className:"sample__item sample__item--red-background mb15"},a.a.createElement("p",{className:"text-style--error-message"},"Error Message"))))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Padding and Margins Mixins"}),a.a.createElement(c.a,null,a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"padding($top, $right, $bottom, $left)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"padding-top($top)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"padding-right($right)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"padding-bottom($bottom)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"padding-left($left)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"margin($top, $right, $bottom, $left)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"margin-top($top)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"margin-right($right)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"margin-bottom($bottom)")),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"margin-left($left)")))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Utility Mixins"}),a.a.createElement(c.a,null,a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"button-reset")),a.a.createElement("p",null,"Reset buttons for further styling"),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"on-focus")),a.a.createElement("p",null,"Remove halo and use opacity when element is focused"),a.a.createElement("p",null,a.a.createElement("code",{className:"code-single"},"spin")),a.a.createElement("p",null,"Animate item spinning"))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Base Color Variables"}),a.a.createElement(c.a,null,a.a.createElement("h4",null,"Solid Blacks"),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black90"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black90: #1e2d3d;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black80"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black80: #273443;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black70"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black70: #323d4a;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black50"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black50: #424c57;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black40"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black40: #656e77;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black20"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black20: #8c939a;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black15"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black15: #c3c8ce;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black10"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black10: #dfe3e8;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black05"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black05: #eef1f3;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--black03"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$black03: #f8f8f9;"))),a.a.createElement("br",null),a.a.createElement("h4",null,"Black Alphas"),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka90: rgba(4, 6, 8, 0.9);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka80: rgba(4, 6, 8, 0.8);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka70: rgba(4, 6, 8, 0.7);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka50: rgba(4, 6, 8, 0.53);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka40: rgba(4, 6, 8, 0.42);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka20: rgba(4, 6, 8, 0.2);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka15: rgba(4, 6, 8, 0.15);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka10: rgba(4, 6, 8, 0.1);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$blacka05: rgba(4, 6, 8, 0.05);")),a.a.createElement("br",null),a.a.createElement("h4",null,"Whites"),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$white: #fff;")),a.a.createElement("h4",null,"White Alphas"),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$whitea80: rgba(255, 255, 255, 0.8);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$whitea40: rgba(255, 255, 255, 0.42);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$whitea10: rgba(255, 255, 255, 0.1);")),a.a.createElement("div",{className:"code-segment"},a.a.createElement("p",{className:"code-segment__text"},"$transparent: rgba(4, 6, 8, 0);")),a.a.createElement("h4",null,"Color Palette"),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--dark-purple"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$dark-purple: #19164d;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--blue"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$blue: #18b8ea;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--dark-blue"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$dark-blue: #1e9adb;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--light-green"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$light-green: #2fd993;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--green"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$dark-purple: #00c976;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--dark-green"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$dark-green: #00af5f;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--light-red"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$light-red: #ff7389;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--red"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$red: #ec2d4c;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--dark-red"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$dark-red: #d22945;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--marigold"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$marigold: #ffc400;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--asphalt-gray"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$asphalt-gray: #809db2;"))),a.a.createElement("div",{className:"code-segment"},a.a.createElement("div",null,a.a.createElement("div",{className:"color__square color__square--cartography-beige"})),a.a.createElement("div",null,a.a.createElement("p",{className:"code-segment__text"},"$cartography-beige: #f3eee2;"))))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Color Mapping Variables"}),a.a.createElement(c.a,null,a.a.createElement("p",null,"Use these semantic variables to ensure your project adheres to standard visual design patterns."),a.a.createElement("p",{className:"sourcecode sourcecode--full"},"$hidden-color: $transparent;",a.a.createElement("br",null),"$background-color: $black10;",a.a.createElement("br",null),"$background-splash-color: $dark-purple;",a.a.createElement("br",null),a.a.createElement("br",null),"// Cards",a.a.createElement("br",null),"$card-background-color: $white;",a.a.createElement("br",null),"$card-top-shadow-color: $blacka05;",a.a.createElement("br",null),"$card-bottom-shadow-color: $blacka10;",a.a.createElement("br",null),a.a.createElement("br",null),"// Borders",a.a.createElement("br",null),"$border-regular-color: $blacka10;",a.a.createElement("br",null),"$border-regular-solid-color: $black10;",a.a.createElement("br",null),a.a.createElement("br",null),"// States",a.a.createElement("br",null),"$neutral-color: $black70;",a.a.createElement("br",null),"$good-color: $green;",a.a.createElement("br",null),"$bad-color: $red;",a.a.createElement("br",null),a.a.createElement("br",null),"// Copy",a.a.createElement("br",null),"$text-prominent-color: $black90;",a.a.createElement("br",null),"$text-semi-prominent-color: $black70;",a.a.createElement("br",null),"$text-regular-color: $black50;",a.a.createElement("br",null),"$text-lesser-color: $black40;",a.a.createElement("br",null),"$text-inactive-color: $blacka20;",a.a.createElement("br",null),"$text-inverse-color: $white;",a.a.createElement("br",null),"$text-inverse-light-color: $whitea80;",a.a.createElement("br",null),a.a.createElement("br",null),"$text-error-color: $bad-color;",a.a.createElement("br",null),"$text-bad-color: $bad-color;",a.a.createElement("br",null),"$text-good-color: $good-color;",a.a.createElement("br",null),a.a.createElement("br",null),"// Actions",a.a.createElement("br",null),"$action-color: $blue;",a.a.createElement("br",null),"$action-text-color-inverse: $white;",a.a.createElement("br",null),"$action-text-color-inverse-disabled: $whitea40;",a.a.createElement("br",null),"$action-disabled-color: $black20;",a.a.createElement("br",null),a.a.createElement("br",null),"// Images",a.a.createElement("br",null),"$image-placeholder-color: $black05;",a.a.createElement("br",null),a.a.createElement("br",null),"// Inputs",a.a.createElement("br",null),"$input-selected-color: $black03;",a.a.createElement("br",null),"$input-selected-solid-color: $action-color;",a.a.createElement("br",null),"$input-deselected-color: $white;",a.a.createElement("br",null),"$input-clear-action-color: $black15;",a.a.createElement("br",null)))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Media Queries"}),a.a.createElement(c.a,null,a.a.createElement("p",{className:"sourcecode sourcecode--full"},"// Scaling for device screens based on width",a.a.createElement("br",null),"$media-query-mobile-device-font-scale: 'only screen and (max-device-width: 380px)';",a.a.createElement("br",null),"$media-query-mobile-device-width: 'only screen and (max-device-width: 380px)';",a.a.createElement("br",null),"$media-query-tablet-device-width: 'only screen and (max-device-width: 768px)';",a.a.createElement("br",null),a.a.createElement("br",null),"// Scaling for all screen sizes based on widths",a.a.createElement("br",null),"$media-query-large-width: 'only screen and (min-width: 1280px)';",a.a.createElement("br",null),"$media-query-mobile-width: 'only screen and (max-width: 380px)';",a.a.createElement("br",null),"$media-query-tablet-width: 'only screen and (max-width: 768px)';",a.a.createElement("br",null)))))})}).call(this,n(15)(e))},1664:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(117),l=n.n(r),c=n(54),s=n.n(c),d=n(14).withStorySource;s.a.displayName="NavSideMenuItem",Object(o.storiesOf)("Navigation > NavSideMenuItem",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport Layout from "@automatic-labs/ui-components/layout/layout";\nimport NavSideMenu from "@automatic-labs/ui-components/nav/nav-side-menu";\nimport NavSideMenuItem from "@automatic-labs/ui-components/nav/nav-side-menu";\n\nNavSideMenuItem.displayName = "NavSideMenuItem";\n\nstoriesOf("Navigation > NavSideMenuItem", module).add(\n  "Default",\n  withInfo(`\n      Nav Side Menu Item is an inseparable element of the Nav Side Menu component.\n    `)(() => (\n    <Layout\n      sideMenu={\n        <NavSideMenu>\n          <NavSideMenu.Item label="Item One" />\n          <NavSideMenu.Item label="Item Two" />\n          <NavSideMenu.Item label="Item Three" />\n        </NavSideMenu>\n      }\n    />\n  ))\n);\n',{"Navigation > NavSideMenuItem@Default":{startLoc:{col:2,line:11},endLoc:{col:4,line:24}}})).add("Default",Object(i.withInfo)("\n      Nav Side Menu Item is an inseparable element of the Nav Side Menu component.\n    ")(function(){return a.a.createElement(l.a,{sideMenu:a.a.createElement(s.a,null,a.a.createElement(s.a.Item,{label:"Item One"}),a.a.createElement(s.a.Item,{label:"Item Two"}),a.a.createElement(s.a.Item,{label:"Item Three"}))})}))}).call(this,n(15)(e))},1665:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(117),l=n.n(r),c=n(54),s=n.n(c),d=n(14).withStorySource;s.a.displayName="NavSideMenu",Object(o.storiesOf)("Navigation > NavSideMenu",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport Layout from "@automatic-labs/ui-components/layout/layout";\nimport NavSideMenu from "@automatic-labs/ui-components/nav/nav-side-menu";\n\nNavSideMenu.displayName = "NavSideMenu";\n\nstoriesOf("Navigation > NavSideMenu", module).add(\n  "Default",\n  withInfo(`\n      Nav Side Menu is an element of the Layout component and it is used by the user to navigate within the application.\n      In this version, the component has a vertical layout.\n\n      &nbsp;\n\n      To make the menu displayed should be used inside the Nav Side Menu Item components.\n    `)(() => (\n    <Layout\n      sideMenu={\n        <NavSideMenu>\n          <NavSideMenu.Item label="Home" />\n          <NavSideMenu.Item label="About" />\n          <NavSideMenu.Item label="Contact" />\n        </NavSideMenu>\n      }\n    />\n  ))\n);\n',{"Navigation > NavSideMenu@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:28}}})).add("Default",Object(i.withInfo)("\n      Nav Side Menu is an element of the Layout component and it is used by the user to navigate within the application.\n      In this version, the component has a vertical layout.\n\n      &nbsp;\n\n      To make the menu displayed should be used inside the Nav Side Menu Item components.\n    ")(function(){return a.a.createElement(l.a,{sideMenu:a.a.createElement(s.a,null,a.a.createElement(s.a.Item,{label:"Home"}),a.a.createElement(s.a.Item,{label:"About"}),a.a.createElement(s.a.Item,{label:"Contact"}))})}))}).call(this,n(15)(e))},1666:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(343),s=n.n(c),d=n(14).withStorySource;s.a.displayName="NavMobileControl",Object(o.storiesOf)("Navigation > NavMobileControl",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport NavMobileControl from "@automatic-labs/ui-components/nav/nav-mobile-control";\n\nNavMobileControl.displayName = "NavMobileControl";\n\nstoriesOf("Navigation > NavMobileControl", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Nav Mobile Control is used to display content at smaller resolutions.\n\n      &nbsp;\n\n      The component has a boolean property \\`expanded\\`.\n\n      &nbsp;\n\n      In this view, the component is displayed with the default property \\`expanded: false\\`.\n    `)(() => (\n      <div className="mobile-control-wrapper">\n        <NavMobileControl\n          expanded={boolean("Expanded", false)}\n          onToggleMobileVisibility={action("Mobile control clicked")}\n          className="mobile-control-component"\n        />\n      </div>\n    ))\n  );\n',{"Navigation > NavMobileControl@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:32}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Nav Mobile Control is used to display content at smaller resolutions.\n\n      &nbsp;\n\n      The component has a boolean property `expanded`.\n\n      &nbsp;\n\n      In this view, the component is displayed with the default property `expanded: false`.\n    ")(function(){return a.a.createElement("div",{className:"mobile-control-wrapper"},a.a.createElement(s.a,{expanded:Object(l.boolean)("Expanded",!1),onToggleMobileVisibility:Object(i.action)("Mobile control clicked"),className:"mobile-control-component"}))}))}).call(this,n(15)(e))},1667:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(27),l=n.n(r),c=n(344),s=n.n(c),d=n(14).withStorySource;s.a.displayName="NavMenu",Object(o.storiesOf)("Navigation > NavMenu",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport NavItem from "@automatic-labs/ui-components/nav/nav-item";\nimport NavMenu from "@automatic-labs/ui-components/nav/nav-menu";\n\nNavMenu.displayName = "NavMenu";\n\nstoriesOf("Navigation > NavMenu", module).add(\n  "Default",\n  withInfo(`\n      Nav Menu is part of the Nav Bar component and is responsible for displaying the menu.\n\n      &nbsp;\n\n      To make the menu displayed should be used inside the Nav Item components.\n    `)(() => (\n    <NavMenu>\n      <NavItem>Link One</NavItem>\n      <NavItem>Link Two</NavItem>\n      <NavItem>Link Three</NavItem>\n    </NavMenu>\n  ))\n);\n',{"Navigation > NavMenu@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:23}}})).add("Default",Object(i.withInfo)("\n      Nav Menu is part of the Nav Bar component and is responsible for displaying the menu.\n\n      &nbsp;\n\n      To make the menu displayed should be used inside the Nav Item components.\n    ")(function(){return a.a.createElement(s.a,null,a.a.createElement(l.a,null,"Link One"),a.a.createElement(l.a,null,"Link Two"),a.a.createElement(l.a,null,"Link Three"))}))}).call(this,n(15)(e))},1668:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(217),c=n.n(l),s=n(14).withStorySource;c.a.displayName="NavMasthead",Object(o.storiesOf)("Navigation > NavMasthead",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport NavMasthead from "@automatic-labs/ui-components/nav/nav-masthead";\n\nNavMasthead.displayName = "NavMasthead";\n\nstoriesOf("Navigation > NavMasthead", module)\n  .addDecorator(withKnobs)\n  .add(\n    "With custom alt attribute",\n    withInfo(`\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo\'s custom alt attribure, image URL for the logo or image URL for the mobile logo.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property \\`mastheadName\\`, which set up an alt attribute for the logo\'s image.\n    `)(() => (\n      <NavMasthead mastheadName={text("Alt attribute", "Custom name")} />\n    ))\n  )\n  .add(\n    "With custom logo",\n    withInfo(`\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property \\`mastheadLogo\\`, which set up the URL address to the logo\'s image.\n    `)(() => (\n      <NavMasthead\n        mastheadName={text("Alt attribute", "Custom name")}\n        mastheadLogo={text(\n          "Logo\'s image URL",\n          "http://via.placeholder.com/60x60"\n        )}\n      />\n    ))\n  )\n  .add(\n    "With custom mobile logo",\n    withInfo(`\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property \\`mastheadMobileLogo\\`, which set up the URL address to the mobile logo\'s image.\n    `)(() => (\n      <NavMasthead\n        mastheadName={text("Alt attribute", "Custom name")}\n        mastheadLogo={text(\n          "Logo\'s image URL",\n          "http://via.placeholder.com/60x60"\n        )}\n        mastheadMobileLogo={text(\n          "Mobile logo\'s URL",\n          "http://via.placeholder.com/40x40"\n        )}\n      />\n    ))\n  );\n',{"Navigation > NavMasthead@With custom mobile logo":{startLoc:{col:4,line:47},endLoc:{col:6,line:66}},"Navigation > NavMasthead@With custom logo":{startLoc:{col:4,line:29},endLoc:{col:6,line:44}},"Navigation > NavMasthead@With custom alt attribute":{startLoc:{col:4,line:12},endLoc:{col:6,line:26}}})).addDecorator(r.withKnobs).add("With custom alt attribute",Object(i.withInfo)("\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo's custom alt attribure, image URL for the logo or image URL for the mobile logo.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property `mastheadName`, which set up an alt attribute for the logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadName:Object(r.text)("Alt attribute","Custom name")})})).add("With custom logo",Object(i.withInfo)("\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property `mastheadLogo`, which set up the URL address to the logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadName:Object(r.text)("Alt attribute","Custom name"),mastheadLogo:Object(r.text)("Logo's image URL","http://via.placeholder.com/60x60")})})).add("With custom mobile logo",Object(i.withInfo)("\n      Nav Masthead is the logo placed in the Nav Bar component.\n\n      &nbsp;\n\n      In this view, Nav Masthead is displayed with the property `mastheadMobileLogo`, which set up the URL address to the mobile logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadName:Object(r.text)("Alt attribute","Custom name"),mastheadLogo:Object(r.text)("Logo's image URL","http://via.placeholder.com/60x60"),mastheadMobileLogo:Object(r.text)("Mobile logo's URL","http://via.placeholder.com/40x40")})}))}).call(this,n(15)(e))},1669:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(69),c=n.n(l),s=n(27),d=n.n(s),p=n(14).withStorySource;d.a.displayName="NavItem";var m={normal:"Normal",action:"Action",side:"Side"};Object(o.storiesOf)("Navigation > NavItem",e).addDecorator(p('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select, text } from "@storybook/addon-knobs";\nimport NavBar from "@automatic-labs/ui-components/nav/nav-bar";\nimport NavItem from "@automatic-labs/ui-components/nav/nav-item";\n\nNavItem.displayName = "NavItem";\n\nconst typeNormal = "normal";\nconst typeAction = "action";\nconst typeSide = "side";\nconst typeSelect = {\n  normal: "Normal",\n  action: "Action",\n  side: "Side"\n};\n\nstoriesOf("Navigation > NavItem", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      The component may be displayed with various properties defining the appearance and actions.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`type: normal\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem type={select("Type", typeSelect, typeNormal)}>\n            Type of Item\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  )\n  .add(\n    "Action",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`type: action\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem type={select("Type", typeSelect, typeAction)}>\n            Type of Item\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  )\n  .add(\n    "Side",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`type: side\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem type={select("Type", typeSelect, typeSide)}>\n            Type of Item\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  )\n  .add(\n    "Selected",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the boolean property \\`isSelected: true\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem isSelected={boolean("Selected", true)}>\n            Selected link\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  )\n  .add(\n    "With default class",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`className\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem className={text("Class name", "default-class")}>\n            Link with default class\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  )\n  .add(\n    "With external link",\n    withInfo(`\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property \\`href\\`.\n    `)(() => (\n      <div>\n        <NavBar>\n          <NavItem>Link One</NavItem>\n          <NavItem href={text("Link", "http://google.com")}>\n            External link\n          </NavItem>\n        </NavBar>\n      </div>\n    ))\n  );\n',{"Navigation > NavItem@With external link":{startLoc:{col:4,line:121},endLoc:{col:6,line:137}},"Navigation > NavItem@With default class":{startLoc:{col:4,line:102},endLoc:{col:6,line:118}},"Navigation > NavItem@Selected":{startLoc:{col:4,line:83},endLoc:{col:6,line:99}},"Navigation > NavItem@Side":{startLoc:{col:4,line:64},endLoc:{col:6,line:80}},"Navigation > NavItem@Action":{startLoc:{col:4,line:45},endLoc:{col:6,line:61}},"Navigation > NavItem@Normal":{startLoc:{col:4,line:22},endLoc:{col:6,line:42}}})).addDecorator(r.withKnobs).add("Normal",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      The component may be displayed with various properties defining the appearance and actions.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `type: normal`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{type:Object(r.select)("Type",m,"normal")},"Type of Item")))})).add("Action",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `type: action`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{type:Object(r.select)("Type",m,"action")},"Type of Item")))})).add("Side",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `type: side`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{type:Object(r.select)("Type",m,"side")},"Type of Item")))})).add("Selected",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the boolean property `isSelected: true`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{isSelected:Object(r.boolean)("Selected",!0)},"Selected link")))})).add("With default class",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `className`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{className:Object(r.text)("Class name","default-class")},"Link with default class")))})).add("With external link",Object(i.withInfo)("\n      Nav Item is an inseparable element of the Nav Bar component.\n\n      &nbsp;\n\n      In this view, the component is displayed with the property `href`.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,{href:Object(r.text)("Link","http://google.com")},"External link")))}))}).call(this,n(15)(e))},1670:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(197),l=n.n(r),c=n(88),s=n.n(c),d=n(14).withStorySource;s.a.displayName="NavFooterItem",Object(o.storiesOf)("Navigation > NavFooterItem",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport NavFooter from "@automatic-labs/ui-components/nav/nav-footer";\nimport NavFooterItem from "@automatic-labs/ui-components/nav/nav-footer-item";\n\nNavFooterItem.displayName = "NavFooterItem";\n\nstoriesOf("Navigation > NavFooterItem", module).add(\n  "Normal",\n  withInfo(`\n      Nav Footer Item is an inseparable element of the Nav Footer component.\n    `)(() => (\n    <NavFooter>\n      <NavFooterItem>Services</NavFooterItem>\n      <NavFooterItem>About</NavFooterItem>\n      <NavFooterItem href="http://google.com">External link</NavFooterItem>\n    </NavFooter>\n  ))\n);\n',{"Navigation > NavFooterItem@Normal":{startLoc:{col:2,line:10},endLoc:{col:4,line:19}}})).add("Normal",Object(i.withInfo)("\n      Nav Footer Item is an inseparable element of the Nav Footer component.\n    ")(function(){return a.a.createElement(l.a,null,a.a.createElement(s.a,null,"Services"),a.a.createElement(s.a,null,"About"),a.a.createElement(s.a,{href:"http://google.com"},"External link"))}))}).call(this,n(15)(e))},1671:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(197),l=n.n(r),c=n(88),s=n.n(c),d=n(14).withStorySource;l.a.displayName="NavFooter",Object(o.storiesOf)("Navigation > NavFooter",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport NavFooter from "@automatic-labs/ui-components/nav/nav-footer";\nimport NavFooterItem from "@automatic-labs/ui-components/nav/nav-footer-item";\n\nNavFooter.displayName = "NavFooter";\n\nstoriesOf("Navigation > NavFooter", module).add(\n  "Default",\n  withInfo(`\n      Nav Footer is located at the bottom of the application and important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      To display navigation, should be used Nav Footer Item components.\n    `)(() => (\n    <div>\n      <NavFooter>\n        <NavFooterItem>Services</NavFooterItem>\n        <NavFooterItem>About</NavFooterItem>\n        <NavFooterItem href="http://google.com">External link</NavFooterItem>\n      </NavFooter>\n    </div>\n  ))\n);\n',{"Navigation > NavFooter@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:25}}})).add("Default",Object(i.withInfo)("\n      Nav Footer is located at the bottom of the application and important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      To display navigation, should be used Nav Footer Item components.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(l.a,null,a.a.createElement(s.a,null,"Services"),a.a.createElement(s.a,null,"About"),a.a.createElement(s.a,{href:"http://google.com"},"External link")))}))}).call(this,n(15)(e))},1672:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(196),i=n(5),r=n(3),l=n(289),c=n.n(l),s=n(635),d=n.n(s),p=n(14).withStorySource;d.a.displayName="NavBreadcrumbsItem";var m={label:"Home",path:"/home",children:[{label:"Contact",path:"/contact"}]},u={location:{pathname:"/contact"},listen:function(){return function(){}}};Object(i.storiesOf)("Navigation > NavBreadcrumbsItem",e).addDecorator(p('import React from "react";\nimport { MemoryRouter } from "react-router-dom";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport NavBreadcrumbs from "@automatic-labs/ui-components/nav/nav-breadcrumbs";\nimport NavBreadcrumbsItem from "@automatic-labs/ui-components/nav/nav-breadcrumbs-item";\n\nNavBreadcrumbsItem.displayName = "NavBreadcrumbsItem";\n\nconst siteMap = {\n  label: "Home",\n  path: "/home",\n  children: [{ label: "Contact", path: "/contact" }]\n};\n\nconst history = {\n  location: { pathname: "/contact" },\n  listen() {\n    return () => {};\n  }\n};\n\nstoriesOf("Navigation > NavBreadcrumbsItem", module).add(\n  "Default",\n  withInfo(`\n    Nav Breadcrumbs Item is a integral part of the Nav Breadcrumbs component.\n    The single component is a link of the breadcrumb trail.\n\n    &nbsp;\n\n    Nav Breadcrumbs Item need two properties: \\`label\\` and \\`path\\`.\n    `)(() => (\n    <MemoryRouter>\n      <NavBreadcrumbs siteMap={siteMap} history={history} />\n    </MemoryRouter>\n  ))\n);\n',{"Navigation > NavBreadcrumbsItem@Default":{startLoc:{col:2,line:24},endLoc:{col:4,line:36}}})).add("Default",Object(r.withInfo)("\n    Nav Breadcrumbs Item is a integral part of the Nav Breadcrumbs component.\n    The single component is a link of the breadcrumb trail.\n\n    &nbsp;\n\n    Nav Breadcrumbs Item need two properties: `label` and `path`.\n    ")(function(){return a.a.createElement(o.MemoryRouter,null,a.a.createElement(c.a,{siteMap:m,history:u}))}))}).call(this,n(15)(e))},1678:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(196),i=n(5),r=n(3),l=n(289),c=n.n(l),s=n(14).withStorySource;c.a.displayName="NavBreadcrumbs",o.MemoryRouter.displayName="MemoryRouter";var d={label:"Home",path:"/home",children:[{label:"About",path:"/about"}]},p={location:{pathname:"/about"},listen:function(){return function(){}}};Object(i.storiesOf)("Navigation > NavBreadcrumbs",e).addDecorator(s('import React from "react";\nimport { MemoryRouter } from "react-router-dom";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport NavBreadcrumbs from "@automatic-labs/ui-components/nav/nav-breadcrumbs";\n\nNavBreadcrumbs.displayName = "NavBreadcrumbs";\nMemoryRouter.displayName = "MemoryRouter";\n\nconst siteMap = {\n  label: "Home",\n  path: "/home",\n  children: [{ label: "About", path: "/about" }]\n};\n\nconst history = {\n  location: { pathname: "/about" },\n  listen() {\n    return () => {};\n  }\n};\n\nstoriesOf("Navigation > NavBreadcrumbs", module).add(\n  "Default",\n  withInfo(`\n    Nav Breadcrumbs is a graphical control element used as a navigational help.\n    It allows a user to keep track of and maintain awareness of their locations.\n\n    &nbsp;\n\n    Nav Breadcrumbs need two properties: \\`siteMap\\` and \\`history\\`.\n    `)(() => (\n    <MemoryRouter>\n      <NavBreadcrumbs siteMap={siteMap} history={history} />\n    </MemoryRouter>\n  ))\n);\n',{"Navigation > NavBreadcrumbs@Default":{startLoc:{col:2,line:24},endLoc:{col:4,line:36}}})).add("Default",Object(r.withInfo)("\n    Nav Breadcrumbs is a graphical control element used as a navigational help.\n    It allows a user to keep track of and maintain awareness of their locations.\n\n    &nbsp;\n\n    Nav Breadcrumbs need two properties: `siteMap` and `history`.\n    ")(function(){return a.a.createElement(o.MemoryRouter,null,a.a.createElement(c.a,{siteMap:d,history:p}))}))}).call(this,n(15)(e))},1679:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(69),c=n.n(l),s=n(27),d=n.n(s),p=n(14).withStorySource;c.a.displayName="NavBar",Object(o.storiesOf)("Navigation > NavBar",e).addDecorator(p('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport NavBar from "@automatic-labs/ui-components/nav/nav-bar";\nimport NavItem from "@automatic-labs/ui-components/nav/nav-item";\n\nNavBar.displayName = "NavBar";\n\nstoriesOf("Navigation > NavBar", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo\'s custom alt attribure, image URL for the logo or image URL for the mobile logo.\n\n      &nbsp;\n\n      In this view, Nav Bar is displayed with default properties.\n    `)(() => (\n      <NavBar>\n        <NavItem>Home</NavItem>\n        <NavItem>Link</NavItem>\n        <NavItem href="http://google.com">External link</NavItem>\n      </NavBar>\n    ))\n  )\n  .add(\n    "Logo with custom alt attribute",\n    withInfo(`\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property \\`mastheadName\\`, which set up an alt attribute for the logo\'s image.\n    `)(() => (\n      <NavBar mastheadName={text("Alt attribute", "Custom name")}>\n        <NavItem>Link One</NavItem>\n        <NavItem>Link Two</NavItem>\n      </NavBar>\n    ))\n  )\n  .add(\n    "Logo with custom image",\n    withInfo(`\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property \\`mastheadLogo\\`, which set up the URL address to the logo\'s image.\n    `)(() => (\n      <NavBar\n        mastheadName={text("Alt attribute", "Custom name")}\n        mastheadLogo={text(\n          "Logo\'s image URL",\n          "http://via.placeholder.com/60x60"\n        )}\n      >\n        <NavItem>Hyperlink 1</NavItem>\n        <NavItem>Hyperlink 2</NavItem>\n      </NavBar>\n    ))\n  )\n  .add(\n    "Mobile logo with custom image",\n    withInfo(`\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property \\`mastheadMobileLogo\\`, which set up the URL address to the mobile logo\'s image.\n    `)(() => (\n      <NavBar\n        mastheadMobileLogo={text(\n          "Mobile logo\'s URL",\n          "http://via.placeholder.com/40x40"\n        )}\n      >\n        <NavItem>Home</NavItem>\n        <NavItem>Link</NavItem>\n        <NavItem href="http://google.com">External link</NavItem>\n      </NavBar>\n    ))\n  );\n',{"Navigation > NavBar@Mobile logo with custom image":{startLoc:{col:4,line:70},endLoc:{col:6,line:88}},"Navigation > NavBar@Logo with custom image":{startLoc:{col:4,line:49},endLoc:{col:6,line:67}},"Navigation > NavBar@Logo with custom alt attribute":{startLoc:{col:4,line:34},endLoc:{col:6,line:46}},"Navigation > NavBar@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:31}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In properties of the component, it is possible to set up\n      the logo's custom alt attribure, image URL for the logo or image URL for the mobile logo.\n\n      &nbsp;\n\n      In this view, Nav Bar is displayed with default properties.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,null,"Home"),a.a.createElement(d.a,null,"Link"),a.a.createElement(d.a,{href:"http://google.com"},"External link"))})).add("Logo with custom alt attribute",Object(i.withInfo)("\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property `mastheadName`, which set up an alt attribute for the logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadName:Object(r.text)("Alt attribute","Custom name")},a.a.createElement(d.a,null,"Link One"),a.a.createElement(d.a,null,"Link Two"))})).add("Logo with custom image",Object(i.withInfo)("\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property `mastheadLogo`, which set up the URL address to the logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadName:Object(r.text)("Alt attribute","Custom name"),mastheadLogo:Object(r.text)("Logo's image URL","http://via.placeholder.com/60x60")},a.a.createElement(d.a,null,"Hyperlink 1"),a.a.createElement(d.a,null,"Hyperlink 2"))})).add("Mobile logo with custom image",Object(i.withInfo)("\n      Nav Bar is important to the success of visitor’s experience to your website.\n\n      &nbsp;\n\n      In this view, the logo of Nav Bar is displayed with the property `mastheadMobileLogo`, which set up the URL address to the mobile logo's image.\n    ")(function(){return a.a.createElement(c.a,{mastheadMobileLogo:Object(r.text)("Mobile logo's URL","http://via.placeholder.com/40x40")},a.a.createElement(d.a,null,"Home"),a.a.createElement(d.a,null,"Link"),a.a.createElement(d.a,{href:"http://google.com"},"External link"))}))}).call(this,n(15)(e))},1680:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(342),s=n(14).withStorySource;c.Mapbox.displayName="Mapbox",Object(o.storiesOf)("Maps > Mapbox",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { Mapbox } from "@automatic-labs/ui-components/maps";\n\nMapbox.displayName = "Mapbox";\n\nstoriesOf("Maps > Mapbox", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      This component will emit number of events, such as: onInit, onMove, onDragEnd, onZoom and onZoomEnd.\n\n      Each callback will have mapbox map instance passed to it as the only argument.\n    `)(() => (\n      <Mapbox\n        style={{ height: "300px" }}\n        onInit={action("onInit called!")}\n        onDragEnd={action("onDragEnd called!")}\n        onZoom={action("onZoom called!")}\n        onZoomEnd={action("onZoomEnd called!")}\n      />\n    ))\n  );\n',{"Maps > Mapbox@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      This component will emit number of events, such as: onInit, onMove, onDragEnd, onZoom and onZoomEnd.\n\n      Each callback will have mapbox map instance passed to it as the only argument.\n    ")(function(){return a.a.createElement(c.Mapbox,{style:{height:"300px"},onInit:Object(i.action)("onInit called!"),onDragEnd:Object(i.action)("onDragEnd called!"),onZoom:Object(i.action)("onZoom called!"),onZoomEnd:Object(i.action)("onZoomEnd called!")})}))}).call(this,n(15)(e))},1681:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(87),s=n(14).withStorySource;c.MapPicker.displayName="MapPicker",Object(o.storiesOf)("Location > MapPicker",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { MapPicker } from "@automatic-labs/ui-components/location";\n\nMapPicker.displayName = "MapPicker";\n\nstoriesOf("Location > MapPicker", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      This simple presentational component serves as a geographical location renderer.\n    `)(() => (\n      <MapPicker\n        initialLocation={{\n          city: "San Francisco",\n          country: "United States",\n          state: "California 94105",\n          street: "101 Howard Street"\n        }}\n        geocodeInitialLocation\n        onPick={action("onPick")}\n        onChange={action("onChange")}\n        onClear={action("onClear")}\n      />\n    ))\n  );\n',{"Location > MapPicker@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:29}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      This simple presentational component serves as a geographical location renderer.\n    ")(function(){return a.a.createElement(c.MapPicker,{initialLocation:{city:"San Francisco",country:"United States",state:"California 94105",street:"101 Howard Street"},geocodeInitialLocation:!0,onPick:Object(i.action)("onPick"),onChange:Object(i.action)("onChange"),onClear:Object(i.action)("onClear")})}))}).call(this,n(15)(e))},1682:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(87),s=n(14).withStorySource;c.LocationRecord.displayName="LocationRecord",Object(o.storiesOf)("Location > LocationRecord",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { LocationRecord } from "@automatic-labs/ui-components/location";\n\nLocationRecord.displayName = "LocationRecord";\n\nstoriesOf("Location > LocationRecord", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      This simple presentational component serves as a geographical location renderer.\n    `)(() => (\n      <LocationRecord\n        location={{\n          street: "West Ave 157",\n          city: "San Francisco",\n          state: "CA",\n          country: "United States"\n        }}\n        onClear={action("onClear")}\n      />\n    ))\n  );\n',{"Location > LocationRecord@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      This simple presentational component serves as a geographical location renderer.\n    ")(function(){return a.a.createElement(c.LocationRecord,{location:{street:"West Ave 157",city:"San Francisco",state:"CA",country:"United States"},onClear:Object(i.action)("onClear")})}))}).call(this,n(15)(e))},1683:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(87),s=n(14).withStorySource;c.LocationPicker.displayName="LocationPicker",Object(o.storiesOf)("Location > LocationPicker",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { LocationPicker } from "@automatic-labs/ui-components/location";\n\nLocationPicker.displayName = "LocationPicker";\n\nstoriesOf("Location > LocationPicker", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Both options will activate Map Picker and Address Picker accordingly.\n\n      &nbsp;\n\n      Map Picker will have his onCancel event activated by passing the callback.\n      This will render clear button whenever there was any selection being made using the map.\n      Clicking the clear button will clear location for entire Location Picker and get user to the initial Location Picker view.\n\n      &nbsp;\n\n      The same applies to Address Picker.\n\n      &nbsp;\n\n      For Map Picker there is "USE" button activated by its onPick handler definition.\n      It will send picked location to higher order component and show the Location Picker initial view.\n    `)(() => (\n      <LocationPicker onPick={action("onPick")} onClear={action("onClear")} />\n    ))\n  );\n',{"Location > LocationPicker@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:33}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)('\n      Both options will activate Map Picker and Address Picker accordingly.\n\n      &nbsp;\n\n      Map Picker will have his onCancel event activated by passing the callback.\n      This will render clear button whenever there was any selection being made using the map.\n      Clicking the clear button will clear location for entire Location Picker and get user to the initial Location Picker view.\n\n      &nbsp;\n\n      The same applies to Address Picker.\n\n      &nbsp;\n\n      For Map Picker there is "USE" button activated by its onPick handler definition.\n      It will send picked location to higher order component and show the Location Picker initial view.\n    ')(function(){return a.a.createElement(c.LocationPicker,{onPick:Object(i.action)("onPick"),onClear:Object(i.action)("onClear")})}))}).call(this,n(15)(e))},1719:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(87),s=n(14).withStorySource;c.AddressPicker.displayName="AddressPicker",Object(o.storiesOf)("Location > AddressPicker",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { AddressPicker } from "@automatic-labs/ui-components/location";\n\nAddressPicker.displayName = "AddressPicker";\n\nstoriesOf("Location > AddressPicker", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Whenever user types in the input, its being geolocalised by Mapbox API.\n\n      &nbsp;\n\n      onPick event will be fired whenever user picks one position on the list or hits enter after typing the input.\n\n      &nbsp;\n\n      When there is some input, clear button shows up, it will clear the input and emit onClear event.\n    `)(() => <AddressPicker onPick={action("onPick")} />)\n  );\n',{"Location > AddressPicker@Default":{startLoc:{col:4,line:13},endLoc:{col:57,line:24}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Whenever user types in the input, its being geolocalised by Mapbox API.\n\n      &nbsp;\n\n      onPick event will be fired whenever user picks one position on the list or hits enter after typing the input.\n\n      &nbsp;\n\n      When there is some input, clear button shows up, it will clear the input and emit onClear event.\n    ")(function(){return a.a.createElement(c.AddressPicker,{onPick:Object(i.action)("onPick")})}))}).call(this,n(15)(e))},1742:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(117),c=n.n(l),s=n(36),d=n.n(s),p=n(637),m=n.n(p),u=n(32),h=n.n(u),b=n(20),f=n.n(b),y=n(29),v=n.n(y),w=n(69),g=n.n(w),C=n(27),S=n.n(C),x=n(197),I=n.n(x),E=n(88),N=n.n(E),z=n(54),O=n.n(z),k=n(14).withStorySource;c.a.displayName="Layout",Object(o.storiesOf)("Layout > Layout",e).addDecorator(k('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport Layout from "@automatic-labs/ui-components/layout/layout";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentCover from "@automatic-labs/ui-components/content/content-cover";\nimport ContentHeader from "@automatic-labs/ui-components/content/content-header";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\nimport ContentParagraph from "@automatic-labs/ui-components/content/content-paragraph";\nimport NavBar from "@automatic-labs/ui-components/nav/nav-bar";\nimport NavItem from "@automatic-labs/ui-components/nav/nav-item";\nimport NavFooter from "@automatic-labs/ui-components/nav/nav-footer";\nimport NavFooterItem from "@automatic-labs/ui-components/nav/nav-footer-item";\nimport NavSideMenu from "@automatic-labs/ui-components/nav/nav-side-menu";\n\nLayout.displayName = "Layout";\n\nstoriesOf("Layout > Layout", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n    `)(() => (\n      <Layout>\n        <ContentCard>\n          <ContentHeader\n            title="Content in a layout"\n            body="This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."\n          />\n          <ContentSection>\n            <ContentParagraph>The first element</ContentParagraph>\n            <ContentParagraph>The second element</ContentParagraph>\n            <ContentParagraph>The third element</ContentParagraph>\n          </ContentSection>\n        </ContentCard>\n      </Layout>\n    ))\n  )\n  .add(\n    "With title and caption",\n    withInfo(`\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the title and the caption at the top.\n    `)(() => (\n      <Layout\n        title={text("Title", "My Special App")}\n        caption={text("Caption", "16/25 connected users")}\n      >\n        <ContentCard>\n          <ContentHeader\n            title="Content in a layout"\n            body="This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."\n          />\n          <ContentSection>\n            <ContentParagraph>The first element</ContentParagraph>\n            <ContentParagraph>The second element</ContentParagraph>\n            <ContentParagraph>The third element</ContentParagraph>\n          </ContentSection>\n        </ContentCard>\n      </Layout>\n    ))\n  )\n  .add(\n    "With header and footer",\n    withInfo(`\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the header and the footer.\n    `)(() => (\n      <Layout\n        header={\n          <NavBar>\n            <NavItem>Home</NavItem>\n            <NavItem>Alert</NavItem>\n            <NavItem>Media</NavItem>\n          </NavBar>\n        }\n        footer={\n          <NavFooter>\n            <NavFooterItem>Services</NavFooterItem>\n            <NavFooterItem>About</NavFooterItem>\n            <NavFooterItem>Contact</NavFooterItem>\n          </NavFooter>\n        }\n      >\n        <ContentCover imageUrl="https://unsplash.it/1920/600?image=1050" />\n        <ContentCard>\n          <ContentHeader\n            title="Content in a layout"\n            body="This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."\n          />\n          <ContentSection>\n            <ContentParagraph>The first element</ContentParagraph>\n            <ContentParagraph>The second element</ContentParagraph>\n            <ContentParagraph>The third element</ContentParagraph>\n          </ContentSection>\n        </ContentCard>\n      </Layout>\n    ))\n  )\n  .add(\n    "Side menu",\n    withInfo(`\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the side menu.\n    `)(() => (\n      <Layout\n        title="My Special App"\n        caption="16/25 connected users"\n        sideMenu={\n          <NavSideMenu>\n            <NavSideMenu.Item label="Home" />\n            <NavSideMenu.Item label="About" />\n            <NavSideMenu.Item label="Contact" />\n          </NavSideMenu>\n        }\n      >\n        <ContentCard>\n          <ContentHeader\n            title="Content in a layout"\n            body="This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."\n          />\n          <ContentSection>\n            <ContentParagraph>The first element</ContentParagraph>\n            <ContentParagraph>The second element</ContentParagraph>\n            <ContentParagraph>The third element</ContentParagraph>\n          </ContentSection>\n        </ContentCard>\n      </Layout>\n    ))\n  );\n',{"Layout > Layout@Side menu":{startLoc:{col:4,line:124},endLoc:{col:6,line:160}},"Layout > Layout@With header and footer":{startLoc:{col:4,line:79},endLoc:{col:6,line:121}},"Layout > Layout@With title and caption":{startLoc:{col:4,line:47},endLoc:{col:6,line:76}},"Layout > Layout@Default":{startLoc:{col:4,line:22},endLoc:{col:6,line:44}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,null,a.a.createElement(h.a,{title:"Content in a layout",body:"This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."}),a.a.createElement(f.a,null,a.a.createElement(v.a,null,"The first element"),a.a.createElement(v.a,null,"The second element"),a.a.createElement(v.a,null,"The third element"))))})).add("With title and caption",Object(i.withInfo)("\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the title and the caption at the top.\n    ")(function(){return a.a.createElement(c.a,{title:Object(r.text)("Title","My Special App"),caption:Object(r.text)("Caption","16/25 connected users")},a.a.createElement(d.a,null,a.a.createElement(h.a,{title:"Content in a layout",body:"This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."}),a.a.createElement(f.a,null,a.a.createElement(v.a,null,"The first element"),a.a.createElement(v.a,null,"The second element"),a.a.createElement(v.a,null,"The third element"))))})).add("With header and footer",Object(i.withInfo)("\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the header and the footer.\n    ")(function(){return a.a.createElement(c.a,{header:a.a.createElement(g.a,null,a.a.createElement(S.a,null,"Home"),a.a.createElement(S.a,null,"Alert"),a.a.createElement(S.a,null,"Media")),footer:a.a.createElement(I.a,null,a.a.createElement(N.a,null,"Services"),a.a.createElement(N.a,null,"About"),a.a.createElement(N.a,null,"Contact"))},a.a.createElement(m.a,{imageUrl:"https://unsplash.it/1920/600?image=1050"}),a.a.createElement(d.a,null,a.a.createElement(h.a,{title:"Content in a layout",body:"This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."}),a.a.createElement(f.a,null,a.a.createElement(v.a,null,"The first element"),a.a.createElement(v.a,null,"The second element"),a.a.createElement(v.a,null,"The third element"))))})).add("Side menu",Object(i.withInfo)("\n      Layout is a fundamental base component used as a responsive container for other components.\n\n      &nbsp;\n\n      Sites should be contained within a Layout component, as it provides basic responsive\n      behavior and creates an appropriate context for other elements.\n\n      &nbsp;\n\n      In this view Layout contains the side menu.\n    ")(function(){return a.a.createElement(c.a,{title:"My Special App",caption:"16/25 connected users",sideMenu:a.a.createElement(O.a,null,a.a.createElement(O.a.Item,{label:"Home"}),a.a.createElement(O.a.Item,{label:"About"}),a.a.createElement(O.a.Item,{label:"Contact"}))},a.a.createElement(d.a,null,a.a.createElement(h.a,{title:"Content in a layout",body:"This content exists within a layout. It is guaranteed to respond to user agent, and media queries to style itself appropriately and as expected."}),a.a.createElement(f.a,null,a.a.createElement(v.a,null,"The first element"),a.a.createElement(v.a,null,"The second element"),a.a.createElement(v.a,null,"The third element"))))}))}).call(this,n(15)(e))},1758:function(e,t,n){"use strict";(function(e){var t=n(113),a=n.n(t),o=n(0),i=n.n(o),r=n(5),l=n(4),c=n(3),s=n(1),d=n(151),p=n(53),m=n(14).withStorySource;d.Flow.displayName="Flow",Object(r.storiesOf)("Flow > Flow example",e).addDecorator(m('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport {\n  Flow,\n  FlowStep,\n  FlowButton,\n  FlowButtonGroup\n} from "@automatic-labs/ui-components/flow";\nimport {\n  ContentHeader,\n  ContentSection\n} from "@automatic-labs/ui-components/content";\n\nFlow.displayName = "Flow";\n\nstoriesOf("Flow > Flow example", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      This is a brand new implementation of multi-step process handling.\n      \n      This module is the successor for deprecated Wizard module.\n\n      You can define steps leveraging *FlowStep* component implementing function-as-child pattern.\n\n      Additional examples can be found in *dev/components/flow* directory of *ui-components* repository.\n    `)(() => (\n      <div className="wizard-flow-demo">\n        <Flow\n          onFinish={action("on flow finish")}\n          onClose={action("on flow close")}\n          closeOnFinish={boolean("closeOnFinish", false)}\n        >\n          {/*\n          Raw step shows how you can leverage FlowStep component as a direct child of Flow component\n          It has also buttons configured as its own prop\n          */}\n          <FlowStep\n            buttons={[\n              {\n                onClick: ({ advance }) => advance(undefined, 5),\n                label: "Go to Step 6"\n              },\n              { onClick: ({ advance }) => advance(), label: "Continue" }\n            ]}\n          >\n            {({ values }) => (\n              <React.Fragment>\n                <div>\n                  <ContentHeader>Raw Flow Step</ContentHeader>\n                  <ContentSection>\n                    <p>This step will not update state, only advance</p>\n                    <pre>\n                      Values are: ({values.length}){JSON.stringify(\n                        values,\n                        null,\n                        2\n                      )}\n                    </pre>\n                  </ContentSection>\n                </div>\n              </React.Fragment>\n            )}\n          </FlowStep>\n\n          {/*\n          This raw step has its buttons embedded\n          */}\n          <FlowStep>\n            {({ values, advance }) => (\n              <React.Fragment>\n                <ContentHeader>Raw Flow Step w/ embedded buttons</ContentHeader>\n                <ContentSection>\n                  <p>This will not update state when skipped</p>\n                  <p>\n                    On <strong>Go!</strong>, it will update state with arbitrary\n                    value.\n                  </p>\n                  <pre>\n                    Values are: ({values.length}){JSON.stringify(\n                      values,\n                      null,\n                      2\n                    )}\n                  </pre>\n                </ContentSection>\n                <FlowButtonGroup>\n                  <FlowButton onClick={advance}>Skip</FlowButton>\n                  <FlowButton onClick={() => advance({ some: "value" })}>\n                    Go!\n                  </FlowButton>\n                </FlowButtonGroup>\n              </React.Fragment>\n            )}\n          </FlowStep>\n        </Flow>\n      </div>\n    ))\n  );\n',{"Flow > Flow example@Default":{startLoc:{col:4,line:22},endLoc:{col:6,line:102}}})).addDecorator(s.withKnobs).add("Default",Object(c.withInfo)("\n      This is a brand new implementation of multi-step process handling.\n      \n      This module is the successor for deprecated Wizard module.\n\n      You can define steps leveraging *FlowStep* component implementing function-as-child pattern.\n\n      Additional examples can be found in *dev/components/flow* directory of *ui-components* repository.\n    ")(function(){return i.a.createElement("div",{className:"wizard-flow-demo"},i.a.createElement(d.Flow,{onFinish:Object(l.action)("on flow finish"),onClose:Object(l.action)("on flow close"),closeOnFinish:Object(s.boolean)("closeOnFinish",!1)},i.a.createElement(d.FlowStep,{buttons:[{onClick:function(e){return(0,e.advance)(void 0,5)},label:"Go to Step 6"},{onClick:function(e){return(0,e.advance)()},label:"Continue"}]},function(e){var t=e.values;return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",null,i.a.createElement(p.ContentHeader,null,"Raw Flow Step"),i.a.createElement(p.ContentSection,null,i.a.createElement("p",null,"This step will not update state, only advance"),i.a.createElement("pre",null,"Values are: (",t.length,")",a()(t,null,2)))))}),i.a.createElement(d.FlowStep,null,function(e){var t=e.values,n=e.advance;return i.a.createElement(i.a.Fragment,null,i.a.createElement(p.ContentHeader,null,"Raw Flow Step w/ embedded buttons"),i.a.createElement(p.ContentSection,null,i.a.createElement("p",null,"This will not update state when skipped"),i.a.createElement("p",null,"On ",i.a.createElement("strong",null,"Go!"),", it will update state with arbitrary value."),i.a.createElement("pre",null,"Values are: (",t.length,")",a()(t,null,2))),i.a.createElement(d.FlowButtonGroup,null,i.a.createElement(d.FlowButton,{onClick:n},"Skip"),i.a.createElement(d.FlowButton,{onClick:function(){return n({some:"value"})}},"Go!")))})))}))}).call(this,n(15)(e))},1759:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputTextArea.displayName="InputTextArea",Object(o.storiesOf)("Input > InputTextArea",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs } from "@storybook/addon-knobs";\nimport { InputTextArea } from "@automatic-labs/ui-components/input";\n\nInputTextArea.displayName = "InputTextArea";\n\nstoriesOf("Input > InputTextArea", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      InputTextArea wraps corresponded native input type.\n    `)(() => (\n      <InputTextArea\n        onBlur={action("input text area onBlur")}\n        onChange={action("input text area onChange")}\n        onFocus={action("input text area onFocus")}\n        onValidated={action("input text area onValidated")}\n        placeholder="placeholder"\n      />\n    ))\n  );\n',{"Input > InputTextArea@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:24}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      InputTextArea wraps corresponded native input type.\n    ")(function(){return a.a.createElement(c.InputTextArea,{onBlur:Object(i.action)("input text area onBlur"),onChange:Object(i.action)("input text area onChange"),onFocus:Object(i.action)("input text area onFocus"),onValidated:Object(i.action)("input text area onValidated"),placeholder:"placeholder"})}))}).call(this,n(15)(e))},1760:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputText.displayName="InputText",Object(o.storiesOf)("Input > InputText",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select, boolean } from "@storybook/addon-knobs";\nimport { InputText } from "@automatic-labs/ui-components/input";\n\nInputText.displayName = "InputText";\n\nstoriesOf("Input > InputText", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      InputText wraps corresponded native input type.\n    `)(() => (\n      <InputText\n        defaultValue="default value"\n        onBlur={action("input text onBlur")}\n        onChange={action("input text onChange")}\n        onFocus={action("input text onFocus")}\n        onValidated={action("input text onValidated")}\n        onEnterKey={action("input text onEnterKey")}\n        placeholder="Placeholder"\n        type={select("type", ["text", "email", "date", "password"], "text")}\n        clearable={boolean("clearable", true)}\n        loading={boolean("loading", false)}\n        maxLength="20"\n      />\n    ))\n  );\n',{"Input > InputText@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:30}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      InputText wraps corresponded native input type.\n    ")(function(){return a.a.createElement(c.InputText,{defaultValue:"default value",onBlur:Object(i.action)("input text onBlur"),onChange:Object(i.action)("input text onChange"),onFocus:Object(i.action)("input text onFocus"),onValidated:Object(i.action)("input text onValidated"),onEnterKey:Object(i.action)("input text onEnterKey"),placeholder:"Placeholder",type:Object(l.select)("type",["text","email","date","password"],"text"),clearable:Object(l.boolean)("clearable",!0),loading:Object(l.boolean)("loading",!1),maxLength:"20"})}))}).call(this,n(15)(e))},1761:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputSlider.displayName="InputSlider",Object(o.storiesOf)("Input > InputSlider",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { InputSlider } from "@automatic-labs/ui-components/input";\n\nInputSlider.displayName = "InputSlider";\n\nstoriesOf("Input > InputSlider", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      InputSlider wraps corresponded native input type.\n    `)(() => (\n      <InputSlider\n        min={10}\n        max={50}\n        step={3}\n        defaultValue={22}\n        onBlur={action("Input slider onBlur")}\n        onChange={action("Input slider onChange")}\n        onFocus={action("Input slider onFocus")}\n        onEnterKey={action("Input slider onEnterKey")}\n      />\n    ))\n  );\n',{"Input > InputSlider@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:27}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      InputSlider wraps corresponded native input type.\n    ")(function(){return a.a.createElement(c.InputSlider,{min:10,max:50,step:3,defaultValue:22,onBlur:Object(i.action)("Input slider onBlur"),onChange:Object(i.action)("Input slider onChange"),onFocus:Object(i.action)("Input slider onFocus"),onEnterKey:Object(i.action)("Input slider onEnterKey")})}))}).call(this,n(15)(e))},1762:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputSelector.displayName="InputSelector",Object(o.storiesOf)("Input > InputSelector",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { InputSelector } from "@automatic-labs/ui-components/input";\n\nInputSelector.displayName = "InputSelector";\n\nstoriesOf("Input > InputSelector", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Single mode",\n    withInfo(`\n      InputSelector creates a selectable list which can act\n      in single and in multi mode.\n    `)(() => (\n      <InputSelector\n        defaultValue={2}\n        options={[\n          { value: 1, title: "One", caption: "default value" },\n          { value: 2, title: "Two", caption: "default value" },\n          { value: 3, title: "Three", caption: "some caption" }\n        ]}\n        onChange={action("Input selector onChange")}\n        onEnterKey={action("Input selector onEnterKey")}\n      />\n    ))\n  )\n  .add(\n    "Multiple mode",\n    withInfo(`\n      InputSelector creates a selectable list in multiple mode.\n    `)(() => (\n      <InputSelector\n        defaultValue={[1, 3]}\n        options={[\n          { value: 1, title: "One", caption: "default value" },\n          { value: 2, title: "Two", caption: "default value" },\n          { value: 3, title: "Three", caption: "some caption" }\n        ]}\n        onChange={action("Input selector onChange")}\n        onEnterKey={action("Input selector onEnterKey")}\n        multiple\n      />\n    ))\n  );\n',{"Input > InputSelector@Multiple mode":{startLoc:{col:4,line:31},endLoc:{col:6,line:46}},"Input > InputSelector@Single mode":{startLoc:{col:4,line:13},endLoc:{col:6,line:28}}})).addDecorator(l.withKnobs).add("Single mode",Object(r.withInfo)("\n      InputSelector creates a selectable list which can act\n      in single and in multi mode.\n    ")(function(){return a.a.createElement(c.InputSelector,{defaultValue:2,options:[{value:1,title:"One",caption:"default value"},{value:2,title:"Two",caption:"default value"},{value:3,title:"Three",caption:"some caption"}],onChange:Object(i.action)("Input selector onChange"),onEnterKey:Object(i.action)("Input selector onEnterKey")})})).add("Multiple mode",Object(r.withInfo)("\n      InputSelector creates a selectable list in multiple mode.\n    ")(function(){return a.a.createElement(c.InputSelector,{defaultValue:[1,3],options:[{value:1,title:"One",caption:"default value"},{value:2,title:"Two",caption:"default value"},{value:3,title:"Three",caption:"some caption"}],onChange:Object(i.action)("Input selector onChange"),onEnterKey:Object(i.action)("Input selector onEnterKey"),multiple:!0})}))}).call(this,n(15)(e))},1763:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputSelect.displayName="InputSelect",Object(o.storiesOf)("Input > InputSelect",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { InputSelect } from "@automatic-labs/ui-components/input";\n\nInputSelect.displayName = "InputSelect";\n\nstoriesOf("Input > InputSelect", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      InputSelect wraps corresponded native input type.\n    `)(() => (\n      <InputSelect\n        placeholder="Select item"\n        items={[\n          { value: 1, label: "first item" },\n          { value: 2, label: "second item" }\n        ]}\n        value="1"\n        onBlur={action("input select blurred")}\n        onChange={action("input select changed")}\n        onFocus={action("input select focused")}\n        onKeyDown={action("input select key down")}\n      />\n    ))\n  );\n',{"Input > InputSelect@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:29}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      InputSelect wraps corresponded native input type.\n    ")(function(){return a.a.createElement(c.InputSelect,{placeholder:"Select item",items:[{value:1,label:"first item"},{value:2,label:"second item"}],value:"1",onBlur:Object(i.action)("input select blurred"),onChange:Object(i.action)("input select changed"),onFocus:Object(i.action)("input select focused"),onKeyDown:Object(i.action)("input select key down")})}))}).call(this,n(15)(e))},1775:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(50),s=n(14).withStorySource;c.InputFile.displayName="InputFile",Object(o.storiesOf)("Input > InputFile",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { InputFile } from "@automatic-labs/ui-components/input";\n\nInputFile.displayName = "InputFile";\n\nstoriesOf("Input > InputFile", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      InputFile wraps corresponded native input type.\n    `)(() => (\n      <InputFile\n        onBlur={action("input onBlur")}\n        onChange={action("input onChange")}\n        onFocus={action("input onFocus")}\n        onEnterKey={action("input onEnterKey")}\n        accept={text("accept")}\n        validate={action("input validation")}\n        filter={action("input filtering")}\n      />\n    ))\n  );\n',{"Input > InputFile@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      InputFile wraps corresponded native input type.\n    ")(function(){return a.a.createElement(c.InputFile,{onBlur:Object(i.action)("input onBlur"),onChange:Object(i.action)("input onChange"),onFocus:Object(i.action)("input onFocus"),onEnterKey:Object(i.action)("input onEnterKey"),accept:Object(l.text)("accept"),validate:Object(i.action)("input validation"),filter:Object(i.action)("input filtering")})}))}).call(this,n(15)(e))},1776:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(291),c=n.n(l),s=n(14).withStorySource;c.a.displayName="ContentTitle",Object(o.storiesOf)("Content > ContentTitle",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport ContentTitle from "@automatic-labs/ui-components/content/content-title";\n\nContentTitle.displayName = "ContentTitle";\n\nstoriesOf("Content > ContentTitle", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Title is a component that should be an introductory text to some views.\n      It usually is used inside the Content Section component and precedes other contents.\n\n      &nbsp;\n\n      Content Title may be displayed with the boolean property \\`safeContent\\`.\n    `)(() => (\n      <ContentTitle safeContent={boolean("Safe content", false)}>\n        Sample text added to title\n      </ContentTitle>\n    ))\n  )\n  .add(\n    "Safe content",\n    withInfo(`\n      Content Title is a component that should be an introductory text to some views.\n      It usually is used inside the Content Section component and precedes other contents.\n\n      &nbsp;\n\n      In this view, Content Title is displayed with the property \\`safeContent\\`.\n    `)(() => (\n      <ContentTitle safeContent={boolean("Safe content", true)}>\n        Sample text added to title\n      </ContentTitle>\n    ))\n  );\n',{"Content > ContentTitle@Safe content":{startLoc:{col:4,line:27},endLoc:{col:6,line:39}},"Content > ContentTitle@Default":{startLoc:{col:4,line:12},endLoc:{col:6,line:24}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Content Title is a component that should be an introductory text to some views.\n      It usually is used inside the Content Section component and precedes other contents.\n\n      &nbsp;\n\n      Content Title may be displayed with the boolean property `safeContent`.\n    ")(function(){return a.a.createElement(c.a,{safeContent:Object(r.boolean)("Safe content",!1)},"Sample text added to title")})).add("Safe content",Object(i.withInfo)("\n      Content Title is a component that should be an introductory text to some views.\n      It usually is used inside the Content Section component and precedes other contents.\n\n      &nbsp;\n\n      In this view, Content Title is displayed with the property `safeContent`.\n    ")(function(){return a.a.createElement(c.a,{safeContent:Object(r.boolean)("Safe content",!0)},"Sample text added to title")}))}).call(this,n(15)(e))},1777:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(25),l=n.n(r),c=n(14).withStorySource;l.a.displayName="ContentTable",Object(o.storiesOf)("Content > ContentTable",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport ContentTable from "@automatic-labs/ui-components/content/content-table";\n\nContentTable.displayName = "ContentTable";\n\nstoriesOf("Content > ContentTable", module)\n  .add(\n    "Default",\n    withInfo(`\n      The Content Table component is used for display content in the table.\n      To display correct the content, Content Table uses the Content Table Row component inside.\n\n      &nbsp;\n\n      Content Table may be displayed with the property \\`header\\` to show headers for columns.\n\n      &nbsp;\n\n      In this view, Content Table does not use the property \\`header\\`.\n    `)(() => (\n      <ContentTable>\n        <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n        <ContentTable.Row columns={["Oil Filter", "Replace"]} />\n        <ContentTable.Row\n          columns={["Wheels & Tires", "Rotate & adjust tire pressure"]}\n        />\n      </ContentTable>\n    ))\n  )\n  .add(\n    "With header",\n    withInfo(`\n      The Content Table component is used for display content in the table.\n      To display correct the content, Content Table uses the Content Table Row component inside.\n\n      &nbsp;\n\n      In this view, Content Table uses the property \\`header\\`.\n    `)(() => (\n      <ContentTable\n        header={<ContentTable.Header columns={["Header One", "Header Two"]} />}\n      >\n        <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n        <ContentTable.Row columns={["Oil Filter", "Replace"]} />\n        <ContentTable.Row\n          columns={["Wheels & Tires", "Rotate & adjust tire pressure"]}\n        />\n      </ContentTable>\n    ))\n  );\n',{"Content > ContentTable@With header":{startLoc:{col:4,line:33},endLoc:{col:6,line:51}},"Content > ContentTable@Default":{startLoc:{col:4,line:10},endLoc:{col:6,line:30}}})).add("Default",Object(i.withInfo)("\n      The Content Table component is used for display content in the table.\n      To display correct the content, Content Table uses the Content Table Row component inside.\n\n      &nbsp;\n\n      Content Table may be displayed with the property `header` to show headers for columns.\n\n      &nbsp;\n\n      In this view, Content Table does not use the property `header`.\n    ")(function(){return a.a.createElement(l.a,null,a.a.createElement(l.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Oil Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Wheels & Tires","Rotate & adjust tire pressure"]}))})).add("With header",Object(i.withInfo)("\n      The Content Table component is used for display content in the table.\n      To display correct the content, Content Table uses the Content Table Row component inside.\n\n      &nbsp;\n\n      In this view, Content Table uses the property `header`.\n    ")(function(){return a.a.createElement(l.a,{header:a.a.createElement(l.a.Header,{columns:["Header One","Header Two"]})},a.a.createElement(l.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Oil Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Wheels & Tires","Rotate & adjust tire pressure"]}))}))}).call(this,n(15)(e))},1778:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(25),c=n.n(l),s=n(331),d=n.n(s),p=n(14).withStorySource;d.a.displayName="ContentTableRow";var m={body:"Body",bold:"Bold"};Object(o.storiesOf)("Content > ContentTableRow",e).addDecorator(p('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, select } from "@storybook/addon-knobs";\nimport ContentTable from "@automatic-labs/ui-components/content/content-table";\nimport ContentTableRow from "@automatic-labs/ui-components/content/content-table-row";\n\nContentTableRow.displayName = "ContentTableRow";\n\nconst typeBody = "body";\nconst typeBold = "bold";\nconst typeSelect = {\n  body: "Body",\n  bold: "Bold"\n};\n\nstoriesOf("Content > ContentTableRow", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Body",\n    withInfo(`\n      Content Table Row is used inside the Content Table component.\n\n      &nbsp;\n\n      The required property of Content Table Row is \\`columns\\` in which the columns are defined.\n\n      &nbsp;\n\n      Content Table Row has two different types: \\`body\\` and \\`bold\\`.\n      These properties concern the thickness of the font.\n\n      &nbsp;\n\n      In this view, Content Table Row is displayed with the property \\`type: body\\`, which is a default.\n    `)(() => (\n      <ContentTable>\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBody)}\n          columns={["Carbon Air Filter", "Replace"]}\n        />\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBody)}\n          columns={["Oil Filter", "Replace"]}\n        />\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBody)}\n          columns={["Wheels & Tires", "Rotate & adjust tire pressure"]}\n        />\n      </ContentTable>\n    ))\n  )\n  .add(\n    "Bold",\n    withInfo(`\n      Content Table Row is used inside the Content Table component.\n\n      &nbsp;\n\n      The required property of Content Table Row is \\`columns\\` in which the columns are defined.\n\n      &nbsp;\n\n      Content Table Row has two different types: \\`body\\` and \\`bold\\`.\n      These properties concern the thickness of the font.\n\n      &nbsp;\n\n      In this view, Content Table Row is displayed with the property \\`type: bold\\`, which does not default.\n    `)(() => (\n      <ContentTable>\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBold)}\n          columns={["Carbon Air Filter", "Replace"]}\n        />\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBold)}\n          columns={["Oil Filter", "Replace"]}\n        />\n        <ContentTable.Row\n          type={select("Type", typeSelect, typeBold)}\n          columns={["Wheels & Tires", "Rotate & adjust tire pressure"]}\n        />\n      </ContentTable>\n    ))\n  );\n',{"Content > ContentTableRow@Bold":{startLoc:{col:4,line:54},endLoc:{col:6,line:85}},"Content > ContentTableRow@Body":{startLoc:{col:4,line:20},endLoc:{col:6,line:51}}})).addDecorator(r.withKnobs).add("Body",Object(i.withInfo)("\n      Content Table Row is used inside the Content Table component.\n\n      &nbsp;\n\n      The required property of Content Table Row is `columns` in which the columns are defined.\n\n      &nbsp;\n\n      Content Table Row has two different types: `body` and `bold`.\n      These properties concern the thickness of the font.\n\n      &nbsp;\n\n      In this view, Content Table Row is displayed with the property `type: body`, which is a default.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"body"),columns:["Carbon Air Filter","Replace"]}),a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"body"),columns:["Oil Filter","Replace"]}),a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"body"),columns:["Wheels & Tires","Rotate & adjust tire pressure"]}))})).add("Bold",Object(i.withInfo)("\n      Content Table Row is used inside the Content Table component.\n\n      &nbsp;\n\n      The required property of Content Table Row is `columns` in which the columns are defined.\n\n      &nbsp;\n\n      Content Table Row has two different types: `body` and `bold`.\n      These properties concern the thickness of the font.\n\n      &nbsp;\n\n      In this view, Content Table Row is displayed with the property `type: bold`, which does not default.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"bold"),columns:["Carbon Air Filter","Replace"]}),a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"bold"),columns:["Oil Filter","Replace"]}),a.a.createElement(c.a.Row,{type:Object(r.select)("Type",m,"bold"),columns:["Wheels & Tires","Rotate & adjust tire pressure"]}))}))}).call(this,n(15)(e))},1779:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(25),l=n.n(r),c=n(330),s=n.n(c),d=n(14).withStorySource;s.a.displayName="ContentTableHeader",Object(o.storiesOf)("Content > ContentTableHeader",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport ContentTable from "@automatic-labs/ui-components/content/content-table";\nimport ContentTableHeader from "@automatic-labs/ui-components/content/content-table-header";\n\nContentTableHeader.displayName = "ContentTableHeader";\n\nstoriesOf("Content > ContentTableHeader", module).add(\n  "Default",\n  withInfo(`\n      The component is used as the value of the property \\`header\\` of the Content Table component.\n\n      &nbsp;\n\n      Content Table Header is used for display header text above the columns the Content Table component inside.\n\n      &nbsp;\n\n      The required property of Content Table Header is \\`columns\\` in which the columns are defined.\n    `)(() => (\n    <ContentTable\n      header={<ContentTable.Header columns={["Header One", "Header Two"]} />}\n    >\n      <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n      <ContentTable.Row columns={["Oil Filter", "Replace"]} />\n      <ContentTable.Row\n        columns={["Wheels & Tires", "Rotate & adjust tire pressure"]}\n      />\n    </ContentTable>\n  ))\n);\n',{"Content > ContentTableHeader@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:31}}})).add("Default",Object(i.withInfo)("\n      The component is used as the value of the property `header` of the Content Table component.\n\n      &nbsp;\n\n      Content Table Header is used for display header text above the columns the Content Table component inside.\n\n      &nbsp;\n\n      The required property of Content Table Header is `columns` in which the columns are defined.\n    ")(function(){return a.a.createElement(l.a,{header:a.a.createElement(l.a.Header,{columns:["Header One","Header Two"]})},a.a.createElement(l.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Oil Filter","Replace"]}),a.a.createElement(l.a.Row,{columns:["Wheels & Tires","Rotate & adjust tire pressure"]}))}))}).call(this,n(15)(e))},1780:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(36),c=n.n(l),s=n(89),d=n.n(s),p=n(20),m=n.n(p),u=n(25),h=n.n(u),b=n(14).withStorySource;m.a.displayName="ContentSection",Object(o.storiesOf)("Content > ContentSection",e).addDecorator(b('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentData from "@automatic-labs/ui-components/content/content-data";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\nimport ContentTable from "@automatic-labs/ui-components/content/content-table";\n\nContentSection.displayName = "ContentSection";\n\nstoriesOf("Content > ContentSection", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      Content Section has boolean property \\`isSeparated\\` used to display the component with separate lines.\n\n      &nbsp;\n\n      The component may be displayed with an expanded content defined by the property \\`expandedContent\\`.\n\n      &nbsp;\n\n      In this view, Content Section uses property \\`isSeparated: true\\`, which is a default.\n    `)(() => (\n      <ContentCard>\n        <ContentSection isSeparated={boolean("Separated", true)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n        <ContentSection isSeparated={boolean("Separated", true)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n        <ContentSection isSeparated={boolean("Separated", true)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "No separated",\n    withInfo(`\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      In this view, Content Section uses property \\`isSeparated: false\\`, which is not default.\n    `)(() => (\n      <ContentCard>\n        <ContentSection isSeparated={boolean("Separated", false)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n        <ContentSection isSeparated={boolean("Separated", false)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n        <ContentSection isSeparated={boolean("Separated", false)}>\n          <p>Sample HTML paragraph</p>\n          <p>Sample HTML paragraph</p>\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "Expanded content",\n    withInfo(`\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      In this view, Content Section uses property \\`expandedContent\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentSection\n          expandedContent={\n            <ContentTable>\n              <ContentTable.Row columns={["Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Engine Oil", "Change"]} />\n            </ContentTable>\n          }\n        >\n          <ContentData label="Hours" value="Open - Closes at 8:00 PM" />\n        </ContentSection>\n        <ContentSection\n          expandedContent={\n            <ContentTable>\n              <ContentTable.Row columns={["Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Engine Oil", "Change"]} />\n            </ContentTable>\n          }\n        >\n          <ContentData label="Hours" value="Open - Closes at 8:00 PM" />\n        </ContentSection>\n        <ContentSection\n          expandedContent={\n            <ContentTable>\n              <ContentTable.Row columns={["Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Carbon Air Filter", "Replace"]} />\n              <ContentTable.Row columns={["Engine Oil", "Change"]} />\n            </ContentTable>\n          }\n        >\n          <ContentData label="Hours" value="Open - Closes at 8:00 PM" />\n        </ContentSection>\n      </ContentCard>\n    ))\n  );\n',{"Content > ContentSection@Expanded content":{startLoc:{col:4,line:75},endLoc:{col:6,line:119}},"Content > ContentSection@No separated":{startLoc:{col:4,line:49},endLoc:{col:6,line:72}},"Content > ContentSection@Default":{startLoc:{col:4,line:15},endLoc:{col:6,line:46}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      Content Section has boolean property `isSeparated` used to display the component with separate lines.\n\n      &nbsp;\n\n      The component may be displayed with an expanded content defined by the property `expandedContent`.\n\n      &nbsp;\n\n      In this view, Content Section uses property `isSeparated: true`, which is a default.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!0)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")),a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!0)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")),a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!0)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")))})).add("No separated",Object(i.withInfo)("\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      In this view, Content Section uses property `isSeparated: false`, which is not default.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!1)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")),a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!1)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")),a.a.createElement(m.a,{isSeparated:Object(r.boolean)("Separated",!1)},a.a.createElement("p",null,"Sample HTML paragraph"),a.a.createElement("p",null,"Sample HTML paragraph")))})).add("Expanded content",Object(i.withInfo)("\n      Content Section is a separate wrapper for other components.\n      The best way is to place Content Section inside the Content Card component.\n\n      &nbsp;\n\n      In this view, Content Section uses property `expandedContent`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(m.a,{expandedContent:a.a.createElement(h.a,null,a.a.createElement(h.a.Row,{columns:["Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Engine Oil","Change"]}))},a.a.createElement(d.a,{label:"Hours",value:"Open - Closes at 8:00 PM"})),a.a.createElement(m.a,{expandedContent:a.a.createElement(h.a,null,a.a.createElement(h.a.Row,{columns:["Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Engine Oil","Change"]}))},a.a.createElement(d.a,{label:"Hours",value:"Open - Closes at 8:00 PM"})),a.a.createElement(m.a,{expandedContent:a.a.createElement(h.a,null,a.a.createElement(h.a.Row,{columns:["Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Carbon Air Filter","Replace"]}),a.a.createElement(h.a.Row,{columns:["Engine Oil","Change"]}))},a.a.createElement(d.a,{label:"Hours",value:"Open - Closes at 8:00 PM"})))}))}).call(this,n(15)(e))},1781:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(345),s=n.n(c),d=n(14).withStorySource;s.a.displayName="ContentSearchBar",Object(o.storiesOf)("Content > ContentSearchBar",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport ContentSearchBar from "@automatic-labs/ui-components/content/content-search-bar";\n\nContentSearchBar.displayName = "ContentSearchBar";\n\nstoriesOf("Content > ContentSearchBar", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n    Content Search Bar is a component that allows searching for information.\n\n    &nbsp;\n\n    The required property of the component is \\`suggestion\\`, which is a list of hints.\n    `)(() => (\n      <ContentSearchBar\n        placeholder={text("Placeholder", "Search for cars")}\n        onSubmit={action("Submitted")}\n        suggestions={["Car 1", "Car 2", "Car 3"]}\n      />\n    ))\n  );\n',{"Content > ContentSearchBar@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n    Content Search Bar is a component that allows searching for information.\n\n    &nbsp;\n\n    The required property of the component is `suggestion`, which is a list of hints.\n    ")(function(){return a.a.createElement(s.a,{placeholder:Object(l.text)("Placeholder","Search for cars"),onSubmit:Object(i.action)("Submitted"),suggestions:["Car 1","Car 2","Car 3"]})}))}).call(this,n(15)(e))},1782:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(57),s=n.n(c),d=n(71),p=n.n(d),m=n(14).withStorySource;s.a.displayName="ContentRecord",Object(o.storiesOf)("Content > ContentRecord",e).addDecorator(m('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport ContentRecord from "@automatic-labs/ui-components/content/content-record";\nimport ContentRecordList from "@automatic-labs/ui-components/content/content-record-list";\n\nContentRecord.displayName = "ContentRecord";\n\nstoriesOf("Content > ContentRecord", module)\n  .addDecorator(withKnobs)\n  .add(\n    "With title",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      Content Record may be displayed with different additional elements specified in properties.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`title\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord title={text("Title", "Simple Record")} />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With caption",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`caption\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record title")}\n          caption={text("Caption", "Caption text")}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With icon",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`iconUrl\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record with icon")}\n          iconUrl={text("Icon URL", "http://via.placeholder.com/40x40")}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With sub caption",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with properties \\`caption\\` and \\`subCaption\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record with sub caption")}\n          caption={text("Caption", "Caption text")}\n          subCaption={text("Sub caption", "Sub caption text")}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With header",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`header\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record with header")}\n          header={text("Header", "Header text")}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With special text",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`special\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record with special text")}\n          special={text("Special", "Special text")}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With action",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`action\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record title")}\n          action={{ label: "action", onClick: action("Record clicked") }}\n        />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "With external link",\n    withInfo(`\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property \\`href\\`.\n    `)(() => (\n      <ContentRecordList>\n        <ContentRecord\n          title={text("Title", "Record title")}\n          href={text("Href", "http://google.com")}\n        />\n      </ContentRecordList>\n    ))\n  );\n',{"Content > ContentRecord@With external link":{startLoc:{col:4,line:142},endLoc:{col:6,line:157}},"Content > ContentRecord@With action":{startLoc:{col:4,line:124},endLoc:{col:6,line:139}},"Content > ContentRecord@With special text":{startLoc:{col:4,line:106},endLoc:{col:6,line:121}},"Content > ContentRecord@With header":{startLoc:{col:4,line:88},endLoc:{col:6,line:103}},"Content > ContentRecord@With sub caption":{startLoc:{col:4,line:69},endLoc:{col:6,line:85}},"Content > ContentRecord@With icon":{startLoc:{col:4,line:51},endLoc:{col:6,line:66}},"Content > ContentRecord@With caption":{startLoc:{col:4,line:33},endLoc:{col:6,line:48}},"Content > ContentRecord@With title":{startLoc:{col:4,line:14},endLoc:{col:6,line:30}}})).addDecorator(l.withKnobs).add("With title",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      Content Record may be displayed with different additional elements specified in properties.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `title`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Simple Record")}))})).add("With caption",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `caption`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record title"),caption:Object(l.text)("Caption","Caption text")}))})).add("With icon",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `iconUrl`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record with icon"),iconUrl:Object(l.text)("Icon URL","http://via.placeholder.com/40x40")}))})).add("With sub caption",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with properties `caption` and `subCaption`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record with sub caption"),caption:Object(l.text)("Caption","Caption text"),subCaption:Object(l.text)("Sub caption","Sub caption text")}))})).add("With header",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `header`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record with header"),header:Object(l.text)("Header","Header text")}))})).add("With special text",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `special`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record with special text"),special:Object(l.text)("Special","Special text")}))})).add("With action",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `action`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record title"),action:{label:"action",onClick:Object(i.action)("Record clicked")}}))})).add("With external link",Object(r.withInfo)("\n      Content Record is a component to display information about something specific and\n      usually appears inside the Content Record List component as one of many records of the list.\n\n      &nbsp;\n\n      In this view, Content Record is displayed with property `href`.\n    ")(function(){return a.a.createElement(p.a,null,a.a.createElement(s.a,{title:Object(l.text)("Title","Record title"),href:Object(l.text)("Href","http://google.com")}))}))}).call(this,n(15)(e))},1783:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(57),c=n.n(l),s=n(71),d=n.n(s),p=n(14).withStorySource;d.a.displayName="ContentRecordList";var m={separated:"Separated",shaded:"Shaded"};Object(o.storiesOf)("Content > ContentRecordList",e).addDecorator(p('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean, select } from "@storybook/addon-knobs";\nimport ContentRecord from "@automatic-labs/ui-components/content/content-record";\nimport ContentRecordList from "@automatic-labs/ui-components/content/content-record-list";\n\nContentRecordList.displayName = "ContentRecordList";\n\nconst isSeparated = "separated";\nconst isShaded = "shaded";\nconst separationSelect = {\n  separated: "Separated",\n  shaded: "Shaded"\n};\n\nstoriesOf("Content > ContentRecordList", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Separated",\n    withInfo(`\n      The Content Record List component is intended to hold individual record packs.\n      A good solution is to place Content Record components inside the Content Record List.\n\n      &nbsp;\n\n      Content Record List has two different types: \\`separated\\` and \\`shaded\\`.\n\n      &nbsp;\n\n      If is selected property \\`type: \'separated\'\\`, there are thin lines between single records.\n      If is selected property \\`type: \'shaded\'\\`, the odd rows will be in a different color than the even rows.\n\n      &nbsp;\n\n      If is selected boolean property \\`isSeparated: true\\`, there is a thin line above all list.\n\n      &nbsp;\n\n      In this view, Content Record List is displayed in the type \\`separated\\` and the property \\`isSeparated\\` is set to \\`true\\`.\n    `)(() => (\n      <ContentRecordList\n        type={select("Type", separationSelect, isSeparated)}\n        isSeparated={boolean("Separated", true)}\n      >\n        <ContentRecord title="Record One" />\n        <ContentRecord title="Record Two" />\n        <ContentRecord title="Record Three" />\n      </ContentRecordList>\n    ))\n  )\n  .add(\n    "Shaded",\n    withInfo(`\n      The Content Record List component is intended to hold individual record packs.\n      A good solution is to place Content Record components inside the Content Record List.\n\n      &nbsp;\n\n      Content Record List has two different types: \\`separated\\` and \\`shaded\\`.\n\n      &nbsp;\n\n      If is selected property \\`type: \'separated\'\\`, there are thin lines between single records.\n      If is selected property \\`type: \'shaded\'\\`, the odd rows will be in a different color than the even rows.\n\n      &nbsp;\n\n      If is selected boolean property \\`isSeparated: true\\`, there is a thin line above all list.\n\n      &nbsp;\n\n      In this view, Content Record List is displayed in the type \\`shaded\\` and the property \\`isSeparated\\` is set to \\`false\\`.\n    `)(() => (\n      <ContentRecordList\n        type={select("Type", separationSelect, isShaded)}\n        isSeparated={boolean("Separated", false)}\n      >\n        <ContentRecord title="Record One" />\n        <ContentRecord title="Record Two" />\n        <ContentRecord title="Record Three" />\n      </ContentRecordList>\n    ))\n  );\n',{"Content > ContentRecordList@Shaded":{startLoc:{col:4,line:53},endLoc:{col:6,line:83}},"Content > ContentRecordList@Separated":{startLoc:{col:4,line:20},endLoc:{col:6,line:50}}})).addDecorator(r.withKnobs).add("Separated",Object(i.withInfo)("\n      The Content Record List component is intended to hold individual record packs.\n      A good solution is to place Content Record components inside the Content Record List.\n\n      &nbsp;\n\n      Content Record List has two different types: `separated` and `shaded`.\n\n      &nbsp;\n\n      If is selected property `type: 'separated'`, there are thin lines between single records.\n      If is selected property `type: 'shaded'`, the odd rows will be in a different color than the even rows.\n\n      &nbsp;\n\n      If is selected boolean property `isSeparated: true`, there is a thin line above all list.\n\n      &nbsp;\n\n      In this view, Content Record List is displayed in the type `separated` and the property `isSeparated` is set to `true`.\n    ")(function(){return a.a.createElement(d.a,{type:Object(r.select)("Type",m,"separated"),isSeparated:Object(r.boolean)("Separated",!0)},a.a.createElement(c.a,{title:"Record One"}),a.a.createElement(c.a,{title:"Record Two"}),a.a.createElement(c.a,{title:"Record Three"}))})).add("Shaded",Object(i.withInfo)("\n      The Content Record List component is intended to hold individual record packs.\n      A good solution is to place Content Record components inside the Content Record List.\n\n      &nbsp;\n\n      Content Record List has two different types: `separated` and `shaded`.\n\n      &nbsp;\n\n      If is selected property `type: 'separated'`, there are thin lines between single records.\n      If is selected property `type: 'shaded'`, the odd rows will be in a different color than the even rows.\n\n      &nbsp;\n\n      If is selected boolean property `isSeparated: true`, there is a thin line above all list.\n\n      &nbsp;\n\n      In this view, Content Record List is displayed in the type `shaded` and the property `isSeparated` is set to `false`.\n    ")(function(){return a.a.createElement(d.a,{type:Object(r.select)("Type",m,"shaded"),isSeparated:Object(r.boolean)("Separated",!1)},a.a.createElement(c.a,{title:"Record One"}),a.a.createElement(c.a,{title:"Record Two"}),a.a.createElement(c.a,{title:"Record Three"}))}))}).call(this,n(15)(e))},1784:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(36),c=n.n(l),s=n(29),d=n.n(s),p=n(20),m=n.n(p),u=n(14).withStorySource;d.a.displayName="ContentParagraph",Object(o.storiesOf)("Content > ContentParagraph",e).addDecorator(u('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentParagraph from "@automatic-labs/ui-components/content/content-paragraph";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\n\nContentParagraph.displayName = "ContentParagraph";\n\nstoriesOf("Content > ContentParagraph", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Paragraph is a simple text to inform users about something.\n\n      &nbsp;\n\n      Content Paragraph may be displayed with an additional property \\`safeContent: true\\`, which is not default.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentParagraph safeContent={boolean("Safe Content", false)}>\n            Paragraph one\n          </ContentParagraph>\n          <ContentParagraph safeContent={boolean("Safe Content", false)}>\n            Paragraph two\n          </ContentParagraph>\n          <ContentParagraph safeContent={boolean("Safe Content", false)}>\n            Paragraph three\n          </ContentParagraph>\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "Safe content",\n    withInfo(`\n      Content Paragraph is a simple text to inform users about something.\n\n      &nbsp;\n\n      In this view, Content Paragraph is displayed with an additional property \\`safeContent: true\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentParagraph safeContent={boolean("Safe Content", true)}>\n            Paragraph one\n          </ContentParagraph>\n          <ContentParagraph safeContent={boolean("Safe Content", true)}>\n            Paragraph two\n          </ContentParagraph>\n          <ContentParagraph safeContent={boolean("Safe Content", true)}>\n            Paragraph three\n          </ContentParagraph>\n        </ContentSection>\n      </ContentCard>\n    ))\n  );\n',{"Content > ContentParagraph@Safe content":{startLoc:{col:4,line:38},endLoc:{col:6,line:59}},"Content > ContentParagraph@Default":{startLoc:{col:4,line:14},endLoc:{col:6,line:35}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Content Paragraph is a simple text to inform users about something.\n\n      &nbsp;\n\n      Content Paragraph may be displayed with an additional property `safeContent: true`, which is not default.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(m.a,null,a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!1)},"Paragraph one"),a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!1)},"Paragraph two"),a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!1)},"Paragraph three")))})).add("Safe content",Object(i.withInfo)("\n      Content Paragraph is a simple text to inform users about something.\n\n      &nbsp;\n\n      In this view, Content Paragraph is displayed with an additional property `safeContent: true`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(m.a,null,a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!0)},"Paragraph one"),a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!0)},"Paragraph two"),a.a.createElement(d.a,{safeContent:Object(r.boolean)("Safe Content",!0)},"Paragraph three")))}))}).call(this,n(15)(e))},1785:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(36),c=n.n(l),s=n(32),d=n.n(s),p=n(14).withStorySource;d.a.displayName="ContentHeader",Object(o.storiesOf)("Content > ContentHeader",e).addDecorator(p('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentHeader from "@automatic-labs/ui-components/content/content-header";\n\nContentHeader.displayName = "ContentHeader";\n\nstoriesOf("Content > ContentHeader", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      Content Header may be displayed with additional elements if they are defined such parameters as\n      \\`body\\`, \\`iconUrl\\` or \\`preHeader\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentHeader title={text("Title", "Sample text added to title")} />\n      </ContentCard>\n    ))\n  )\n  .add(\n    "With body text",\n    withInfo(`\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property \\`body\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentHeader\n          title={text("Title", "Sample text added to title")}\n          body={text("Body", "Sample text added to body")}\n        />\n      </ContentCard>\n    ))\n  )\n  .add(\n    "With icon",\n    withInfo(`\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property \\`iconUrl\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentHeader\n          title={text("Title", "Sample text added to title")}\n          body={text("Body", "Sample text added to body")}\n          iconUrl={text("Icon URL", "http://via.placeholder.com/40x40")}\n        />\n      </ContentCard>\n    ))\n  )\n  .add(\n    "With preHeader",\n    withInfo(`\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property \\`preHeader\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentHeader\n          title={text("Title", "Sample text added to title")}\n          body={text("Body", "Sample text added to body")}\n          iconUrl={text("Icon URL", "http://via.placeholder.com/40x40")}\n          preHeader={text("PreHeader", "Sample text added to preHeader")}\n        />\n      </ContentCard>\n    ))\n  );\n',{"Content > ContentHeader@With preHeader":{startLoc:{col:4,line:66},endLoc:{col:6,line:83}},"Content > ContentHeader@With icon":{startLoc:{col:4,line:47},endLoc:{col:6,line:63}},"Content > ContentHeader@With body text":{startLoc:{col:4,line:29},endLoc:{col:6,line:44}},"Content > ContentHeader@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:26}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      Content Header may be displayed with additional elements if they are defined such parameters as\n      `body`, `iconUrl` or `preHeader`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,{title:Object(r.text)("Title","Sample text added to title")}))})).add("With body text",Object(i.withInfo)("\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property `body`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,{title:Object(r.text)("Title","Sample text added to title"),body:Object(r.text)("Body","Sample text added to body")}))})).add("With icon",Object(i.withInfo)("\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property `iconUrl`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,{title:Object(r.text)("Title","Sample text added to title"),body:Object(r.text)("Body","Sample text added to body"),iconUrl:Object(r.text)("Icon URL","http://via.placeholder.com/40x40")}))})).add("With preHeader",Object(i.withInfo)("\n      Content Header is a component that should contain an introductory text to some a separate part of the view.\n      It usually is used within the Content Card component and precedes the Content Section component.\n\n      &nbsp;\n\n      In this view, Content Header is displayed with an additional property `preHeader`.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,{title:Object(r.text)("Title","Sample text added to title"),body:Object(r.text)("Body","Sample text added to body"),iconUrl:Object(r.text)("Icon URL","http://via.placeholder.com/40x40"),preHeader:Object(r.text)("PreHeader","Sample text added to preHeader")}))}))}).call(this,n(15)(e))},1786:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=(n(4),n(3)),r=n(1),l=n(53),c=n(14).withStorySource;l.ContentErrorMessage.displayName="ContentErrorMessage",Object(o.storiesOf)("Content > ContentErrorMessage",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { ContentErrorMessage } from "@automatic-labs/ui-components/content";\n\nContentErrorMessage.displayName = "ContentErrorMessage";\n\nstoriesOf("Content > ContentErrorMessage", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      ContentErrorMessage provides unified format for error messages.\n    `)(() => (\n      <ContentErrorMessage>This is my error message</ContentErrorMessage>\n    ))\n  );\n',{"Content > ContentErrorMessage@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:18}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      ContentErrorMessage provides unified format for error messages.\n    ")(function(){return a.a.createElement(l.ContentErrorMessage,null,"This is my error message")}))}).call(this,n(15)(e))},1787:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(36),s=n.n(c),d=n(89),p=n.n(d),m=n(20),u=n.n(m),h=n(14).withStorySource;p.a.displayName="ContentData",Object(o.storiesOf)("Content > ContentData",e).addDecorator(h('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, boolean } from "@storybook/addon-knobs";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentData from "@automatic-labs/ui-components/content/content-data";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\n\nContentData.displayName = "ContentData";\n\nstoriesOf("Content > ContentData", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are \\`label\\` and \\`value\\`.\n\n      &nbsp;\n\n      If Content Data components are next to each other, it is to possible to separate them\n      with the separator by setting the boolean value in property \\`isSeparated: true\\`.\n\n      &nbsp;\n\n      You can assign an action to Content Data component by specifying property \\`onClick\\`\n      and make the component clickable.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentData\n            label={text("Label", "Email Address")}\n            value={text("Value", "joe@doe.com")}\n          />\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "Separated",\n    withInfo(`\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are \\`label\\` and \\`value\\`.\n\n      &nbsp;\n\n      In this view, Content Data components are separated using property \\`isSeparated: true\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentData\n            label="Label text"\n            value="Value text"\n            isSeparated={boolean("Separated", true)}\n          />\n          <ContentData\n            label="Label text"\n            value="Value text"\n            isSeparated={boolean("Separated", true)}\n          />\n          <ContentData\n            label="Label text"\n            value="Value text"\n            isSeparated={boolean("Separated", true)}\n          />\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "Clicable",\n    withInfo(`\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are \\`label\\` and \\`value\\`.\n\n      &nbsp;\n\n      In this view, Content Data component is clickable by setting the property \\`onClick\\`.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentData\n            label="Clickable Email Address"\n            value="joe@doe.com"\n            isSeparated={true}\n            onClick={action("Data clicked")}\n          />\n          <ContentData\n            label="Clickable number"\n            value="000-000-000-000"\n            isSeparated={true}\n            onClick={action("Data clicked")}\n          />\n        </ContentSection>\n      </ContentCard>\n    ))\n  );\n',{"Content > ContentData@Clicable":{startLoc:{col:4,line:78},endLoc:{col:6,line:106}},"Content > ContentData@Separated":{startLoc:{col:4,line:44},endLoc:{col:6,line:75}},"Content > ContentData@Default":{startLoc:{col:4,line:15},endLoc:{col:6,line:41}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are `label` and `value`.\n\n      &nbsp;\n\n      If Content Data components are next to each other, it is to possible to separate them\n      with the separator by setting the boolean value in property `isSeparated: true`.\n\n      &nbsp;\n\n      You can assign an action to Content Data component by specifying property `onClick`\n      and make the component clickable.\n    ")(function(){return a.a.createElement(s.a,null,a.a.createElement(u.a,null,a.a.createElement(p.a,{label:Object(l.text)("Label","Email Address"),value:Object(l.text)("Value","joe@doe.com")})))})).add("Separated",Object(r.withInfo)("\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are `label` and `value`.\n\n      &nbsp;\n\n      In this view, Content Data components are separated using property `isSeparated: true`.\n    ")(function(){return a.a.createElement(s.a,null,a.a.createElement(u.a,null,a.a.createElement(p.a,{label:"Label text",value:"Value text",isSeparated:Object(l.boolean)("Separated",!0)}),a.a.createElement(p.a,{label:"Label text",value:"Value text",isSeparated:Object(l.boolean)("Separated",!0)}),a.a.createElement(p.a,{label:"Label text",value:"Value text",isSeparated:Object(l.boolean)("Separated",!0)})))})).add("Clicable",Object(r.withInfo)("\n      Content Data is a component to display information about something specific.\n\n      &nbsp;\n\n      The required properties of the Content Data component are `label` and `value`.\n\n      &nbsp;\n\n      In this view, Content Data component is clickable by setting the property `onClick`.\n    ")(function(){return a.a.createElement(s.a,null,a.a.createElement(u.a,null,a.a.createElement(p.a,{label:"Clickable Email Address",value:"joe@doe.com",isSeparated:!0,onClick:Object(i.action)("Data clicked")}),a.a.createElement(p.a,{label:"Clickable number",value:"000-000-000-000",isSeparated:!0,onClick:Object(i.action)("Data clicked")})))}))}).call(this,n(15)(e))},1788:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(1),l=n(36),c=n.n(l),s=n(20),d=n.n(s),p=n(29),m=n.n(p),u=n(14).withStorySource;c.a.displayName="ContentCard",Object(o.storiesOf)("Content > ContentCard",e).addDecorator(u('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text } from "@storybook/addon-knobs";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\nimport ContentParagraph from "@automatic-labs/ui-components/content/content-paragraph";\n\nContentCard.displayName = "ContentCard";\n\nstoriesOf("Content > ContentCard", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Card is a container component of a rounded corner layout for other components.\n      It may be displayed with an additional \\`label\\`.\n\n      &nbsp;\n\n      In this view, Content Card is displayed in the default view.\n    `)(() => (\n      <ContentCard>\n        <ContentSection>\n          <ContentParagraph>The first element</ContentParagraph>\n          <ContentParagraph>The second element</ContentParagraph>\n          <ContentParagraph>The third element</ContentParagraph>\n          <ContentParagraph>The fourth element</ContentParagraph>\n          <ContentParagraph>The fifth Element</ContentParagraph>\n          <ContentParagraph>The sixth element</ContentParagraph>\n        </ContentSection>\n      </ContentCard>\n    ))\n  )\n  .add(\n    "With label",\n    withInfo(`\n      Content Card is a container component of a rounded corner layout for other components.\n      It may be displayed with an additional \\`label\\`.\n\n      &nbsp;\n\n      In this view, Content Card is displayed with a \\`label\\`.\n    `)(() => (\n      <ContentCard label={text("Label", "Sample text added to card label")}>\n        <ContentSection>\n          <ContentParagraph>The first element</ContentParagraph>\n          <ContentParagraph>The second element</ContentParagraph>\n          <ContentParagraph>The third element</ContentParagraph>\n          <ContentParagraph>The fourth element</ContentParagraph>\n          <ContentParagraph>The fifth Element</ContentParagraph>\n          <ContentParagraph>The sixth element</ContentParagraph>\n        </ContentSection>\n      </ContentCard>\n    ))\n  );\n',{"Content > ContentCard@With label":{startLoc:{col:4,line:36},endLoc:{col:6,line:55}},"Content > ContentCard@Default":{startLoc:{col:4,line:14},endLoc:{col:6,line:33}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      Content Card is a container component of a rounded corner layout for other components.\n      It may be displayed with an additional `label`.\n\n      &nbsp;\n\n      In this view, Content Card is displayed in the default view.\n    ")(function(){return a.a.createElement(c.a,null,a.a.createElement(d.a,null,a.a.createElement(m.a,null,"The first element"),a.a.createElement(m.a,null,"The second element"),a.a.createElement(m.a,null,"The third element"),a.a.createElement(m.a,null,"The fourth element"),a.a.createElement(m.a,null,"The fifth Element"),a.a.createElement(m.a,null,"The sixth element")))})).add("With label",Object(i.withInfo)("\n      Content Card is a container component of a rounded corner layout for other components.\n      It may be displayed with an additional `label`.\n\n      &nbsp;\n\n      In this view, Content Card is displayed with a `label`.\n    ")(function(){return a.a.createElement(c.a,{label:Object(r.text)("Label","Sample text added to card label")},a.a.createElement(d.a,null,a.a.createElement(m.a,null,"The first element"),a.a.createElement(m.a,null,"The second element"),a.a.createElement(m.a,null,"The third element"),a.a.createElement(m.a,null,"The fourth element"),a.a.createElement(m.a,null,"The fifth Element"),a.a.createElement(m.a,null,"The sixth element")))}))}).call(this,n(15)(e))},1789:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(3),r=n(36),l=n.n(r),c=n(286),s=n.n(c),d=n(14).withStorySource;s.a.displayName="ContentCardLabel",Object(o.storiesOf)("Content > ContentCardLabel",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport ContentCard from "@automatic-labs/ui-components/content/content-card";\nimport ContentCardLabel from "@automatic-labs/ui-components/content/content-card-label";\n\nContentCardLabel.displayName = "ContentCardLabel";\n\nstoriesOf("Content > ContentCardLabel", module).add(\n  "Default",\n  withInfo(`\n      Content Card Label is a highlighted text intended to use inside the Content Card component.\n      It has not any additional properties.\n\n      &nbsp;\n\n      In this view, the component is shown the simple usage of Content Card Label.\n    `)(() => (\n    <ContentCard>\n      <ContentCardLabel>Hello World!</ContentCardLabel>\n    </ContentCard>\n  ))\n);\n',{"Content > ContentCardLabel@Default":{startLoc:{col:2,line:10},endLoc:{col:4,line:22}}})).add("Default",Object(i.withInfo)("\n      Content Card Label is a highlighted text intended to use inside the Content Card component.\n      It has not any additional properties.\n\n      &nbsp;\n\n      In this view, the component is shown the simple usage of Content Card Label.\n    ")(function(){return a.a.createElement(l.a,null,a.a.createElement(s.a,null,"Hello World!"))}))}).call(this,n(15)(e))},1790:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=(n(4),n(3)),r=n(1),l=n(53),c=n(14).withStorySource;l.ContentBulletedList.displayName="ContentBulletedList",Object(o.storiesOf)("Content > ContentBulletedList",e).addDecorator(c('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { ContentBulletedList } from "@automatic-labs/ui-components/content";\n\nContentBulletedList.displayName = "ContentBulletedList";\n\nstoriesOf("Content > ContentBulletedList", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      ContentBulletedList provides unified format for bulleted lists.\n    `)(() => (\n      <ContentBulletedList>\n        <li>first item</li>\n        <li>second item</li>\n      </ContentBulletedList>\n    ))\n  );\n',{"Content > ContentBulletedList@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:21}}})).addDecorator(r.withKnobs).add("Default",Object(i.withInfo)("\n      ContentBulletedList provides unified format for bulleted lists.\n    ")(function(){return a.a.createElement(l.ContentBulletedList,null,a.a.createElement("li",null,"first item"),a.a.createElement("li",null,"second item"))}))}).call(this,n(15)(e))},1791:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(290),s=n.n(c),d=n(14).withStorySource;s.a.displayName="ContentActionSwitch",Object(o.storiesOf)("Content > ContentActionSwitch",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport ContentActionSwitch from "@automatic-labs/ui-components/content/content-action-switch";\n\nContentActionSwitch.displayName = "ContentActionSwitch";\n\nstoriesOf("Content > ContentActionSwitch", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      Content Action Toggle Switch is a control element which is used for switch between two possible variables of property\n      \\`isSelected\\`. Setting this property will allow to changing the value other components dynamically.\n\n      &nbsp;\n\n      In this view, Content Action Toggle Switch is shown as unselected component uses\n      property \\`isSelected: false\\`, which is not default.\n    `)(() => (\n      <ContentActionSwitch\n        isSelected={boolean("Selected", false)}\n        onChange={action("Switch changed")}\n      />\n    ))\n  )\n  .add(\n    "Selected",\n    withInfo(`\n      Content Action Toggle Switch is a control element which is used for switch between two possible variables of property\n      \\`isSelected\\`. Setting this property will allow to changing the value other components dynamically.\n\n      &nbsp;\n\n      In this view, Content Action Toggle Switch is shown as unselected component uses\n      property \\`isSelected: true\\`, which is a default.\n    `)(() => (\n      <ContentActionSwitch\n        isSelected={boolean("Selected", true)}\n        onChange={action("Switch changed")}\n      />\n    ))\n  );\n',{"Content > ContentActionSwitch@Selected":{startLoc:{col:4,line:30},endLoc:{col:6,line:44}},"Content > ContentActionSwitch@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:27}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      Content Action Toggle Switch is a control element which is used for switch between two possible variables of property\n      `isSelected`. Setting this property will allow to changing the value other components dynamically.\n\n      &nbsp;\n\n      In this view, Content Action Toggle Switch is shown as unselected component uses\n      property `isSelected: false`, which is not default.\n    ")(function(){return a.a.createElement(s.a,{isSelected:Object(l.boolean)("Selected",!1),onChange:Object(i.action)("Switch changed")})})).add("Selected",Object(r.withInfo)("\n      Content Action Toggle Switch is a control element which is used for switch between two possible variables of property\n      `isSelected`. Setting this property will allow to changing the value other components dynamically.\n\n      &nbsp;\n\n      In this view, Content Action Toggle Switch is shown as unselected component uses\n      property `isSelected: true`, which is a default.\n    ")(function(){return a.a.createElement(s.a,{isSelected:Object(l.boolean)("Selected",!0),onChange:Object(i.action)("Switch changed")})}))}).call(this,n(15)(e))},1881:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(53),s=n(14).withStorySource;c.ContentActionInline.displayName="ContentActionInline",Object(o.storiesOf)("Content > ContentActionInline",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport { ContentActionInline } from "@automatic-labs/ui-components/content";\n\nContentActionInline.displayName = "ContentActionInline";\n\nstoriesOf("Content > ContentActionInline", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Default",\n    withInfo(`\n      ContentActionInline serves for a formatted way to render inline actions\n    `)(() => (\n      <ContentActionInline\n        promptText={text("promptText", "Prompt text to be displayed above CTA")}\n        actionText={text("actionText", "Call To Action")}\n        onClick={action("Inline action clicked")}\n      />\n    ))\n  );\n',{"Content > ContentActionInline@Default":{startLoc:{col:4,line:13},endLoc:{col:6,line:22}}})).addDecorator(l.withKnobs).add("Default",Object(r.withInfo)("\n      ContentActionInline serves for a formatted way to render inline actions\n    ")(function(){return a.a.createElement(c.ContentActionInline,{promptText:Object(l.text)("promptText","Prompt text to be displayed above CTA"),actionText:Object(l.text)("actionText","Call To Action"),onClick:Object(i.action)("Inline action clicked")})}))}).call(this,n(15)(e))},1884:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(199),s=n.n(c),d=n(108),p=n.n(d),m=n(14).withStorySource;s.a.displayName="ContentActionGroup",Object(o.storiesOf)("Content > ContentActionGroup",e).addDecorator(m('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, boolean } from "@storybook/addon-knobs";\nimport ContentActionGroup from "@automatic-labs/ui-components/content/content-action-group";\nimport ContentActionButton from "@automatic-labs/ui-components/content/content-action-button";\n\nContentActionGroup.displayName = "ContentActionGroup";\n\nstoriesOf("Content > ContentActionGroup", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Separated",\n    withInfo(`\n      Content Action Group is a separate wrapper for Content Button components.\n\n      &nbsp;\n\n      Content Action Group has two different boolean properties to display. These are \\`isSeparated\\` and \\`spaceBetween\\`.\n\n      &nbsp;\n\n      In this view, Content Action Group uses property \\`isSeparated: true\\`, which is a default.\n    `)(() => (\n      <div>\n        <ContentActionGroup isSeparated={boolean("Separated", true)}>\n          <ContentActionButton\n            type="normal"\n            label="Hello Button"\n            onClick={action("Button clicked")}\n          />\n        </ContentActionGroup>\n        <ContentActionGroup isSeparated={boolean("Separated", true)}>\n          <ContentActionButton\n            type="full"\n            label="Hello Button"\n            onClick={action("Button clicked")}\n          />\n        </ContentActionGroup>\n      </div>\n    ))\n  )\n  .add(\n    "Space between",\n    withInfo(`\n      Content Action Group is a separate wrapper for Content Button components.\n\n      &nbsp;\n\n      Content Action Group has two different boolean properties to display. These are \\`isSeparated\\` and \\`spaceBetween\\`.\n\n      &nbsp;\n\n      In this view, Content Action Group uses property \\`spaceBetween: true\\`, which is not a default.\n    `)(() => (\n      <div>\n        <ContentActionGroup spaceBetween={boolean("Space between", true)}>\n          <ContentActionButton\n            type="normal"\n            label="Hello Button"\n            onClick={action("Button clicked")}\n          />\n        </ContentActionGroup>\n        <ContentActionGroup spaceBetween={boolean("Space between", true)}>\n          <ContentActionButton\n            type="full"\n            label="Hello Button"\n            onClick={action("Button clicked")}\n          />\n        </ContentActionGroup>\n      </div>\n    ))\n  );\n',{"Content > ContentActionGroup@Space between":{startLoc:{col:4,line:45},endLoc:{col:6,line:73}},"Content > ContentActionGroup@Separated":{startLoc:{col:4,line:14},endLoc:{col:6,line:42}}})).addDecorator(l.withKnobs).add("Separated",Object(r.withInfo)("\n      Content Action Group is a separate wrapper for Content Button components.\n\n      &nbsp;\n\n      Content Action Group has two different boolean properties to display. These are `isSeparated` and `spaceBetween`.\n\n      &nbsp;\n\n      In this view, Content Action Group uses property `isSeparated: true`, which is a default.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(s.a,{isSeparated:Object(l.boolean)("Separated",!0)},a.a.createElement(p.a,{type:"normal",label:"Hello Button",onClick:Object(i.action)("Button clicked")})),a.a.createElement(s.a,{isSeparated:Object(l.boolean)("Separated",!0)},a.a.createElement(p.a,{type:"full",label:"Hello Button",onClick:Object(i.action)("Button clicked")})))})).add("Space between",Object(r.withInfo)("\n      Content Action Group is a separate wrapper for Content Button components.\n\n      &nbsp;\n\n      Content Action Group has two different boolean properties to display. These are `isSeparated` and `spaceBetween`.\n\n      &nbsp;\n\n      In this view, Content Action Group uses property `spaceBetween: true`, which is not a default.\n    ")(function(){return a.a.createElement("div",null,a.a.createElement(s.a,{spaceBetween:Object(l.boolean)("Space between",!0)},a.a.createElement(p.a,{type:"normal",label:"Hello Button",onClick:Object(i.action)("Button clicked")})),a.a.createElement(s.a,{spaceBetween:Object(l.boolean)("Space between",!0)},a.a.createElement(p.a,{type:"full",label:"Hello Button",onClick:Object(i.action)("Button clicked")})))}))}).call(this,n(15)(e))},1897:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(4),r=n(3),l=n(1),c=n(108),s=n.n(c),d=n(14).withStorySource;s.a.displayName="ContentActionButton";var p={normal:"Normal",full:"Full"};Object(o.storiesOf)("Content > ContentActionButton",e).addDecorator(d('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { action } from "@storybook/addon-actions";\nimport { withInfo } from "@storybook/addon-info";\nimport { withKnobs, text, select } from "@storybook/addon-knobs";\nimport ContentActionButton from "@automatic-labs/ui-components/content/content-action-button";\n\nContentActionButton.displayName = "ContentActionButton";\n\nconst typeNormal = "normal";\nconst typeFull = "full";\nconst typeSelect = {\n  normal: "Normal",\n  full: "Full"\n};\n\nstoriesOf("Content > ContentActionButton", module)\n  .addDecorator(withKnobs)\n  .add(\n    "Normal",\n    withInfo(`\n      The Content Action Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Content Button with a label to display the text.\n\n      &nbsp;\n\n      Content Action Button has two different types: \\`normal\\` and \\`full\\`.\n\n      &nbsp;\n\n      In this view, Content Action Button is displayed in the type \\`normal\\`, which is default property.\n    `)(() => (\n      <ContentActionButton\n        type={select("Type", typeSelect, typeNormal)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  )\n  .add(\n    "Full",\n    withInfo(`\n      The Content Action Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Content Button with a label to display the text.\n\n      &nbsp;\n\n      Content Action Button has two different types: \\`normal\\` and \\`full\\`.\n\n      &nbsp;\n\n      In this view, Content Action Button is displayed in the type \\`full\\`, which does not default property.\n    `)(() => (\n      <ContentActionButton\n        type={select("Type", typeSelect, typeFull)}\n        label={text("Label", "Hello Button")}\n        onClick={action("Button clicked")}\n      />\n    ))\n  );\n',{"Content > ContentActionButton@Full":{startLoc:{col:4,line:41},endLoc:{col:6,line:59}},"Content > ContentActionButton@Normal":{startLoc:{col:4,line:20},endLoc:{col:6,line:38}}})).addDecorator(l.withKnobs).add("Normal",Object(r.withInfo)("\n      The Content Action Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Content Button with a label to display the text.\n\n      &nbsp;\n\n      Content Action Button has two different types: `normal` and `full`.\n\n      &nbsp;\n\n      In this view, Content Action Button is displayed in the type `normal`, which is default property.\n    ")(function(){return a.a.createElement(s.a,{type:Object(l.select)("Type",p,"normal"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})})).add("Full",Object(r.withInfo)("\n      The Content Action Buttons components are used for initializing an action, either in the background or in the foreground.\n      This is the basic use of Content Button with a label to display the text.\n\n      &nbsp;\n\n      Content Action Button has two different types: `normal` and `full`.\n\n      &nbsp;\n\n      In this view, Content Action Button is displayed in the type `full`, which does not default property.\n    ")(function(){return a.a.createElement(s.a,{type:Object(l.select)("Type",p,"full"),label:Object(l.text)("Label","Hello Button"),onClick:Object(i.action)("Button clicked")})}))}).call(this,n(15)(e))},1898:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(32),r=n.n(i),l=n(20),c=n.n(l),s=n(14).withStorySource;Object(o.storiesOf)("Authentication > Auth",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport ContentHeader from "@automatic-labs/ui-components/content/content-header";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\n\nstoriesOf("Authentication > Auth", module).add("Default", () => (\n  <main className="main">\n    <div>\n      <ContentHeader title="Authentication Component" />\n      <ContentSection>\n        <p>\n          This logical component consists of a number of UI subcomponents,\n          requests and logic that work together to manage a user\'s session\n          across all Automatic web applications with minimal development\n          overhead.\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Usage" />\n      <ContentSection>\n        <p className="sourcecode">\n          <span className="sourcecode--red">\n            import auth from \'@automatic-labs/ui-components/auth\'\n          </span>;\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="Auth API" />\n      <ContentSection>\n        <div>\n          <h3>configure(options = {"{}"})</h3>\n          <h4>Options</h4>\n          <ul>\n            <li>\n              <div className="code-segment">\n                <strong>preLogout:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>clientAPIBaseUrl:</strong>\n                <div className="code-segment__text ml5">pathstring</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>clientLoginPath:</strong>\n                <div className="code-segment__text ml5">pathstring</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>clientLogoutPath:</strong>\n                <div className="code-segment__text ml5">pathstring</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>clientMePath:</strong>\n                <div className="code-segment__text ml5">pathstring</div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className="mt50">\n          <h3>validateResponse(response, options)</h3>\n          <h4>Options</h4>\n          <ul>\n            <li>\n              <div className="code-segment">\n                <strong>next:</strong>\n                <div className="code-segment__text ml5">urlstring</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>preLogout:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className="mt50">\n          <h3>checkSSOAuth(cb = () => {"{}"})</h3>\n        </div>\n        <div className="mt50">\n          <h3>login(options = {"{}"})</h3>\n          <ul>\n            <li>\n              <div className="code-segment">\n                <strong>next:</strong>\n                <div className="code-segment__text ml5">urlstring</div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className="mt50">\n          <h3>logout(options = {"{}"})</h3>\n          <h4>Options</h4>\n          <ul>\n            <li>\n              <div className="code-segment">\n                <strong>next:</strong>\n                <div className="code-segment__text ml5">urlstring</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>preLogout:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="SSONavItem" />\n      <ContentSection>\n        <div>\n          <h3>\n            <code className="code-single">AuthSSONavItem</code>\n          </h3>\n          <h4>Props</h4>\n          <ul>\n            <li>\n              <div className="code-segment">\n                <strong>onLogin:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>onLogout:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n            <li>\n              <div className="code-segment">\n                <strong>onError:</strong>\n                <div className="code-segment__text ml5">func</div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </ContentSection>\n    </div>\n  </main>\n));\n',{"Authentication > Auth@Default":{startLoc:{col:47,line:6},endLoc:{col:1,line:152}}})).add("Default",function(){return a.a.createElement("main",{className:"main"},a.a.createElement("div",null,a.a.createElement(r.a,{title:"Authentication Component"}),a.a.createElement(c.a,null,a.a.createElement("p",null,"This logical component consists of a number of UI subcomponents, requests and logic that work together to manage a user's session across all Automatic web applications with minimal development overhead."))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Usage"}),a.a.createElement(c.a,null,a.a.createElement("p",{className:"sourcecode"},a.a.createElement("span",{className:"sourcecode--red"},"import auth from '@automatic-labs/ui-components/auth'"),";"))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"Auth API"}),a.a.createElement(c.a,null,a.a.createElement("div",null,a.a.createElement("h3",null,"configure(options = ","{}",")"),a.a.createElement("h4",null,"Options"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"preLogout:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"clientAPIBaseUrl:"),a.a.createElement("div",{className:"code-segment__text ml5"},"pathstring"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"clientLoginPath:"),a.a.createElement("div",{className:"code-segment__text ml5"},"pathstring"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"clientLogoutPath:"),a.a.createElement("div",{className:"code-segment__text ml5"},"pathstring"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"clientMePath:"),a.a.createElement("div",{className:"code-segment__text ml5"},"pathstring"))))),a.a.createElement("div",{className:"mt50"},a.a.createElement("h3",null,"validateResponse(response, options)"),a.a.createElement("h4",null,"Options"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"next:"),a.a.createElement("div",{className:"code-segment__text ml5"},"urlstring"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"preLogout:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))))),a.a.createElement("div",{className:"mt50"},a.a.createElement("h3",null,"checkSSOAuth(cb = () => ","{}",")")),a.a.createElement("div",{className:"mt50"},a.a.createElement("h3",null,"login(options = ","{}",")"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"next:"),a.a.createElement("div",{className:"code-segment__text ml5"},"urlstring"))))),a.a.createElement("div",{className:"mt50"},a.a.createElement("h3",null,"logout(options = ","{}",")"),a.a.createElement("h4",null,"Options"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"next:"),a.a.createElement("div",{className:"code-segment__text ml5"},"urlstring"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"preLogout:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))))))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"SSONavItem"}),a.a.createElement(c.a,null,a.a.createElement("div",null,a.a.createElement("h3",null,a.a.createElement("code",{className:"code-single"},"AuthSSONavItem")),a.a.createElement("h4",null,"Props"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"onLogin:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"onLogout:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))),a.a.createElement("li",null,a.a.createElement("div",{className:"code-segment"},a.a.createElement("strong",null,"onError:"),a.a.createElement("div",{className:"code-segment__text ml5"},"func"))))))))})}).call(this,n(15)(e))},1906:function(e,t,n){"use strict";(function(e){var t=n(0),a=n.n(t),o=n(5),i=n(32),r=n.n(i),l=n(20),c=n.n(l),s=n(14).withStorySource;Object(o.storiesOf)("Welcome",e).addDecorator(s('import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport ContentHeader from "@automatic-labs/ui-components/content/content-header";\nimport ContentSection from "@automatic-labs/ui-components/content/content-section";\n\nstoriesOf("Welcome", module).add("to Storybook", () => (\n  <main className="main">\n    <div>\n      <ContentHeader title="Welcome to Automatic Frontend Components Storybook" />\n      <ContentSection>\n        <p>\n          Automatic\'s React Application Framework is used for rendering\n          component data consistently from project to project.\n        </p>\n        <p>\n          Components are available as importable React components and can be\n          used to create a wide range of product experiences.\n        </p>\n      </ContentSection>\n      <ContentSection>\n        <p>The types of components to use:</p>\n        <p>- React Components</p>\n        <p>- SCSS Components</p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="React Components" />\n      <ContentSection>\n        <h4>\n          Layout: <code className="code-single">ui-components/layout</code>\n        </h4>\n        <p>\n          A fundamental base component used as a responsive container for other\n          components.\n        </p>\n        <h4>\n          Content: <code className="code-single">ui-components/content</code>\n        </h4>\n        <p>\n          Main content presentation components to consistently present\n          information, records, actions and other content to the user.\n        </p>\n        <h4>\n          Navigation: <code className="code-single">ui-components/nav</code>\n        </h4>\n        <p>\n          Top and bottom navigation bars for web experiences requiring\n          high-level navigation.\n        </p>\n        <h4>\n          Wizard: <code className="code-single">ui-components/wizard</code>\n        </h4>\n        <p>Used to guide a user through a flows and capturing input.</p>\n        <h4>\n          Authentication:{" "}\n          <code className="code-single">ui-components/auth</code>\n        </h4>\n        <p>\n          Includes special components related to site authentication and\n          single-sign-on.\n        </p>\n      </ContentSection>\n    </div>\n    <div>\n      <ContentHeader title="SCSS Components" />\n      <ContentSection>\n        <h4>\n          Styles: <code className="code-single">ui-components/styles</code>\n        </h4>\n        <p>\n          Includes colors and sizing mixing to be used in your own custom\n          components.\n        </p>\n      </ContentSection>\n    </div>\n  </main>\n));\n',{"Welcome@to Storybook":{startLoc:{col:33,line:6},endLoc:{col:1,line:77}}})).add("to Storybook",function(){return a.a.createElement("main",{className:"main"},a.a.createElement("div",null,a.a.createElement(r.a,{title:"Welcome to Automatic Frontend Components Storybook"}),a.a.createElement(c.a,null,a.a.createElement("p",null,"Automatic's React Application Framework is used for rendering component data consistently from project to project."),a.a.createElement("p",null,"Components are available as importable React components and can be used to create a wide range of product experiences.")),a.a.createElement(c.a,null,a.a.createElement("p",null,"The types of components to use:"),a.a.createElement("p",null,"- React Components"),a.a.createElement("p",null,"- SCSS Components"))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"React Components"}),a.a.createElement(c.a,null,a.a.createElement("h4",null,"Layout: ",a.a.createElement("code",{className:"code-single"},"ui-components/layout")),a.a.createElement("p",null,"A fundamental base component used as a responsive container for other components."),a.a.createElement("h4",null,"Content: ",a.a.createElement("code",{className:"code-single"},"ui-components/content")),a.a.createElement("p",null,"Main content presentation components to consistently present information, records, actions and other content to the user."),a.a.createElement("h4",null,"Navigation: ",a.a.createElement("code",{className:"code-single"},"ui-components/nav")),a.a.createElement("p",null,"Top and bottom navigation bars for web experiences requiring high-level navigation."),a.a.createElement("h4",null,"Wizard: ",a.a.createElement("code",{className:"code-single"},"ui-components/wizard")),a.a.createElement("p",null,"Used to guide a user through a flows and capturing input."),a.a.createElement("h4",null,"Authentication: ",a.a.createElement("code",{className:"code-single"},"ui-components/auth")),a.a.createElement("p",null,"Includes special components related to site authentication and single-sign-on."))),a.a.createElement("div",null,a.a.createElement(r.a,{title:"SCSS Components"}),a.a.createElement(c.a,null,a.a.createElement("h4",null,"Styles: ",a.a.createElement("code",{className:"code-single"},"ui-components/styles")),a.a.createElement("p",null,"Includes colors and sizing mixing to be used in your own custom components."))))})}).call(this,n(15)(e))},1956:function(e,t,n){var a={"./nestedObjectAssign":898,"./nestedObjectAssign.js":898};function o(e){var t=i(e);return n(t)}function i(e){var t=a[e];if(!(t+1)){var n=new Error('Cannot find module "'+e+'".');throw n.code="MODULE_NOT_FOUND",n}return t}o.keys=function(){return Object.keys(a)},o.resolve=i,e.exports=o,o.id=1956},1975:function(e,t,n){"use strict";n.r(t),function(e){var t=n(5),a=n(907),o=n(3),i=n.n(o);Object(a.setOptions)({selectedAddonPanel:void 0,addonPanelInRight:!0,hierarchyRootSeparator:/\>/}),Object(o.setDefaults)({source:!0,inline:!0}),Object(t.setAddon)(i.a),Object(t.configure)(function(){n(909)},e)}.call(this,n(15)(e))},1977:function(e,t,n){n(634),n(1976),e.exports=n(1975)},909:function(e,t,n){"use strict";n.r(t);n(1906),n(1898),n(1897),n(1884),n(1881),n(1791),n(1790),n(1789),n(1788),n(1787),n(1786),n(1785),n(1784),n(1783),n(1782),n(1781),n(1780),n(1779),n(1778),n(1777),n(1776),n(1775),n(1763),n(1762),n(1761),n(1760),n(1759),n(1758),n(1742),n(1719),n(1683),n(1682),n(1681),n(1680),n(1679),n(1678),n(1672),n(1671),n(1670),n(1669),n(1668),n(1667),n(1666),n(1665),n(1664),n(1663),n(1662),n(1660),n(1658),n(1656),n(1654),n(1652),n(1583),n(1582),n(1581),n(1580),n(1579),n(1578),n(1577),n(1576),n(1575),n(1574),n(1573),n(1572),n(1571),n(1570),n(1569),n(1568),n(1567),n(1566),n(1565),n(1564),n(1563),n(1562),n(1561),n(1560),n(1559),n(1558),n(1557),n(1556),n(1555),n(1554),n(1553),n(1552),n(1533),n(1532),n(1531)}},[[1977,1,2]]]);
//# sourceMappingURL=preview.0492001dbf02a0b5c578.bundle.js.map